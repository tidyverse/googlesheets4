[{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to googlesheets4","title":"Contributing to googlesheets4","text":"outlines propose change googlesheets4. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to googlesheets4","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to googlesheets4","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to googlesheets4","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"tidyverse/googlesheets4\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to googlesheets4","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to googlesheets4","text":"Please note googlesheets4 project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 googlesheets4 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with googlesheets4","title":"Getting help with googlesheets4","text":"Thanks using googlesheets4! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with googlesheets4","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site. Special tricks package:create googlesheets4 reprex","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with googlesheets4","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with googlesheets4","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/auth.html","id":"gs4_deauth","dir":"Articles","previous_headings":"","what":"gs4_deauth()","title":"googlesheets4 auth","text":"don’t need access private Sheets, use gs4_deauth() indicate need token. puts googlesheets4 de-authorized mode. ’s R script might look plan read Sheets world-readable readable “anyone link”:","code":"library(googlesheets4)  gs4_deauth()  # imagine this is the URL or ID of a Sheet readable by anyone (with a link) ss <- \"?????\" dat <- read_sheet(ss)"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/auth.html","id":"default-auth-behaviour-and-beyond","dir":"Articles","previous_headings":"","what":"Default auth behaviour and beyond","title":"googlesheets4 auth","text":"soon googlesheets4 needs token, tries discover one. fails, engages interactively help get token. successful, token remembered subsequent use R session. Users can take control auth proactively via gs4_auth*() family functions. Examples can control provide: email address Google identity want use. Whether cache tokens . Whether use --band auth. service account token. OAuth app /API key. Auth actually handled gargle package (gargle.r-lib.org), similar googledrive, bigrquery, gmailr, gargle’s documentation articles definitive guide advanced topics.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/auth.html","id":"multi-package-auth","dir":"Articles","previous_headings":"","what":"Multi-package auth","title":"googlesheets4 auth","text":"common use googlesheets4 together googledrive package (googledrive.tidyverse.org). See article Using googlesheets4 googledrive advice streamline auth case.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/dates-and-times.html","id":"attach-packages-and-do-auth","dir":"Articles","previous_headings":"","what":"Attach packages and do auth","title":"Dates and times","text":"Attach googlesheets4. Since eventually create edit Sheets, also auth hidden chunk. run code, expect auth happen. lubridate package (lubridate.tidyverse.org) useful exploration, attach now.","code":"library(googlesheets4) library(lubridate, warn.conflicts = FALSE)"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/dates-and-times.html","id":"how-to-work-with-time-zones-in-a-google-sheet","dir":"Articles","previous_headings":"","what":"How to work with time zones in a Google Sheet","title":"Dates and times","text":"don’t. Literally, can’t. know sounds harsh, truth. Google Sheets offer essentially support time zones life simpler just make peace accept looking UTC times Sheets. short demo: R, capture current time tt reveal current time zone. Note tt displayed R according time zone. Write tt datetime Sheet, configured time zone local R session, create another cell captures exact text presented browser UI tt. Read back R. Note tt datetime displayed differently Sheets locally R. Sheets presents datetimes Coordinated Universal Time (time zone Etc/UTC), even Sheet’s metadata specifies different time zone, America/Vancouver. want understand datetimes R, Sheets, can sort hack around time zone problem, keep reading.","code":"(tt <- Sys.time()) #> [1] \"2023-06-03 13:31:01 PDT\"  Sys.timezone() #> [1] \"America/Vancouver\" dat <- tibble::tibble(   datetime = tt,   as_displayed = gs4_formula(\"=TO_TEXT(A2)\") )  (ss <- gs4_create(   \"no-time-zone-effect\",   sheets = dat,   timeZone = Sys.timezone() )) #> ✔ Creating new Sheet: \"no-time-zone-effect\". #> Spreadsheet name: no-time-zone-effect #>               ID: 1LlZXwI7cxDUHyGbiW9ojYlARmp0mtR6-6xEUCXi-hI4 #>           Locale: en_US #>        Time zone: America/Vancouver #>      # of sheets: 1 #>  #> (Sheet name): (Nominal extent in rows x columns) #>          dat: 2 x 2  read_sheet(ss) #> ✔ Reading from \"no-time-zone-effect\". #> ✔ Range 'dat'. #> # A tibble: 1 × 2 #>   datetime            as_displayed        #>   <dttm>              <chr>               #> 1 2023-06-03 20:31:01 2023-06-03 20:31:01 with_tz(tt, \"Etc/UTC\") #> [1] \"2023-06-03 20:31:01 UTC\""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/dates-and-times.html","id":"need-to-know-basics-of-datetimes","dir":"Articles","previous_headings":"","what":"Need-to-know basics of datetimes","title":"Dates and times","text":"Datetimes complicated topic. dramatically oversimplify things, name making reader new least minimally functional. main system used represent times computing world Unix epoch time: moment time represented number seconds elapsed since 1 January 1970 00:00:00 UTC. “UTC” part stands “Coordinated Universal Time”. Yes, order letters strangely different words! ’s great metaphor entire subject, nothing simple ’d like. Just accept move . UTC may already think “Greenwich Mean Time”, ’ve ever encountered term. three wrinkles must acknowledge, even oversimplifying: live Vancouver, British Columbia, 8 hours behind UTC (UTC−08:00). , least, part year … offset -08:00 standard time, -07:00 daylight savings (roughly March - October). Google Sheets use epoch 30 December 1899 00:00:00 UTC. Horrors spare : different epochs different spreadsheet applications (versions thereof) Lotus 1-2-3 leap year bug. can read Sheets API docs Date/Time serial numbers.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/dates-and-times.html","id":"datetimes-in-r","dir":"Articles","previous_headings":"","what":"Datetimes in R","title":"Dates and times","text":"R uses Unix epoch time. R uses POSIXct class represent datetimes. (Yes, ’s also POSIXlt, recommend focus POSIXct.) ask current time, R prints formatted time zone (, least, tries). can also ask R reveal thinks time zone . time zone purely matter display, ’s really nice touch! comforting get time printed R matches experience time , based looking clock wall (“clock time”). lubridate’s with_tz() function lets explicitly associate datetime time zone, e.g. time zone recognized system. , turn, affects time formatted human eyeballs. Google Sheets ability display moment time according specified time zone. Yes, Sheet associated time zone, influences, even though might expect hope . read datetimes Google Sheet, must: Convert days seconds. Adjust Unix epoch versus spreadsheet epoch. Use resulting number construct instance POSIXct. write datetime Google Sheet, must: Convert seconds days. Adjust spreadsheet epoch versus Unix epoch. Use resulting number create instance CellData schema.","code":"Sys.time() #> [1] \"2023-06-03 13:31:05 PDT\"  Sys.timezone() #> [1] \"America/Vancouver\" tt <- Sys.time()  with_tz(tt, tzone = \"America/Vancouver\") #> [1] \"2023-06-03 13:31:05 PDT\"  with_tz(tt, tzone = \"America/Denver\") #> [1] \"2023-06-03 14:31:05 MDT\"  with_tz(tt, tzone = \"Etc/UTC\") #> [1] \"2023-06-03 20:31:05 UTC\""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/dates-and-times.html","id":"datetimes-in-google-sheets","dir":"Articles","previous_headings":"","what":"Datetimes in Google Sheets","title":"Dates and times","text":"Google Sheets use spreadsheet-y version epoch time. datetime cell holds -called serial number, elapsed days since epoch 30 December 1899 00:00:00 UTC. number displayed human-friendly way, according special token string. Currently googlesheets4 doesn’t offer explicit support dealing format strings, although one day probably . Let’s gain intuition looking datetimes shortly epoch inspecting underlying serial numbers. hidden chunk, create Sheet read R. 1899-12-30 12:00:00 noon day Google Sheets epoch. underlying serial number 0.5, one half-day elapsed since epoch. 1899-12-31 18:00:00 6pm evening day epoch. underlying serial number 1.75, ’s one plus three-quarters day since epoch. Every Google Sheet associated time zone. included metadata returned gs4_get(), like locale, revealed default print Sheets ID. However, time zone different impact – much less impact – user experience time zone R. Sheets’ time zone influence display datetimes. way request datetime displayed according specific time zone – via Sheet’s time zone, via format string, via Sheets function. Datetimes Google Sheets fundamentally UTC-based always display . want see “9:14 ” Sheet, must make sure serial number cell represents 9:14 morning, UTC time. far can tell, effect Sheet’s time zone: formulas =NOW() =TODAY() take local clock time date, according Sheet’s time zone, construct UTC moment date display time date. Therefore =NOW(), especially, almost misleading! capture current moment, UTC, instead fabricates UTC moment matches current local clock time. suggests various hacks truly, deeply want see specific clock times Sheet, non-UTC time zones. Starting UTC moments, must determine apply offset . crude level, can done first principles datetime arithmetic Sheet (“Vancouver −08:00, subtract 8 hours”). ’s daylight savings time complexities (“Except, DST, subtract 7 hours.”). reality, mere mortal ever get right, general. doubt , please watch YouTube video Computerphile’s “Problem Time & Timezones”. need use external, authoritative offset information, either within R Sheet. , show R. Sheets, people tend use Google Apps script solutions based moment.js.","code":"#> ✔ Creating new Sheet: \"near-the-epoch\". #> ✔ Reading from \"near-the-epoch\". #> ✔ Range 'dat'. #> # A tibble: 2 × 2 #>   datetime            serial_number #>   <dttm>                      <dbl> #> 1 1899-12-30 12:00:00          0.5  #> 2 1899-12-31 18:00:00          1.75 (meta <- gs4_example(\"gapminder\") %>%    gs4_get()) #>  Spreadsheet name: gapminder #>                ID: 1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY #>            Locale: en_US #>         Time zone: America/Los_Angeles #>       # of sheets: 5 #> # of named ranges: 1 #>  #> (Sheet name): (Nominal extent in rows x columns) #>       Africa: 625 x 6 #>     Americas: 301 x 6 #>         Asia: 397 x 6 #>       Europe: 361 x 6 #>      Oceania: 25 x 6 #>  #> (Named range): (A1 range)         #>        canada: 'Americas'!A38:F49  meta$time_zone #> [1] \"America/Los_Angeles\""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/dates-and-times.html","id":"worked-example","dir":"Articles","previous_headings":"","what":"Worked example","title":"Dates and times","text":"Let’s make concrete. construct data frame R datetime various versions explore time zone issues. also include couple Google Sheet formulas, trigger datetime work data written Sheet. sketch construction data frame , considerable abuse notation (mixing R code Sheets formulas): Capture current moment time, Sys.time(), explicit time zone. Store versions moment explicit time zones: America/New_York Etc/UTC. Use lubridate::force_tz() create new moment time: moment UTC clock time original moment New York. first Sheets formula use =NOW(), might expect equivalent R’s Sys.time(). ’s like force_tz(Sys.time(), tzone = \"Etc/UTC\"). second formula construct elaborate. uses datetime functions Sheets explicitly construct moment_utc Sheet. last column uses =TO_PURE_NUMBER() reveal underlying serial numbers datetimes. Create 3 Sheets, different approaches time zone: explicit specification time zone. ’s hard say ’ll get ! America/New_York Etc/UTC Capture current moment Sys.time(), construct data frame described , write prepared Google Sheets. First, let’s look dat, data frame sent. ’s hard parse since datetime column list-column. ’s different look, natural character representation column. Read Sheets back R, Sheet explicit time zone set. Main conclusions: 3 versions moment result serial number 3 Sheets. Lesson: R, time zone merely matter display , Sheets, UTC. moment_ny_utc_force (forcing moments NY clock time UTC) results serial number 3 Sheets. Lesson: want see specify clock time Sheet, force R side, writing Sheets. realize fudged datetime data order get desired display. =NOW() one things affected Sheet’s time zone (along =TODAY(). allows force Sheet’s clock time UTC. Clean .","code":"ss_xx  <- gs4_create(\"tz-default\") #> ✔ Creating new Sheet: \"tz-default\". ss_ny  <- gs4_create(\"tz-america-new-york\", timeZone = \"America/New_York\") #> ✔ Creating new Sheet: \"tz-america-new-york\". ss_utc <- gs4_create(\"tz-etc-utc\", timeZone = \"Etc/UTC\") #> ✔ Creating new Sheet: \"tz-etc-utc\".  show_timezone <- function(ss) gs4_get(ss)$time_zone  show_timezone(ss_xx) #> [1] \"Etc/GMT\" show_timezone(ss_ny) #> [1] \"America/New_York\" show_timezone(ss_utc) #> [1] \"Etc/UTC\" dat <- populate_sheets(Sys.time(), c(ss_xx, ss_ny, ss_utc)) #> ✔ Writing to \"tz-default\". #> ✔ Writing to sheet 'Sheet1'. #> ✔ Editing \"tz-default\". #> ✔ Resizing one or more columns in 'Sheet1'. #> ✔ Editing \"tz-default\". #> ✔ Editing sheet 'Sheet1'. #> ✔ Writing to \"tz-america-new-york\". #> ✔ Writing to sheet 'Sheet1'. #> ✔ Editing \"tz-america-new-york\". #> ✔ Resizing one or more columns in 'Sheet1'. #> ✔ Editing \"tz-america-new-york\". #> ✔ Editing sheet 'Sheet1'. #> ✔ Writing to \"tz-etc-utc\". #> ✔ Writing to sheet 'Sheet1'. #> ✔ Editing \"tz-etc-utc\". #> ✔ Resizing one or more columns in 'Sheet1'. #> ✔ Editing \"tz-etc-utc\". #> ✔ Editing sheet 'Sheet1'. dat #> # A tibble: 6 × 3 #>   what                datetime   serial_number                       #>   <chr>               <list>     <fmla>                              #> 1 moment              <dttm [1]> =ARRAYFORMULA(TO_PURE_NUMBER(B2:B)) #> 2 moment_ny           <dttm [1]> NA                                  #> 3 moment_utc          <dttm [1]> NA                                  #> 4 moment_ny_utc_force <dttm [1]> NA                                  #> 5 =NOW()              <fmla [1]> NA                                  #> 6 =DATE(moment_utc)   <fmla [1]> NA #> # A tibble: 6 × 3 #>   what                datetime                           serial_number                       #>   <chr>               <chr>                              <fmla>                              #> 1 moment              2023-06-03 13:31:14 PDT            =ARRAYFORMULA(TO_PURE_NUMBER(B2:B)) #> 2 moment_ny           2023-06-03 16:31:14 EDT            NA                                  #> 3 moment_utc          2023-06-03 20:31:14 UTC            NA                                  #> 4 moment_ny_utc_force 2023-06-03 16:31:14 UTC            NA                                  #> 5 =NOW()              =NOW()                             NA                                  #> 6 =DATE(moment_utc)   =(DATE(2023,6,3)+time(20,31,14.7)) NA read_sheet(ss_xx) %>% as.data.frame() #> ✔ Reading from \"tz-default\". #> ✔ Range 'Sheet1'. #>                  what            datetime serial_number #> 1              moment 2023-06-03 20:31:14      45080.86 #> 2           moment_ny 2023-06-03 20:31:14      45080.86 #> 3          moment_utc 2023-06-03 20:31:14      45080.86 #> 4 moment_ny_utc_force 2023-06-03 16:31:14      45080.69 #> 5              =NOW() 2023-06-03 20:31:16      45080.86 #> 6   =DATE(moment_utc) 2023-06-03 20:31:14      45080.86 read_sheet(ss_ny) %>% as.data.frame() #> ✔ Reading from \"tz-america-new-york\". #> ✔ Range 'Sheet1'. #>                  what            datetime serial_number #> 1              moment 2023-06-03 20:31:14      45080.86 #> 2           moment_ny 2023-06-03 20:31:14      45080.86 #> 3          moment_utc 2023-06-03 20:31:14      45080.86 #> 4 moment_ny_utc_force 2023-06-03 16:31:14      45080.69 #> 5              =NOW() 2023-06-03 16:31:17      45080.69 #> 6   =DATE(moment_utc) 2023-06-03 20:31:14      45080.86 read_sheet(ss_utc) %>% as.data.frame() #> ✔ Reading from \"tz-etc-utc\". #> ✔ Range 'Sheet1'. #>                  what            datetime serial_number #> 1              moment 2023-06-03 20:31:14      45080.86 #> 2           moment_ny 2023-06-03 20:31:14      45080.86 #> 3          moment_utc 2023-06-03 20:31:14      45080.86 #> 4 moment_ny_utc_force 2023-06-03 16:31:14      45080.69 #> 5              =NOW() 2023-06-03 20:31:19      45080.86 #> 6   =DATE(moment_utc) 2023-06-03 20:31:14      45080.86 gs4_find(\"tz-\") %>%    googledrive::drive_trash() #> Files trashed: #> • 'tz-etc-utc' <id: 1N6TD-6vwPy3UgDS4i85_vbOw_F9IPPkMx_04lhmqW_k> #> • 'tz-america-new-york' <id: 153iIAZ5dti6svjSRqg-4uu20x9TztyhtmJIRoravSUY> #> • 'tz-default' <id: 16i-SjgQR5nhbxxGF-dND2otRb1v6lsK-6yYTfUSySdM>"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/drive-and-sheets.html","id":"why-use-googlesheets4-and-googledrive-together","dir":"Articles","previous_headings":"","what":"Why use googlesheets4 and googledrive together?","title":"Using googlesheets4 with googledrive","text":"googlesheets4 wraps Sheets API v4, lets read, write, format data Sheets. Sheets API focused spreadsheet-oriented data metadata, .e. (work)sheets cells. Sheets API offers practically support file-level operations, basic spreadsheet creation. way delete, copy, rename Sheet place folder change sharing permissions. must use Drive API , wrapped googledrive package (https://googledrive.tidyverse.org). Another reason use googlesheets4 googledrive packages together ease file (Sheet) identification. googlesheets4 package requires specify target Sheet ID, name. ’s underlying APIs accept file IDs. googledrive package offers lots support navigating human-friendly file names associated IDs. support applies files Drive , specifically, Sheets. Therefore, common use googledrive googlesheets4 together script app.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/drive-and-sheets.html","id":"coordinating-auth","dir":"Articles","previous_headings":"","what":"Coordinating auth","title":"Using googlesheets4 with googledrive","text":"auth work ’re using googlesheets4 googledrive? path least resistance nothing just let package deal auth. works fine! ’s bit clunky need make sure ’re using Google identity (email) package/API. can nicer proactive auth use token googledrive googlesheets4 work. show couple ways .","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/drive-and-sheets.html","id":"auth-with-googledrive-first-then-googlesheets4","dir":"Articles","previous_headings":"","what":"Auth with googledrive first, then googlesheets4","title":"Using googlesheets4 with googledrive","text":"Outline: Make sure auth happens first googledrive, probably calling googledrive::drive_auth() . default scope \"https://www.googleapis.com/auth/drive\", sufficient Drive Sheets work. Tell googlesheets4 use token googledrive. First attach packages. auth first googledrive. Remember googledrive::drive_auth() accepts additional arguments, e.g. specify Google identity via email = use service account via path =. direct googlesheets4 use token googledrive. Now can use googledrive functions, like googledrive::drive_find() googledrive::drive_get(), list files find name, path, property. , ’ve identified target file, use googlesheets4 spreadsheet-specific tasks. ever want confirm currently authenticated user, packages provide *_user() function reveals info: using service account render article. ’ve used default OAuth flow, correspond email Google account logged .","code":"library(googledrive) library(googlesheets4) drive_auth() gs4_auth(token = drive_token()) drive_find(\"chicken\") #> # A dribble: 1 × 3 #>   name          id       drive_resource    #>   <chr>         <drv_id> <list>            #> 1 chicken-sheet 1StV8oq… <named list [36]>  ss <- drive_get(\"chicken-sheet\") #> ✔ The input `path` resolved to exactly 1 file.  gs4_get(ss) #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: chicken-sheet                                #>               ID: 1StV8oqHa0SVo58ztLGPH5mDMMHIBsiF6VO5GUJjM7u0 #>           Locale: en_US                                        #>        Time zone: America/Los_Angeles                          #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>  chicken.csv: 1000 x 26  read_sheet(ss) #> ✔ Reading from chicken-sheet. #> ✔ Range chicken.csv. #> # A tibble: 5 × 4 #>   chicken                 breed            sex     motto                #>   <chr>                   <chr>            <chr>   <chr>                #> 1 Foghorn Leghorn         Leghorn          rooster That's a joke, ah s… #> 2 Chicken Little          unknown          hen     The sky is falling!  #> 3 Ginger                  Rhode Island Red hen     Listen. We'll eithe… #> 4 Camilla the Chicken     Chantecler       hen     Bawk, buck, ba-gawk. #> 5 Ernie The Giant Chicken Brahma           rooster Put Captain Solo in… drive_user() #> Logged in as: #> • displayName: #>   googlesheets4-dev-docs@robust-fin-276504.iam.gserviceaccount.com #> • emailAddress: #>   googlesheets4-dev-docs@robust-fin-276504.iam.gserviceaccount.com gs4_user() #> ℹ Logged in to googlesheets4 as #>   googlesheets4-dev-docs@robust-fin-276504.iam.gserviceaccount.com."},{"path":"https://googlesheets4.tidyverse.org/dev/articles/drive-and-sheets.html","id":"auth-with-googlesheets4-first-then-googledrive","dir":"Articles","previous_headings":"","what":"Auth with googlesheets4 first, then googledrive","title":"Using googlesheets4 with googledrive","text":"Outline: Proactively auth googlesheets4 specify \"https://www.googleapis.com/auth/drive\" scope. default googlesheets4 scope \"https://www.googleapis.com/auth/spreadsheets\", insufficient general work Drive API. Tell googledrive use token googlesheets4. First attach packages. auth first googlesheets4, specifying Drive scope. Remember gs4_auth() accepts additional arguments, e.g. specify Google identity via email = use service account via path =. direct googledrive use token googlesheets4. Now can use googledrive functions list files find name, path, property. , ’ve identified target file, use googlesheets4 spreadsheet-specific tasks.","code":"library(googlesheets4) library(googledrive) gs4_auth(scope = \"https://www.googleapis.com/auth/drive\") drive_auth(token = gs4_token()) drive_find(\"chicken\") #> # A dribble: 1 × 3 #>   name          id       drive_resource    #>   <chr>         <drv_id> <list>            #> 1 chicken-sheet 1StV8oq… <named list [36]>  ss <- drive_get(\"chicken-sheet\") #> ✔ The input `path` resolved to exactly 1 file.  gs4_get(ss) #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: chicken-sheet                                #>               ID: 1StV8oqHa0SVo58ztLGPH5mDMMHIBsiF6VO5GUJjM7u0 #>           Locale: en_US                                        #>        Time zone: America/Los_Angeles                          #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>  chicken.csv: 1000 x 26  read_sheet(ss) #> ✔ Reading from chicken-sheet. #> ✔ Range chicken.csv. #> # A tibble: 5 × 4 #>   chicken                 breed            sex     motto                #>   <chr>                   <chr>            <chr>   <chr>                #> 1 Foghorn Leghorn         Leghorn          rooster That's a joke, ah s… #> 2 Chicken Little          unknown          hen     The sky is falling!  #> 3 Ginger                  Rhode Island Red hen     Listen. We'll eithe… #> 4 Camilla the Chicken     Chantecler       hen     Bawk, buck, ba-gawk. #> 5 Ernie The Giant Chicken Brahma           rooster Put Captain Solo in…"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/drive-and-sheets.html","id":"scope-savvy","dir":"Articles","previous_headings":"","what":"Scope savvy","title":"Using googlesheets4 with googledrive","text":"need “read” access Drive Sheets, conservative thing specify read-scope. great way limit damage anyone can token – someone else – carelessness malice. storing token remote shared location, wise use conservative scope still gets job done. various scopes relevant googledrive googlesheets4 allow. drive scope allows reading writing Drive Sheets APIs. scope powerful , therefore, dangerous. drive.readonly still allows file identification via Drive can combined spreadsheets plan edit, create, delete Sheets. just using Drive identify Sheets reading Sheets, drive.readonly scope sufficient means can’t modify anything accident. using Drive , .e. always identify Sheets file ID, reading Sheets, need googlesheets4 spreadsheets.readonly sufficient.","code":"PACKAGE_auth(   ...,   scopes = \"https://www.googleapis.com/auth/drive\",   ... ) PACKAGE_auth(   ...,   scopes = c(     \"https://www.googleapis.com/auth/drive.readonly\",     \"https://www.googleapis.com/auth/spreadsheets\"   ),   ... ) PACKAGE_auth(   ...,   scopes = \"https://www.googleapis.com/auth/drive.readonly\",   ... ) gs4_auth(   ...,   scopes = \"https://www.googleapis.com/auth/spreadsheets.readonly\",   ... )"},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/articles/example-sheets.html","id":"how-to-get-hold-of-the-example-sheets-yourself","dir":"Articles","previous_headings":"Example Sheets","what":"How to get hold of the example Sheets yourself","title":"Example Sheets","text":"gs4_examples() returns named vector Sheet IDs. also instance drive_id, make good things happen googledrive. gs4_example() returns exactly one Sheet ID (errors). instance drive_id. also instance sheets_id, means printing (try ) reveal current metadata Sheet. ’s handy snippet open example Sheets browser tabs.","code":"gs4_examples() #> <drive_id[6]> #>                    cell-contents-and-formats  #> 1peJXEeAp5Qt3ENoTvkhvenQ36N3kLyq6sq9Dh2ufQ6E  #>                                chicken-sheet  #> 1ct9t1Efv8pAGN9YO5gC2QfRq2wT4XjNoTMXpVeUghJU  #>                                       deaths  #> 1VTJjWoP1nshbyxmL9JqXgdVsimaYty21LGxxs018H2Y  #>                         formulas-and-formats  #> 1wPLrWOxxEjp3T1nv2YBxn63FX70Mz5W5Tm4tGc-lRms  #>                                    gapminder  #> 1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY  #>                                     mini-gap  #> 1k94ZVVl6sdj0AXfK9MQOuQ4rOhd1PULqpAu2_kr9MAU  gs4_examples(\"gap\") #> <drive_id[2]> #>                                    gapminder  #> 1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY  #>                                     mini-gap  #> 1k94ZVVl6sdj0AXfK9MQOuQ4rOhd1PULqpAu2_kr9MAU  gs4_examples(\"and\") #> <drive_id[2]> #>                    cell-contents-and-formats  #> 1peJXEeAp5Qt3ENoTvkhvenQ36N3kLyq6sq9Dh2ufQ6E  #>                         formulas-and-formats  #> 1wPLrWOxxEjp3T1nv2YBxn63FX70Mz5W5Tm4tGc-lRms gs4_example(\"chicken\") #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: chicken-sheet                                #>               ID: 1ct9t1Efv8pAGN9YO5gC2QfRq2wT4XjNoTMXpVeUghJU #>           Locale: en_US                                        #>        Time zone: America/Los_Angeles                          #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>  chicken.csv: 1000 x 26  gs4_example(\"gap\") #> Error in `gs4_example()`: #> ! Found multiple matching example Sheets: #> • gapminder #> • mini-gap #> ℹ Make the `matches` regular expression more specific. lapply(gs4_examples(), gs4_browse)  # for tidyversers gs4_examples() %>%    purrr::walk(gs4_browse)"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/example-sheets.html","id":"test-sheets","dir":"Articles","previous_headings":"","what":"Test Sheets","title":"Example Sheets","text":"developer-facing, ’s convenient .","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/find-identify-sheets.html","id":"attach-googlesheets4","dir":"Articles","previous_headings":"","what":"Attach googlesheets4","title":"Find and identify Sheets","text":"","code":"library(googlesheets4)"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/find-identify-sheets.html","id":"auth","dir":"Articles","previous_headings":"","what":"Auth","title":"Find and identify Sheets","text":"regular, interactive user, can just let googlesheets4 prompt anything needs re: auth. Since article compiled noninteractively server, arranged googlesheets4 use service account token (shown).","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/find-identify-sheets.html","id":"use-a-url","dir":"Articles","previous_headings":"","what":"Use a URL","title":"Find and identify Sheets","text":"visit Sheet browser, can copy URL clipboard. URLs look something like : breaks like : Notice URL contains (spread)Sheet ID (work)sheet ID. URL happens link official example Sheet holds Gapminder data. googlesheets4 accepts URL ss argument (think “spreadsheet”) many functions: time, although URL may contain (spread)Sheet (work)sheet, extract (spread)Sheet ID. function targets specific (work)sheet, typically specified via arguments like range sheet default “first (visible) sheet”. URLs particularly nice look code, though.","code":"https://docs.google.com/spreadsheets/d/1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY/edit#gid=780868077 https://docs.google.com/spreadsheets/d/SPREADSHEET_ID/edit#gid=SHEET_ID ugly_url <- \"https://docs.google.com/spreadsheets/d/1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY/edit#gid=780868077\" read_sheet(ugly_url) #> ✔ Reading from gapminder. #> ✔ Range Africa. #> # A tibble: 624 × 6 #>   country continent  year lifeExp      pop gdpPercap #>   <chr>   <chr>     <dbl>   <dbl>    <dbl>     <dbl> #> 1 Algeria Africa     1952    43.1  9279525     2449. #> 2 Algeria Africa     1957    45.7 10270856     3014. #> 3 Algeria Africa     1962    48.3 11000948     2551. #> 4 Algeria Africa     1967    51.4 12760499     3247. #> 5 Algeria Africa     1972    54.5 14760787     4183. #> # ℹ 619 more rows"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/find-identify-sheets.html","id":"use-a-sheet-id","dir":"Articles","previous_headings":"","what":"Use a Sheet ID","title":"Find and identify Sheets","text":"can extract Sheet ID URL as_sheets_id() (internally make URL work first place): as_sheets_id() generic function, means knows different types input. character string input, as_sheets_id() passes string , unless looks like URL. looks like URL, use regular expression extract Sheet ID. returned string bears classes sheets_id drive_id (playing nicely googledrive). call unclass(ssid) see naked Sheet ID? , default, print instance sheets_id, attempt show current metadata Sheet. metadata ’ll see call gs4_get() (must call gs4_get() explicitly want store returned metadata). googlesheets4 also accepts Sheet ID ss argument many functions: think script app endure better refer Sheet ID URL. Sheet ID nicer look , complete, minimal. Note demonstration Sheet ID also works provided plain, old string, .e. sheets_id class. contexts, might even prefer store string, order bypass special printing behaviour sheets_id. Sheet specified via character string, googlesheets4 assumes Sheet ID (ID-containing URL). case googledrive, assumes character string file name path. Therefore, maximum happiness, mixed googlesheets4 / googledrive workflow, ’s good idea explicit declare string Sheet ID, case. script app targets specific Sheet, efficient robust way address ID.","code":"ssid <- as_sheets_id(ugly_url) class(ssid) #> [1] \"sheets_id\"  \"drive_id\"   \"vctrs_vctr\" \"character\" unclass(ssid) #> [1] \"1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY\" ssid #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #>  Spreadsheet name: gapminder                                    #>                ID: 1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY #>            Locale: en_US                                        #>         Time zone: America/Los_Angeles                          #>       # of sheets: 5                                            #> # of named ranges: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>       Africa: 625 x 6 #>     Americas: 301 x 6 #>         Asia: 397 x 6 #>       Europe: 361 x 6 #>      Oceania: 25 x 6 #>  #> ── <named ranges> ───────────────────────────────────────────────────── #> (Named range): (A1 range)         #>        canada: 'Americas'!A38:F49 read_sheet(ssid) #> ✔ Reading from gapminder. #> ✔ Range Africa. #> # A tibble: 624 × 6 #>   country continent  year lifeExp      pop gdpPercap #>   <chr>   <chr>     <dbl>   <dbl>    <dbl>     <dbl> #> 1 Algeria Africa     1952    43.1  9279525     2449. #> 2 Algeria Africa     1957    45.7 10270856     3014. #> 3 Algeria Africa     1962    48.3 11000948     2551. #> 4 Algeria Africa     1967    51.4 12760499     3247. #> 5 Algeria Africa     1972    54.5 14760787     4183. #> # ℹ 619 more rows ssid <- \"1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY\" read_sheet(ssid) #> ✔ Reading from gapminder. #> ✔ Range Africa. #> # A tibble: 624 × 6 #>   country continent  year lifeExp      pop gdpPercap #>   <chr>   <chr>     <dbl>   <dbl>    <dbl>     <dbl> #> 1 Algeria Africa     1952    43.1  9279525     2449. #> 2 Algeria Africa     1957    45.7 10270856     3014. #> 3 Algeria Africa     1962    48.3 11000948     2551. #> 4 Algeria Africa     1967    51.4 12760499     3247. #> 5 Algeria Africa     1972    54.5 14760787     4183. #> # ℹ 619 more rows ssid <- as_sheets_id(\"1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY\") read_sheet(ssid) #> ✔ Reading from gapminder. #> ✔ Range Africa. #> # A tibble: 624 × 6 #>   country continent  year lifeExp      pop gdpPercap #>   <chr>   <chr>     <dbl>   <dbl>    <dbl>     <dbl> #> 1 Algeria Africa     1952    43.1  9279525     2449. #> 2 Algeria Africa     1957    45.7 10270856     3014. #> 3 Algeria Africa     1962    48.3 11000948     2551. #> 4 Algeria Africa     1967    51.4 12760499     3247. #> 5 Algeria Africa     1972    54.5 14760787     4183. #> # ℹ 619 more rows"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/find-identify-sheets.html","id":"use-the-sheets-name-uses-googledrive","dir":"Articles","previous_headings":"","what":"Use the Sheet’s name (uses googledrive)","title":"Find and identify Sheets","text":"big feature googledrive package ability navigate human-friendly file names machine-friendly file IDs. Drive Sheets APIs require use IDs, illusion can identify Drive file name provided googledrive package. (Google Sheet just special case Drive file … file happens spreadsheet.) need refer Sheet name, .e. need lookup file ID based name, must use googledrive package . reasons using two packages together: Sheets API intentionally narrow focus spreadsheet operations involving worksheets cells. General whole-file operations, like copy / rename / move / share, must done via Drive API , within R, via googledrive. See article Using googlesheets4 googledrive . ’s time attach googledrive (addition already-attached googlesheets4): (hidden auth chunk, actually put shared token force googlesheets4 googledrive, anticipating moment.) Sheet ’ve working named “gapminder” owned account ’ve logged . can use googledrive::drive_get() identify file name: drive_get() returns dribble, “Drive tibble”, row holds info Drive file. as_sheets_id() also accepts one-row dribble, can get right normal googlesheets4 workflows: Since generally call as_sheets_id() whatever user provides ss, can even pass gap_dribble straight googlesheets4 functions. Two important things note: hidden auth , taken special measures use shared token googledrive googlesheets4. Remember use drive_get() Sheet name . don’t Sheet named “gapminder”, code won’t yield anything. rough rule thumb, don’t see spreadsheets.google.com, can’t drive_get() either.","code":"library(googledrive) (gap_dribble <- drive_get(\"gapminder\")) #> ✔ The input `path` resolved to exactly 1 file. #> # A dribble: 1 × 4 #>   name      path      id       drive_resource    #>   <chr>     <chr>     <drv_id> <list>            #> 1 gapminder gapminder 1ksUQqF… <named list [34]> gap_id <- as_sheets_id(gap_dribble) unclass(gap_id) #> [1] \"1ksUQqF_K5yKbJr_uWVnFVZhVuxwMyZCvK6MZOEb7Kew\" gap_id #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #>  Spreadsheet name: gapminder                                    #>                ID: 1ksUQqF_K5yKbJr_uWVnFVZhVuxwMyZCvK6MZOEb7Kew #>            Locale: en_US                                        #>         Time zone: America/Los_Angeles                          #>       # of sheets: 5                                            #> # of named ranges: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>       Africa: 625 x 6 #>     Americas: 301 x 6 #>         Asia: 397 x 6 #>       Europe: 361 x 6 #>      Oceania: 25 x 6 #>  #> ── <named ranges> ───────────────────────────────────────────────────── #> (Named range): (A1 range)         #>        canada: 'Americas'!A38:F49 sheet_properties(gap_dribble) #> # A tibble: 5 × 8 #>   name     index         id type  visible grid_rows grid_columns data   #>   <chr>    <int>      <int> <chr> <lgl>       <int>        <int> <list> #> 1 Africa       0  780868077 GRID  TRUE          625            6 <NULL> #> 2 Americas     1   45759261 GRID  TRUE          301            6 <NULL> #> 3 Asia         2 1984823455 GRID  TRUE          397            6 <NULL> #> 4 Europe       3 1503562052 GRID  TRUE          361            6 <NULL> #> 5 Oceania      4 1796776040 GRID  TRUE           25            6 <NULL>"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/find-identify-sheets.html","id":"list-your-sheets-uses-googledrive","dir":"Articles","previous_headings":"","what":"List your Sheets (uses googledrive)","title":"Find and identify Sheets","text":"want see Sheets? Sheets “gap” name? googledrive::drive_find() workhorse function tasks general Drive files. lots bells whistles can use one narrow search Google Sheets: handy ’ve made gs4_find() googlesheets4, shortcut drive_find(type = \"spreadsheet\"): See examples drive_find() gs4_find() ideas search Drive effectively Sheets.","code":"drive_find(type = \"spreadsheet\") #> # A dribble: 9 × 3 #>   name              id       drive_resource    #>   <chr>             <drv_id> <list>            #> 1 geological-canary 13fmUp0… <named list [37]> #> 2 blubbery-lobo     1foTYXQ… <named list [36]> #> 3 bacciform-booby   15WqCxH… <named list [35]> #> 4 childsafe-squid   1uGu_BH… <named list [36]> #> 5 fiery-hart        18KiiL2… <named list [36]> #> # ℹ 4 more rows gs4_find() #> # A dribble: 9 × 3 #>   name              id       drive_resource    #>   <chr>             <drv_id> <list>            #> 1 geological-canary 13fmUp0… <named list [37]> #> 2 blubbery-lobo     1foTYXQ… <named list [36]> #> 3 bacciform-booby   15WqCxH… <named list [35]> #> 4 childsafe-squid   1uGu_BH… <named list [36]> #> 5 fiery-hart        18KiiL2… <named list [36]> #> # ℹ 4 more rows"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/fun-with-googledrive-and-readxl.html","id":"attach-packages","dir":"Articles","previous_headings":"","what":"Attach packages","title":"Fun with googledrive and readxl","text":"","code":"library(googlesheets4) library(googledrive) #>  #> Attaching package: 'googledrive' #> The following objects are masked from 'package:googlesheets4': #>  #>     request_generate, request_make library(readxl)"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/fun-with-googledrive-and-readxl.html","id":"auth","dir":"Articles","previous_headings":"","what":"Auth","title":"Fun with googledrive and readxl","text":"regular, interactive user, can just let googlesheets4 prompt anything needs re: auth. Since article compiled noninteractively server, activate service token , hidden chunk. also using shared token Sheets Drive. can read work article Using googlesheets4 googledrive.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/fun-with-googledrive-and-readxl.html","id":"create-a-private-sheet-from-csv-with-the-drive-api","dir":"Articles","previous_headings":"","what":"Create a private Sheet from csv with the Drive API","title":"Fun with googledrive and readxl","text":"Put iris data csv file. Use googledrive::drive_upload() upload csv simultaneously convert Sheet. Read data private Sheet R.","code":"(iris_tempfile <- tempfile(pattern = \"iris-\", fileext = \".csv\")) #> [1] \"/tmp/RtmpAXCfzm/iris-276363271171.csv\" write.csv(iris, iris_tempfile, row.names = FALSE) (iris_ss <- drive_upload(iris_tempfile, type = \"spreadsheet\")) #> Local file: #> • /tmp/RtmpAXCfzm/iris-276363271171.csv #> Uploaded into Drive file: #> • iris-276363271171 <id: 1GljyuQA4KYgWpbW_j5LP9RYNIP6G2ovpzb0YY227aAo> #> With MIME type: #> • application/vnd.google-apps.spreadsheet #> # A dribble: 1 × 3 #>   name              id       drive_resource    #>   <chr>             <drv_id> <list>            #> 1 iris-276363271171 1GljyuQ… <named list [36]>  # visit the new Sheet in the browser, in an interactive session! drive_browse(iris_ss) read_sheet(iris_ss, range = \"B1:D6\") #> ✔ Reading from iris-276363271171. #> ✔ Range B1:D6. #> # A tibble: 5 × 3 #>   Sepal.Width Petal.Length Petal.Width #>         <dbl>        <dbl>       <dbl> #> 1         3.5          1.4         0.2 #> 2         3            1.4         0.2 #> 3         3.2          1.3         0.2 #> 4         3.1          1.5         0.2 #> 5         3.6          1.4         0.2"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/fun-with-googledrive-and-readxl.html","id":"create-a-local-xlsx-from-a-sheet-with-the-drive-api","dir":"Articles","previous_headings":"","what":"Create a local xlsx from a Sheet with the Drive API","title":"Fun with googledrive and readxl","text":"Download Sheet Excel workbook.","code":"(iris_xlsxfile <- sub(\"[.]csv\", \".xlsx\", iris_tempfile)) #> [1] \"/tmp/RtmpAXCfzm/iris-276363271171.xlsx\" drive_download(iris_ss, path = iris_xlsxfile, overwrite = TRUE) #> File downloaded: #> • iris-276363271171 <id: 1GljyuQA4KYgWpbW_j5LP9RYNIP6G2ovpzb0YY227aAo> #> Saved locally as: #> • /tmp/RtmpAXCfzm/iris-276363271171.xlsx"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/fun-with-googledrive-and-readxl.html","id":"read-xlsx-with-readxl","dir":"Articles","previous_headings":"","what":"Read xlsx with readxl","title":"Fun with googledrive and readxl","text":"Read iris data back via readxl::read_excel().","code":"if (requireNamespace(\"readxl\", quietly = TRUE)) {   readxl::read_excel(iris_xlsxfile)   } #> # A tibble: 150 × 5 #>    Sepal.Length Sepal.Width Petal.Length Petal.Width Species #>           <dbl>       <dbl>        <dbl>       <dbl> <chr>   #>  1          5.1         3.5          1.4         0.2 setosa  #>  2          4.9         3            1.4         0.2 setosa  #>  3          4.7         3.2          1.3         0.2 setosa  #>  4          4.6         3.1          1.5         0.2 setosa  #>  5          5           3.6          1.4         0.2 setosa  #>  6          5.4         3.9          1.7         0.4 setosa  #>  7          4.6         3.4          1.4         0.3 setosa  #>  8          5           3.4          1.5         0.2 setosa  #>  9          4.4         2.9          1.4         0.2 setosa  #> 10          4.9         3.1          1.5         0.1 setosa  #> # ℹ 140 more rows"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/fun-with-googledrive-and-readxl.html","id":"clean-up","dir":"Articles","previous_headings":"","what":"Clean up","title":"Fun with googledrive and readxl","text":"","code":"file.remove(iris_tempfile, iris_xlsxfile) #> [1] TRUE TRUE drive_trash(iris_ss) #> File trashed: #> • iris-276363271171 <id: 1GljyuQA4KYgWpbW_j5LP9RYNIP6G2ovpzb0YY227aAo>"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/function-class-names.html","id":"prefixes-gs4-sheet-range","dir":"Articles","previous_headings":"","what":"Prefixes: gs4, sheet, range","title":"Function and class names","text":"Almost functions googlesheets4 one prefixes: gs4_, referring variously googlesheets4 package, v4 Google Sheets API, operations one (spread)Sheets sheet_, referring operation one (work)sheets range_, referring operation range cells table summarizes gs4_, sheet_, range_ mean conceptually arguments can expect see function signature. Take table grain salt. violations function signatures, justified, ’s true broad strokes. remember gs4_ also used general, package-level functions.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/function-class-names.html","id":"previous-use-of-sheets_-prefix","dir":"Articles","previous_headings":"","what":"Previous use of sheets_ prefix","title":"Function and class names","text":"googlesheets4 first appeared CRAN v0.1.1 (released 2020-03-21), nearly universal sheets_ prefix. version 0.2.0 (released 2020-05-08), googlesheets4 gained tremendous amount writing editing functionality. time, became clear sheets_ scheme impediment generating descriptive, predictable function names. example, can delete (spread)Sheet, (work)sheet, cell range. one functions named sheets_delete()? name others? good answer , adopted 3 prefix strategy. function existed v0.1.1 formally deprecated v0.2.0 removed v1.0.0. tables documenting name changes, also cover functions existed dev versions, may seen use community. time goes , article becomes historical note. dev version googlesheets4 bumped 0.1.1.9000 0.1.1.9100 sheets_ naming scheme abandoned. last commit old scheme also tagged “v0.1.1.9000”, means one can install specific state via devtools::install_github(\"tidyverse/googlesheets4@v0.1.1.9000\").","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/function-class-names.html","id":"auth-and-the-sheet-api-v4-surface","dir":"Articles","previous_headings":"Previous use of sheets_ prefix","what":"Auth and the Sheet API v4 surface","title":"Function and class names","text":"(*) indicates functions CRAN versions <= v0.1.1.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/function-class-names.html","id":"spreadsheet-scope","dir":"Articles","previous_headings":"Previous use of sheets_ prefix","what":"(Spread)sheet scope","title":"Function and class names","text":"(*) indicates functions CRAN versions <= v0.1.1.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/function-class-names.html","id":"worksheet-scope","dir":"Articles","previous_headings":"Previous use of sheets_ prefix","what":"(Work)sheet scope","title":"Function and class names","text":"(*) indicates functions CRAN versions <= v0.1.1.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/function-class-names.html","id":"range-scope","dir":"Articles","previous_headings":"Previous use of sheets_ prefix","what":"Range scope","title":"Function and class names","text":"(*) indicates functions CRAN versions <= v0.1.1. Note: “range” can mean two things Sheets API: A1-style range, given string. Examples: A1:B3 (cell range), Africa (worksheet name), Africa!A1:B3 (sheet-qualified cell range), arts_data (named range). API endpoints require , believe . cell rectangle described start/end row/column, packaged instance schema, GridRange. API endpoints use . Fun fact: “cell rectangle” type range almost sub-case A1-style range, except rectangles open one sides can described via GridRange expressed A1-range string. mostly-developer-facing article Range specification documents approach internally. range_ prefix encompasses types ranges function indicate sorts range supports, determined behaviour associated API endpoint.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/function-class-names.html","id":"classes","dir":"Articles","previous_headings":"","what":"Classes","title":"Function and class names","text":"user facing class related schema named like googlesheets4_schema_name, schema name lower_snake_case. internal schema-derived classes like googlesheets4_schema_SchemaName / googlesheets4_schema / list. Use googlesheets4_schema prefix retain API’s UpperCamelCase.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/googlesheets4-reprex.html","id":"use-a-public-example-sheet","dir":"Articles","previous_headings":"","what":"Use a public example Sheet","title":"How to create a googlesheets4 reprex","text":"can make point one example Sheets, exposed via gs4_examples() gs4_example(), ! can call gs4_deauth() explicitly reprex shut attempt get token.","code":"library(googlesheets4)  gs4_deauth()  # put the googlesheets4 code you want to reproduce below here # the following is just an example, replace it with your own code gs4_example(\"mini-gap\") %>%    gs4_get()"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/googlesheets4-reprex.html","id":"create-a-sheet-and-make-it-world-readable","dir":"Articles","previous_headings":"","what":"Create a Sheet and make it world-readable","title":"How to create a googlesheets4 reprex","text":"can create example Sheet makes point make readable “anyone link”, ! can call gs4_deauth() explicitly reprex shut attempt get token. make Sheet world-readable? setup ! part reprex. Two options: browser: Share (big green button) > Advanced > access … Change > Link sharing: - Anyone link Using googledrive: Now make reprex just like official example Sheets:","code":"library(googledrive)  x <- drive_get(\"YOUR_SHEET_NAME\")  drive_share(x, role = \"reader\", type = \"anyone\") library(googlesheets4)  gs4_deauth()  # put the googlesheets4 code you want to reproduce below here # the following is just an example, replace it with your own code gs4_get(\"YOUR_SHEET_ID_OR_URL_GOES_HERE\")"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/googlesheets4-reprex.html","id":"grant-access-to-specific-users","dir":"Articles","previous_headings":"Create a Sheet and make it world-readable","what":"Grant access to specific user(s)","title":"How to create a googlesheets4 reprex","text":"can’t create world-readable example Sheet, perhaps can still share one specific individuals, package maintainer. share specific user(s): browser: Share (big green button) > People > Enter names email addresses. Using googledrive: See next section advice reprex code.","code":"library(googledrive)  x <- drive_get(\"YOUR_SHEET_NAME\")  drive_share(   x,    role = \"reader\", type = \"user\",   email_address = \"jane_package_maintainer@example.org\" )"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/googlesheets4-reprex.html","id":"use-a-private-sheet","dir":"Articles","previous_headings":"","what":"Use a private Sheet","title":"How to create a googlesheets4 reprex","text":"reprex::reprex() eventually runs code fresh, non-interactive R session. won’t anything auth, like select right identity approve use cached token. general situation documented gargle vignette Non-interactive auth. ’s short version: Develop code snippet works interactively , clean R session. Note logged . gs4_user() reveals ’re sure. Insert explicit call gs4_auth(email = \"SOMEONE@example.org) code (see ). Use reprex::reprex(). ’s example snippet suitable reprex::reprex(), assuming user successfully run interactively, ’s cached token “jane_doe@example.com”. ’re reluctant reveal email address /spreadsheet id, can use special comments create hidden chunk visible body chunk. Sheet private one else able access anyway, still good option show exactly ’re seeing locally.","code":"library(googlesheets4)  gs4_auth(email = \"jane_doe@example.com\")  # put the googlesheets4 code you want to reproduce below here # the following is just an example, replace it with your own code ssid <- \"some_very_long_string_of_letters_and_digits\" gs4_get(ssid) library(googlesheets4)  #+ include = FALSE # code here is executed but the results won't appear in rendered reprex gs4_auth(email = \"jane_doe@example.com\") ssid <- \"some_very_long_string_of_letters_and_digits\"  #+ include = TRUE # put the googlesheets4 code you want to reproduce below here # the following is just an example, replace it with your own code gs4_get(ssid)"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/googlesheets4.html","id":"read_sheet-a-k-a--range_read","dir":"Articles","previous_headings":"","what":"read_sheet(), a.k.a. range_read()","title":"Get started with googlesheets4","text":"read_sheet() main “read” function evoke readr::read_csv() readxl::read_excel(). ’s alias range_read(), correct name function according scheme naming googlesheets4 functions. can use interchangeably. googlesheets4 pipe-friendly (reexports %>%), works just fine without pipe. read_sheet() designed “just work”, purposes, time. can read straight Sheets browser URL: However, URLs pleasant work . often, want identify Sheet ID: name, requires assist googledrive package (googledrive.tidyverse.org): Note name-based approach work access Sheet named “gapminder”. Sheet names used absolute identifiers; Sheet ID can play role. Sheet identification concepts strategies, see article Find Identify Sheets. See article Read Sheets reading specific (work)sheet ranges, setting column type, getting low-level cell data.","code":"read_sheet(\"https://docs.google.com/spreadsheets/d/1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY/edit#gid=780868077\") #> ✔ Reading from gapminder. #> ✔ Range Africa. #> # A tibble: 624 × 6 #>   country continent  year lifeExp      pop gdpPercap #>   <chr>   <chr>     <dbl>   <dbl>    <dbl>     <dbl> #> 1 Algeria Africa     1952    43.1  9279525     2449. #> 2 Algeria Africa     1957    45.7 10270856     3014. #> 3 Algeria Africa     1962    48.3 11000948     2551. #> 4 Algeria Africa     1967    51.4 12760499     3247. #> 5 Algeria Africa     1972    54.5 14760787     4183. #> # ℹ 619 more rows read_sheet(\"1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY\") #> ✔ Reading from gapminder. #> ✔ Range Africa. #> # A tibble: 624 × 6 #>   country continent  year lifeExp      pop gdpPercap #>   <chr>   <chr>     <dbl>   <dbl>    <dbl>     <dbl> #> 1 Algeria Africa     1952    43.1  9279525     2449. #> 2 Algeria Africa     1957    45.7 10270856     3014. #> 3 Algeria Africa     1962    48.3 11000948     2551. #> 4 Algeria Africa     1967    51.4 12760499     3247. #> 5 Algeria Africa     1972    54.5 14760787     4183. #> # ℹ 619 more rows library(googledrive)  drive_get(\"gapminder\") %>%    read_sheet() #> ✔ Reading from gapminder. #> # A tibble: 624 × 6 #>   country continent  year lifeExp      pop gdpPercap #>   <chr>   <chr>     <dbl>   <dbl>    <dbl>     <dbl> #> 1 Algeria Africa     1952    43.1  9279525     2449. #> 2 Algeria Africa     1957    45.7 10270856     3014. #> 3 Algeria Africa     1962    48.3 11000948     2551. #> 4 Algeria Africa     1967    51.4 12760499     3247. #> 5 Algeria Africa     1972    54.5 14760787     4183. #> # ℹ 619 more rows"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/googlesheets4.html","id":"example-sheets-and-gs4_browse","dir":"Articles","previous_headings":"","what":"Example Sheets and gs4_browse()","title":"Get started with googlesheets4","text":"’ve made Sheets available “anyone link”, use examples docs. Two helper functions make easy get hands file IDs. gs4_examples() lists example Sheets can also filter matching names regular expression. gs4_example() requires regular expression returns exactly 1 Sheet ID (throws error). ’d like see Sheet browser, including example Sheets, use gs4_browse():","code":"gs4_example(\"chicken-sheet\") %>%    read_sheet() #> ✔ Reading from chicken-sheet. #> ✔ Range chicken.csv. #> # A tibble: 5 × 4 #>   chicken                 breed            sex     motto                #>   <chr>                   <chr>            <chr>   <chr>                #> 1 Foghorn Leghorn         Leghorn          rooster That's a joke, ah s… #> 2 Chicken Little          unknown          hen     The sky is falling!  #> 3 Ginger                  Rhode Island Red hen     Listen. We'll eithe… #> 4 Camilla the Chicken     Chantecler       hen     Bawk, buck, ba-gawk. #> 5 Ernie The Giant Chicken Brahma           rooster Put Captain Solo in… gs4_example(\"deaths\") %>%   gs4_browse()"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/googlesheets4.html","id":"sheet-metadata","dir":"Articles","previous_headings":"","what":"Sheet metadata","title":"Get started with googlesheets4","text":"gs4_get() exposes Sheet metadata, details worksheets named ranges. sheet_properties() sheet_names() two members larger family functions dealing (work)sheets within (spread)Sheet. metadata exposed gs4_get() also revealed whenever print object (can converted ) sheets_id (S3 class use mark Sheet IDs). gs4_get() related googledrive::drive_get(). functions return metadata file Google Drive, ID name. However, gs4_get() reveals additional metadata specific Drive files happen Sheets, info worksheets named ranges.","code":"ss <- gs4_example(\"deaths\")  gs4_get(ss) #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #>  Spreadsheet name: deaths                                       #>                ID: 1VTJjWoP1nshbyxmL9JqXgdVsimaYty21LGxxs018H2Y #>            Locale: en_US                                        #>         Time zone: America/Los_Angeles                          #>       # of sheets: 2                                            #> # of named ranges: 2                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>         arts: 1000 x 26 #>        other: 1000 x 26 #>  #> ── <named ranges> ───────────────────────────────────────────────────── #> (Named range): (A1 range)     #>     arts_data: 'arts'!A5:F15  #>    other_data: 'other'!A5:F15  sheet_properties(ss) #> # A tibble: 2 × 8 #>   name  index         id type  visible grid_rows grid_columns data   #>   <chr> <int>      <int> <chr> <lgl>       <int>        <int> <list> #> 1 arts      0 1512440582 GRID  TRUE         1000           26 <NULL> #> 2 other     1  278837031 GRID  TRUE         1000           26 <NULL>  sheet_names(ss) #> [1] \"arts\"  \"other\""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/googlesheets4.html","id":"writing-sheets","dir":"Articles","previous_headings":"","what":"Writing Sheets","title":"Get started with googlesheets4","text":"writing functions recent additions may still see refinements re: user interface function . ’re interested hear functions feel terms ergonomics. sheet_write() writes data frame Sheet. required argument data. ’ll notice new (spread)Sheet randomly generated name. problem, use gs4_create() instead, affords control various aspects new Sheet. Let’s start : delete Sheet call gs4_create(), can specify new Sheet’s name. sheet_write() can write new existing (work)sheets Sheet. Let’s write chickwts data new sheet ss. can also use sheet_write() replace data existing sheet. sheet_append() adds one rows existing sheet. related function – range_write() – writes arbitrary data, arbitrary range. different “feel” gs4_create(), sheet_write(), sheet_append(), assume ’re writing growing table data (work)sheet. range_write() much surgical limited. range_write() makes fewer assumptions ’s writing . also family sheet_*() functions pure (work)sheet operations, add delete. take one last look sheets created ss, clean . article Write Sheets even detail.","code":"df <- data.frame(x = 1:3, y = letters[1:3])  ss <- sheet_write(df) #> ✔ Creating new Sheet: unfearing-guineafowl. ss #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: unfearing-guineafowl                         #>               ID: 1GyFFi-LjPTp81ZzHMd3mNEbOUPe3S7lQVotcYj5cab8 #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>           df: 4 x 2 googledrive::drive_trash(ss) #> File trashed: #> • unfearing-guineafowl #>   <id: 1GyFFi-LjPTp81ZzHMd3mNEbOUPe3S7lQVotcYj5cab8>  ss <- gs4_create(\"testy-hedgehog\", sheets = df) #> ✔ Creating new Sheet: testy-hedgehog. ss #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: testy-hedgehog                               #>               ID: 1kKChqUhmG1p2bTANPv8xuOwhZy9kR1qzZPjab51TcMY #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>           df: 4 x 2 sheet_write(chickwts, ss) #> ✔ Writing to testy-hedgehog. #> ✔ Writing to sheet chickwts. ss #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: testy-hedgehog                               #>               ID: 1kKChqUhmG1p2bTANPv8xuOwhZy9kR1qzZPjab51TcMY #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 2                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>           df: 4 x 2 #>     chickwts: 72 x 2 sheet_write(data.frame(x = 4:10, letters[4:10]), ss, sheet = \"df\") #> ✔ Writing to testy-hedgehog. #> ✔ Writing to sheet df. read_sheet(ss, sheet = \"df\") #> ✔ Reading from testy-hedgehog. #> ✔ Range ''df''. #> # A tibble: 7 × 2 #>       x letters.4.10. #>   <dbl> <chr>         #> 1     4 d             #> 2     5 e             #> 3     6 f             #> 4     7 g             #> 5     8 h             #> # ℹ 2 more rows ss %>% sheet_append(data.frame(x = 11, letters[11]), sheet = \"df\") #> ✔ Writing to testy-hedgehog. #> ✔ Appending 1 row to df. read_sheet(ss, sheet = \"df\") #> ✔ Reading from testy-hedgehog. #> ✔ Range ''df''. #> # A tibble: 8 × 2 #>       x letters.4.10. #>   <dbl> <chr>         #> 1     4 d             #> 2     5 e             #> 3     6 f             #> 4     7 g             #> 5     8 h             #> # ℹ 3 more rows sheet_properties(ss) #> # A tibble: 2 × 8 #>   name     index         id type  visible grid_rows grid_columns data   #>   <chr>    <int>      <int> <chr> <lgl>       <int>        <int> <list> #> 1 df           0 1150273873 GRID  TRUE            9            2 <NULL> #> 2 chickwts     1 2011866183 GRID  TRUE           72            2 <NULL>  googledrive::drive_trash(ss) #> File trashed: #> • testy-hedgehog <id: 1kKChqUhmG1p2bTANPv8xuOwhZy9kR1qzZPjab51TcMY>"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/messages-and-errors.html","id":"user-facing-messages","dir":"Articles","previous_headings":"","what":"User-facing messages","title":"Messages and errors in googlesheets4","text":"Everything emitted helpers utils-ui.R: specifically, gs4_bullets() , errors, gs4_abort(). helpers wrappers around cli::cli_inform() cli::cli_abort(), respectively. helpers encourage consistent styling make possible selectively silence messages coming googlesheets4. googlesheets4 message helpers: Use cli package get interpolation, inline markup, pluralization. Use googlesheets4’s custom theme, styles Sheet name, worksheet name, range. Eventually route rlang::inform(), important inform() prints standard output interactive sessions. means informational messages won’t “look” errors can generally stylish, least IDEs like RStudio. control \"googlesheets4_quiet\" option. ’s unset, default show messages (unless ’re testing, .e. environment variable TESTTHAT \"true\"). googlesheets4_quiet = TRUE suppress messages. withr-style convenience helpers: local_gs4_quiet() with_gs4_quiet().","code":"gs4_bullets(c(         \"noindent\",   \" \" = \"indent\",   \"*\" = \"bullet\",   \">\" = \"arrow\",   \"v\" = \"Doing good stuff for YOU the user\",   \"x\" = \"Nope nope nope\",   \"!\" = \"You might want to know about this\",   \"i\" = \"The more you know!\" )) #> noindent #>   indent #> • bullet #> → arrow #> ✔ Doing good stuff for YOU the user #> ✖ Nope nope nope #> ! You might want to know about this #> ℹ The more you know!"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/messages-and-errors.html","id":"inline-styling","dir":"Articles","previous_headings":"User-facing messages","what":"Inline styling","title":"Messages and errors in googlesheets4","text":"use inline classes: .s_sheet name Google Sheet (custom) .w_sheet name worksheet (custom) .range A1-style range named range (custom) .code column data frame reserved words, NULL, TRUE, NA .arg, .fun, .path, .cls, .url. .email usual purpose may demo well via pkgdown, interactive experience nice. , don’t include period (.) end message form: Description thing: THING. view special case bullet list simple items, also don’t get periods. (bulletize() comes gargle.) messages complete sentence, least aspire , get period. relevant cli docs: CLI inline markup Building Semantic CLI","code":"nm <- \"name-of-a-Google-Sheet\" gs4_bullets(c(v = \"Creating new Sheet: {.s_sheet {nm}}\")) #> ✔ Creating new Sheet: name-of-a-Google-Sheet  nm <- \"name-of-a-worksheet\" gs4_bullets(c(v = \"Protecting cells on sheet: {.w_sheet {nm}}\")) #> ✔ Protecting cells on sheet: name-of-a-worksheet  rg <- \"A3:B20\" gs4_bullets(c(v = \"Writing to the range: {.range {rg}}\")) #> ✔ Writing to the range: A3:B20 gs4_bullets(c(   \"We're going to list some things:\",   bulletize(gargle::gargle_map_cli(month.abb[1:4])) )) #> We're going to list some things: #> • Jan #> • Feb #> • Mar #> • Apr gs4_bullets(\"Doing the stuff you asked me to do.\") #> Doing the stuff you asked me to do.  gs4_bullets(c(   \"You probably need to do one of these things:\",   \"*\" = \"Call {.fun some_function}.\",   \"*\" = \"Provide more specific input via {.arg some_argument}.\" )) #> You probably need to do one of these things: #> • Call `some_function()`. #> • Provide more specific input via `some_argument`."},{"path":"https://googlesheets4.tidyverse.org/dev/articles/messages-and-errors.html","id":"pluralization","dir":"Articles","previous_headings":"User-facing messages","what":"Pluralization","title":"Messages and errors in googlesheets4","text":"cli’s pluralization awesome!","code":"nm <- \"name-of-a-Google-Sheet\" n_new <- 1 gs4_bullets(c(v = \"Adding {n_new} sheet{?s} to {.s_sheet {nm}}\")) #> ✔ Adding 1 sheet to name-of-a-Google-Sheet  n_new <- 3 gs4_bullets(c(v = \"Adding {n_new} sheet{?s} to {.s_sheet {nm}}\")) #> ✔ Adding 3 sheets to name-of-a-Google-Sheet"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/messages-and-errors.html","id":"collapsing","dir":"Articles","previous_headings":"User-facing messages","what":"Collapsing","title":"Messages and errors in googlesheets4","text":"Collapsing lists things great! Also pluralization.","code":"new_sheet_names <- c(\"apple\", \"banana\", \"cherry\") gs4_bullets(c(\"New sheet{?s}: {.w_sheet {new_sheet_names}}\")) #> New sheets: apple, banana, and cherry  new_sheet_names <- \"kumquat\" gs4_bullets(c(\"New sheet{?s}: {.w_sheet {new_sheet_names}}\")) #> New sheet: kumquat"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/messages-and-errors.html","id":"tricky-stuff","dir":"Articles","previous_headings":"User-facing messages","what":"Tricky stuff","title":"Messages and errors in googlesheets4","text":"want see tricky examples building message parts, look : range_speedread()","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/messages-and-errors.html","id":"errors","dir":"Articles","previous_headings":"","what":"Errors","title":"Messages and errors in googlesheets4","text":"Use gs4_abort() instead rlang::abort() stop(). far, ’m really using ... put data condition, start /’s reason . abort_unsupported_conversion() wrapper around gs4_abort(). abort_unsupported_conversion() exists standardize recurring type error message, usually encountered development, end-users. use lot default method as_{}() generic. ’s much add re: errors, now cli::cli_abort() exists. Error messages formed just like informational messages now.","code":"x <- structure(1, class = c(\"a\", \"b\", \"c\")) abort_unsupported_conversion(x, to = \"SheetThing\") #> Error in `abort_unsupported_conversion()`: #> ! Don't know how to make an instance of <SheetThing> from #>   something of class <a/b/c>."},{"path":"https://googlesheets4.tidyverse.org/dev/articles/range-specification.html","id":"user-specified-range","dir":"Articles","previous_headings":"","what":"User-specified range","title":"Range specification","text":"Several googlesheets4 functions allow user specify cells read write. range specification comes via sheet, range, (possibly) skip arguments. Examples functions interface: range_read(), range_read_cells(), range_write(). A1-style spreadsheet range, without sheet name, “A3:D7” “arts!A5:F15” (work)sheet name, “arts” named range, “arts_data” cell_limits object made helpers cellranger package sheet can used specify (work)sheet name, “arts”, position, 3 skip optional argument appears range_read() range_read_cells(), compatible functions like read.table(), readr::read_delim(), readxl::read_excel(). (might think n_max also mentioned , technical reasons, general, n_max can enforced ’ve read data. ’s part range ingest problem.) Loose ends hangnails: story around (work)sheet visibility muddy. ’m letting , yet user interaction anything sheet ()visibility. problem completely unspecified range. hand-wavy sense, “range” means “cells” “non-empty cells” “non-empty cells first (visible?) sheet”. obviously imprecise, means think handle “range” individual endpoint function. Sometimes inject info (first visible worksheet), don’t retrieve data just throw away. special case-y right now. cell_limits objects can hold sheet information made arrangements . range_write() skip argument, just internal consistency?","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/range-specification.html","id":"range-spec","dir":"Articles","previous_headings":"","what":"Range spec","title":"Range specification","text":"range_spec internal S3 class typically used inside function accepts (sheet, range, skip) trio. need sort intermediate storage, order translate various ways user can express range requirements different Sheets API endpoints (differ ’d expect!). generally require metadata associated Sheet order form range_spec, potentially need lookup (work)sheet position determine whether name refers named range (work)sheet. internal generic as_range_spec() dispatches primary argument x, maps range. job transform user-supplied (sheet, range, skip) : sheet_name: (Work)sheet name, can NULL. named_range: Name range, can NULL. NULL, complete specification range, .e. combined information. cell_range /cell_limits: Ways specify rectangle cells, can NULL. user specifies skip, re-expressed cell_limits. intake, one cell_range cell_limits populated. internally, might populate one , prepare range meet requirements specific API endpoint. shim: indicates whether user specified specific cell rectangle (shim = TRUE) filled specifics pragmatically (shim = FALSE), necessary express partially open rectangles A1-notation. aspect user-supplied data needs retained inform downstream post-processing. (sheets_df nr_df retained range_spec, provided as_range_spec().) Loose end: wonder range_spec field (work)sheet id. ’s various user-specified ranges stored range_spec.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/range-specification.html","id":"cell-rectangles","dir":"Articles","previous_headings":"Range spec","what":"Cell rectangles","title":"Range specification","text":"range_spec first formed, may hold specifics cell rectangle, although . info appears one fields: Examples: “A4”, “D:G”, “3:7”, “B3:H”, “C4:G16” Example: cell_limits(ul = c(2, 3), lr = c(NA, 5))) cell_limits object , overall, much sane way hold information, explicit NAs can used convey unboundedness. types unboundedness simply can’t conveyed A1 notation, even though partially open rectangles legitimate can recorded A1 notation. case, user expectations API idiosyncrasies, able translate cell_range cell_limits.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/range-specification.html","id":"a1-range-from-cell_limits","dir":"Articles","previous_headings":"Range spec > Cell rectangles","what":"A1 range from cell_limits","title":"Range specification","text":"reading functions range_read() range_read_cells() hit sheets.spreadsheets.get endpoint. Bizarrely, endpoint requires range specified A1-notation. user specifies cell rectangle A1-notation, things easy essentially just pass along. users can describe certain partially open cell rectangles via cell_limits can’t literally expressed A1-notation. table shows possible combinations row cell limits translated A1-style range, using technical limits number rows columns Google Sheet.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/range-specification.html","id":"cell_limits-from-a1-range","dir":"Articles","previous_headings":"Range spec > Cell rectangles","what":"cell_limits from A1 range","title":"Range specification","text":"editing sheet, send UpdateCellsRequest, takes location write via union field. must send one following: start: instance GridCoordinate identifies one cell. write starts cells hit determined structure accompanying RowData. Think start specifying upper left corner target rectangle. Fields: sheetId: ID (work)sheet. required field. rowIndex: Zero-based row index. Unspecified means 0. columnIndex: Zero-based column index. Unspecified means 0. range: instance GridRange identifies rectangle cells. Fields: sheetId: ID (work)sheet. required field. startRowIndex: Zero-based inclusive start row. Unspecified means 0. endRowIndex: Zero-based exclusive end row. Unspecified means unbounded.  endColumnIndex: Zero-based exclusive end column. Unspecified means unbounded. start/end row/column indices optional. omitted, means rectangle unbounded side. Unbounded left top boring, just amounts starting first row column. unbounded right bottom interesting scenario : RowData doesn’t cover entire range rectangle, targetted cells don’t receive new data cleared, according accompanying field mask fields. range_write() writing function googlesheets4 lets user target specific range. function need ability convert A1-notation cell_limits decide whether user’s range sent via start range. gs4_create(), sheet_write(), sheet_append() offer higher-level API, focused holistic management (work)sheets hold single data table. ’s table translates A1-style ranges created cell_limits. scenarios covered input, tackling different (harder) problem. ’s harmless inputs good, terms covering relevant scenarios. Note dropped row corresponding “input”. decide whether send user’s range via start range? Possible scenarios (sheet, range) (remember: far, range_write() doesn’t offer skip): sheet given: populate first (visible) sheet. range: Send sheet ID GridCoordinate via start. overwrite data (usually formats) cells covered accompanying data. don’t touch rest sheet. send range? feels aggressive clears data (usually formats) cells sheet covered data. user wants , ’s always range_write(). range A1 notation: Re-express cell_limits. cell_limits contains least 1 NA: send GridRange via range. Analysis “NA” edge case: send just sheet ID GridRange, clear targeted fields whole sheet. seems OK , one can accident, .e. go way make explicit cell_limits object containing NAs. instead range_write()? Maybe need suppress inclusion col_names don’t like table formatting applied range_write(). cell_limits NAs: rectangle includes 1 cell, send GridRange via range. rectangle exactly 1 cell, send GridCoordinate via start.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/read-sheets.html","id":"auth","dir":"Articles","previous_headings":"","what":"Auth","title":"Read Sheets","text":"regular, interactive user, can just let googlesheets4 prompt anything needs re: auth. Since article compiled noninteractively server, arranged googlesheets4 use service account token (shown).","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/read-sheets.html","id":"read_sheet-and-range_read-are-synonyms","dir":"Articles","previous_headings":"","what":"read_sheet() and range_read() are synonyms","title":"Read Sheets","text":"main “read” function googlesheets4 package goes two names, want make sense two contexts: read_sheet() evokes table-reading functions, like readr::read_csv() readxl::read_excel(). sheet case refers Google (spread)Sheet. range_read() technically right name according naming convention used throughout googlesheets4 package, can read arbitrary cell range. read_sheet() range_read() synonyms can use either one. Throughout article, ’re going use range_read(). Note: first release googlesheets used sheets_ prefix everywhere, sheets_read(). still works, ’s deprecated go away rather swiftly.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/read-sheets.html","id":"specify-the-range-and-column-types","dir":"Articles","previous_headings":"","what":"Specify the range and column types","title":"Read Sheets","text":"read “mini-gap” “deaths” example Sheets show different ways specify (work)sheet cell ranges. example shows use range specify (work)sheet A1-style cell range. also demonstrates col_types gives control column types, similar col_types works readr readxl. Note currently support “shortcode” style column specification plan align better readr’s capabilities future release. full list column types specify , see Column specification section help range_read(). looked “deaths” spreadsheet browser (’s ), know typical features real world spreadsheets: main data rectangle prose intended human-consumption . ’s specify range read . ’ve designated data rectangles named ranges, provides slick way read – definitely less brittle mysterious approaches like range = \"!A5:F15\" skip = 4, n_max = 10. named range can passed via range = argument: named ranges, exist, part information returned gs4_get().","code":"range_read(gs4_example(\"mini-gap\"), sheet = 2) #> ✔ Reading from mini-gap. #> ✔ Range ''Americas''. #> # A tibble: 5 × 6 #>   country   continent  year lifeExp      pop gdpPercap #>   <chr>     <chr>     <dbl>   <dbl>    <dbl>     <dbl> #> 1 Argentina Americas   1952    62.5 17876956     5911. #> 2 Bolivia   Americas   1952    40.4  2883315     2677. #> 3 Brazil    Americas   1952    50.9 56602560     2109. #> 4 Canada    Americas   1952    68.8 14785584    11367. #> 5 Chile     Americas   1952    54.7  6377619     3940.  range_read(gs4_example(\"mini-gap\"), sheet = \"Oceania\", n_max = 3) #> ✔ Reading from mini-gap. #> ✔ Range ''Oceania''. #> # A tibble: 3 × 6 #>   country     continent  year lifeExp     pop gdpPercap #>   <chr>       <chr>     <dbl>   <dbl>   <dbl>     <dbl> #> 1 Australia   Oceania    1952    69.1 8691212    10040. #> 2 New Zealand Oceania    1952    69.4 1994794    10557. #> 3 Australia   Oceania    1957    70.3 9712569    10950.  range_read(gs4_example(\"deaths\"), skip = 4, n_max = 10) #> ✔ Reading from deaths. #> ✔ Range 5:10000000. #> # A tibble: 10 × 6 #>    Name               Profession   Age `Has kids` `Date of birth`     #>    <chr>              <chr>      <dbl> <lgl>      <dttm>              #>  1 David Bowie        musician      69 TRUE       1947-01-08 00:00:00 #>  2 Carrie Fisher      actor         60 TRUE       1956-10-21 00:00:00 #>  3 Chuck Berry        musician      90 TRUE       1926-10-18 00:00:00 #>  4 Bill Paxton        actor         61 TRUE       1955-05-17 00:00:00 #>  5 Prince             musician      57 TRUE       1958-06-07 00:00:00 #>  6 Alan Rickman       actor         69 FALSE      1946-02-21 00:00:00 #>  7 Florence Henderson actor         82 TRUE       1934-02-14 00:00:00 #>  8 Harper Lee         author        89 FALSE      1926-04-28 00:00:00 #>  9 Zsa Zsa Gábor      actor         99 TRUE       1917-02-06 00:00:00 #> 10 George Michael     musician      53 FALSE      1963-06-25 00:00:00 #> # ℹ 1 more variable: `Date of death` <dttm> range_read(   gs4_example(\"deaths\"), range = \"other!A5:F15\", col_types = \"?ci??D\" ) #> ✔ Reading from deaths. #> ✔ Range ''other'!A5:F15'. #> # A tibble: 10 × 6 #>    Name           Profession   Age `Has kids` `Date of birth`     #>    <chr>          <chr>      <int> <lgl>      <dttm>              #>  1 Vera Rubin     scientist     88 TRUE       1928-07-23 00:00:00 #>  2 Mohamed Ali    athlete       74 TRUE       1942-01-17 00:00:00 #>  3 Morley Safer   journalist    84 TRUE       1931-11-08 00:00:00 #>  4 Fidel Castro   politician    90 TRUE       1926-08-13 00:00:00 #>  5 Antonin Scalia lawyer        79 TRUE       1936-03-11 00:00:00 #>  6 Jo Cox         politician    41 TRUE       1974-06-22 00:00:00 #>  7 Janet Reno     lawyer        78 FALSE      1938-07-21 00:00:00 #>  8 Gwen Ifill     journalist    61 FALSE      1955-09-29 00:00:00 #>  9 John Glenn     astronaut     95 TRUE       1921-07-28 00:00:00 #> 10 Pat Summit     coach         64 TRUE       1952-06-14 00:00:00 #> # ℹ 1 more variable: `Date of death` <date> gs4_example(\"deaths\") %>%    range_read(range = \"arts_data\") #> ✔ Reading from deaths. #> ✔ Range arts_data. #> # A tibble: 10 × 6 #>    Name               Profession   Age `Has kids` `Date of birth`     #>    <chr>              <chr>      <dbl> <lgl>      <dttm>              #>  1 David Bowie        musician      69 TRUE       1947-01-08 00:00:00 #>  2 Carrie Fisher      actor         60 TRUE       1956-10-21 00:00:00 #>  3 Chuck Berry        musician      90 TRUE       1926-10-18 00:00:00 #>  4 Bill Paxton        actor         61 TRUE       1955-05-17 00:00:00 #>  5 Prince             musician      57 TRUE       1958-06-07 00:00:00 #>  6 Alan Rickman       actor         69 FALSE      1946-02-21 00:00:00 #>  7 Florence Henderson actor         82 TRUE       1934-02-14 00:00:00 #>  8 Harper Lee         author        89 FALSE      1926-04-28 00:00:00 #>  9 Zsa Zsa Gábor      actor         99 TRUE       1917-02-06 00:00:00 #> 10 George Michael     musician      53 FALSE      1963-06-25 00:00:00 #> # ℹ 1 more variable: `Date of death` <dttm>"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/read-sheets.html","id":"detailed-cell-data","dir":"Articles","previous_headings":"","what":"Detailed cell data","title":"Read Sheets","text":"range_read_cells() returns data frame one row per cell gives access raw cell data sent Sheets API. Specify cell_data = \"full\", discard_empty = FALSE get even data , example, need access cell formulas formatting. spread_sheet() converts data “one row per cell” form data frame get range_read(), involves reshaping column typing.","code":"(df <- range_read_cells(gs4_example(\"deaths\"), range = \"E5:E7\")) #> ✔ Reading from deaths. #> ✔ Range E5:E7. #> # A tibble: 3 × 4 #>     row   col loc   cell       #>   <int> <int> <chr> <list>     #> 1     5     5 E5    <CELL_TEX> #> 2     6     5 E6    <CELL_DAT> #> 3     7     5 E7    <CELL_DAT> df$cell[[3]] #> $effectiveValue #> $effectiveValue$numberValue #> [1] 20749 #>  #>  #> $formattedValue #> [1] \"10/21/1956\" #>  #> $effectiveFormat #> $effectiveFormat$numberFormat #> $effectiveFormat$numberFormat$type #> [1] \"DATE\" #>  #> $effectiveFormat$numberFormat$pattern #> [1] \"M/D/YYYY\" #>  #>  #>  #> attr(,\"class\") #> [1] \"CELL_DATE\"   \"SHEETS_CELL\" df %>% spread_sheet(col_types = \"D\") #> # A tibble: 2 × 1 #>   `Date of birth` #>   <date>          #> 1 1947-01-08      #> 2 1956-10-21 ## is same as ... range_read(gs4_example(\"deaths\"), range = \"E5:E7\", col_types =\"D\") #> ✔ Reading from deaths. #> ✔ Range E5:E7. #> # A tibble: 2 × 1 #>   `Date of birth` #>   <date>          #> 1 1947-01-08      #> 2 1956-10-21"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/read-sheets.html","id":"when-speed-matters","dir":"Articles","previous_headings":"","what":"When speed matters","title":"Read Sheets","text":"Sheet large speed range_read() causing problems, consider range_speedread(). uses special URL allows Sheet read comma-separated values (CSV). Access via URL doesn’t use Sheets API (although range_speedread() still makes API call retrieve Sheet metadata). example, Sheet around 57,000 rows 25 columns (1.4 million cells), range_speedread() takes ~5 seconds, whereas range_read() takes closer 3 minutes. wouldn’t always take faster option?!? speed difference imperceptible many Sheets downsides (described later). range_speedread() much interface range_read(). output reveals , hood, range_speedread() calls external function CSV parsing (namely, readr::read_csv()). important consequence arguments around column type specification passed along CSV-parsing function. demo using readr-style column specification: Compare read data range_read(): example highlights two important differences: range = \"!A5:F15\" versus range = \"other_data\": range_speedread() can’t access named range, whereas range_read() can. readr::col_date(\"%m/%d/%Y\") vs D: range_speedread() must parse character representation cell data, including datetimes, whereas range_read() access actual cell data type. ’s speed difference something like Africa sheet “gapminder” example Sheet? (around 625 rows x 6 columns, 3700 cells) modest difference shows speed difference unlikely gamechanger many settings. Summary think range_speedread() vs range_read(): use auth (literally, send token), unless prior call gs4_deauth(). range_speedread() faster, ’s noticeable typical Sheets. range_speedread() uses readr-style column type specification, actually flexible range_read() currently . future googlesheets4 releases, adopt readr-style column type specification. range_speedread() requires detailed column type specification, access unformatted cell data actual cell type, range_read() can. range_speedread() can’t access full cell data, e.g., formatting. range_speedread() can’t work named ranges.","code":"gs4_example(\"gapminder\") %>%    range_speedread(sheet = \"Oceania\", n_max = 3) #> ✔ Reading from gapminder, sheet Oceania. #> ℹ Export URL: #>   <https://docs.google.com/spreadsheets/d/1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY/export?format=csv&gid=1796776040> #> Rows: 3 Columns: 6 #> ── Column specification ─────────────────────────────────────────────── #> Delimiter: \",\" #> chr (2): country, continent #> dbl (4): year, lifeExp, pop, gdpPercap #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 3 × 6 #>   country   continent  year lifeExp      pop gdpPercap #>   <chr>     <chr>     <dbl>   <dbl>    <dbl>     <dbl> #> 1 Australia Oceania    1952    69.1  8691212    10040. #> 2 Australia Oceania    1957    70.3  9712569    10950. #> 3 Australia Oceania    1962    70.9 10794968    12217. gs4_example(\"deaths\") %>%    range_speedread(     range = \"other!A5:F15\",     col_types = readr::cols(       Age = readr::col_integer(),       `Date of birth` = readr::col_date(\"%m/%d/%Y\"),       `Date of death` = readr::col_date(\"%m/%d/%Y\")     )   ) #> ✔ Reading from deaths, sheet other, range A5:F15. #> ℹ Export URL: #>   <https://docs.google.com/spreadsheets/d/1VTJjWoP1nshbyxmL9JqXgdVsimaYty21LGxxs018H2Y/export?format=csv&range=A5%3AF15&gid=278837031> #> # A tibble: 10 × 6 #>    Name     Profession   Age `Has kids` `Date of birth` `Date of death` #>    <chr>    <chr>      <int> <lgl>      <date>          <date>          #>  1 Vera Ru… scientist     88 TRUE       1928-07-23      2016-12-25      #>  2 Mohamed… athlete       74 TRUE       1942-01-17      2016-06-03      #>  3 Morley … journalist    84 TRUE       1931-11-08      2016-05-19      #>  4 Fidel C… politician    90 TRUE       1926-08-13      2016-11-25      #>  5 Antonin… lawyer        79 TRUE       1936-03-11      2016-02-13      #>  6 Jo Cox   politician    41 TRUE       1974-06-22      2016-06-16      #>  7 Janet R… lawyer        78 FALSE      1938-07-21      2016-11-07      #>  8 Gwen If… journalist    61 FALSE      1955-09-29      2016-11-14      #>  9 John Gl… astronaut     95 TRUE       1921-07-28      2016-12-08      #> 10 Pat Sum… coach         64 TRUE       1952-06-14      2016-06-28 gs4_example(\"deaths\") %>%    range_read(range = \"other_data\", col_types = \"??i?DD\") #> ✔ Reading from deaths. #> ✔ Range other_data. #> # A tibble: 10 × 6 #>    Name     Profession   Age `Has kids` `Date of birth` `Date of death` #>    <chr>    <chr>      <int> <lgl>      <date>          <date>          #>  1 Vera Ru… scientist     88 TRUE       1928-07-23      2016-12-25      #>  2 Mohamed… athlete       74 TRUE       1942-01-17      2016-06-03      #>  3 Morley … journalist    84 TRUE       1931-11-08      2016-05-19      #>  4 Fidel C… politician    90 TRUE       1926-08-13      2016-11-25      #>  5 Antonin… lawyer        79 TRUE       1936-03-11      2016-02-13      #>  6 Jo Cox   politician    41 TRUE       1974-06-22      2016-06-16      #>  7 Janet R… lawyer        78 FALSE      1938-07-21      2016-11-07      #>  8 Gwen If… journalist    61 FALSE      1955-09-29      2016-11-14      #>  9 John Gl… astronaut     95 TRUE       1921-07-28      2016-12-08      #> 10 Pat Sum… coach         64 TRUE       1952-06-14      2016-06-28 system.time(   gs4_example(\"gapminder\") %>% range_speedread(sheet = \"Africa\") ) #> ✔ Reading from gapminder, sheet Africa. #> ℹ Export URL: #>   <https://docs.google.com/spreadsheets/d/1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY/export?format=csv&gid=780868077> #> Rows: 624 Columns: 6 #> ── Column specification ─────────────────────────────────────────────── #> Delimiter: \",\" #> chr (2): country, continent #> dbl (4): year, lifeExp, pop, gdpPercap #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #>    user  system elapsed  #>   0.082   0.014   0.437 system.time(   gs4_example(\"gapminder\") %>% range_read(sheet = \"Africa\") ) #> ✔ Reading from gapminder. #> ✔ Range ''Africa''. #>    user  system elapsed  #>   0.295   0.011   0.588"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/write-sheets.html","id":"auth","dir":"Articles","previous_headings":"","what":"Auth","title":"Write Sheets","text":"regular, interactive user, can just let googlesheets4 prompt anything needs re: auth. Since article compiled noninteractively server, arranged googlesheets4 use service account token (shown).","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/articles/write-sheets.html","id":"gs4_create","dir":"Articles","previous_headings":"","what":"gs4_create()","title":"Write Sheets","text":"Create brand new Sheet gs4_create(). can specify new Sheet’s name (accept randomly generated name). Every Sheet must least one (work)sheet, Google Sheets automatically creates empty “Sheet1”. can control names content initial (work)sheets sheets argument.","code":"ss1 <- gs4_create(\"sheets-create-demo-1\") #> ✔ Creating new Sheet: sheets-create-demo-1. ss1 #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: sheets-create-demo-1                         #>               ID: 1TN7M9LTW-6-aiocIxrAeARUCdOoWIo3GMJ7e6gbLMUc #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>       Sheet1: 1000 x 26"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/write-sheets.html","id":"send-sheet-names","dir":"Articles","previous_headings":"gs4_create()","what":"Send sheet names","title":"Write Sheets","text":"Use character vector specify names one empty sheets. sheets values get dimensions Sheets default behaviour.","code":"ss2 <- gs4_create(   \"sheets-create-demo-2\",   sheets = c(\"alpha\", \"beta\") ) #> ✔ Creating new Sheet: sheets-create-demo-2. ss2 #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: sheets-create-demo-2                         #>               ID: 1r_QrLoLQUM4Fw9pyBfkQrCF-kDLJP7Sujhr9eZt140g #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 2                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>        alpha: 1000 x 26 #>         beta: 1000 x 26"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/write-sheets.html","id":"send-a-data-frame","dir":"Articles","previous_headings":"gs4_create()","what":"Send a data frame","title":"Write Sheets","text":"provide data frame, used populate cells sheet set sheet dimensions (number rows columns). header row also gets special treatment. sheet inherits name data frame, possible.","code":"my_data <- data.frame(x = 1:3, y = letters[1:3])  ss3 <- gs4_create(   \"sheets-create-demo-3\",   sheets = my_data ) #> ✔ Creating new Sheet: sheets-create-demo-3. ss3 #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: sheets-create-demo-3                         #>               ID: 1eD0VV7zcj3GaDkZIOxJ8fnbyCbDJivYt8TiajyD2Xso #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>      my_data: 4 x 2"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/write-sheets.html","id":"send-multiple-data-frames","dir":"Articles","previous_headings":"gs4_create()","what":"Send multiple data frames","title":"Write Sheets","text":"provide list data frames, used populate cells one sheet set sheet dimensions (number rows columns). header row also gets special treatment. sheets inherit names list, names.","code":"my_data_frames <- list(iris = head(iris), chickwts = head(chickwts))  ss4 <- gs4_create(   \"sheets-create-demo-4\",   sheets = my_data_frames ) #> ✔ Creating new Sheet: sheets-create-demo-4. ss4 #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: sheets-create-demo-4                         #>               ID: 1m-g75c_x8HF0pMQKJTtp8syiA2WHz0Mt0YJPEwU3aJY #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 2                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>         iris: 7 x 5 #>     chickwts: 7 x 2"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/write-sheets.html","id":"write-metadata","dir":"Articles","previous_headings":"gs4_create()","what":"Write metadata","title":"Write Sheets","text":"users won’t need , gs4_create() can set additional Sheet-level metadata, locale time zone. really make use feature, need read spreadsheets.create endpoint. Notice default empty Sheet named “Feuille 1”, since request French locale. specific evidence default behaviour respect locale time zone problematic use case.","code":"ss5 <- gs4_create(   \"sheets-create-demo-5\",   locale = \"fr_FR\",   timeZone = \"Europe/Paris\" ) #> ✔ Creating new Sheet: sheets-create-demo-5. ss5 #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: sheets-create-demo-5                         #>               ID: 1nHEXJLqRpeOJ7wr7PSE_Fy-VFpbDZ4E8iRE3O8WzMJc #>           Locale: fr_FR                                        #>        Time zone: Europe/Paris                                 #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>    Feuille 1: 1000 x 26"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/write-sheets.html","id":"clean-up","dir":"Articles","previous_headings":"gs4_create()","what":"Clean up","title":"Write Sheets","text":"Trash Sheets created . actually requires googledrive, since possible trash delete Sheets Sheets API. hidden auth process, described earlier, put shared token force Sheets Drive. can read work article Using googlesheets4 googledrive.","code":"gs4_find(\"sheets-create-demo\") %>%   googledrive::drive_trash() #> Files trashed: #> • sheets-create-demo-5 #>   <id: 1nHEXJLqRpeOJ7wr7PSE_Fy-VFpbDZ4E8iRE3O8WzMJc> #> • sheets-create-demo-4 #>   <id: 1m-g75c_x8HF0pMQKJTtp8syiA2WHz0Mt0YJPEwU3aJY> #> • sheets-create-demo-3 #>   <id: 1eD0VV7zcj3GaDkZIOxJ8fnbyCbDJivYt8TiajyD2Xso> #> • sheets-create-demo-2 #>   <id: 1r_QrLoLQUM4Fw9pyBfkQrCF-kDLJP7Sujhr9eZt140g> #> • sheets-create-demo-1 #>   <id: 1TN7M9LTW-6-aiocIxrAeARUCdOoWIo3GMJ7e6gbLMUc>"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/write-sheets.html","id":"write_sheet-a-k-a--sheet_write","dir":"Articles","previous_headings":"","what":"write_sheet(), a.k.a. sheet_write()","title":"Write Sheets","text":"write_sheet() aliased sheet_write() meant evoke readr::write_csv() writexl::write_xlsx(). Whereas gs4_create() emphasizes target Sheet, sheet_write() emphasizes data want write. required argument sheet_write() data. creates new (work)sheet inside new (spread)Sheet returns ID. ’ll notice new Sheet randomly generated name. problem, use gs4_create() instead, affords control various aspects new Sheet. Let’s start : delete Sheet call gs4_create(), can specify new Sheet’s name. ’ll modify sheet_write(). send one sheet name, “chickwts”, prevent creation “Sheet1”, send data. sheet_write() allows us write actual chickwts data sheet name. sheet_write() can also write data new sheet, sheet implicitly explicitly targets non-existent sheet. sheet name given can’t determined data, name form “SheetN” automatically generated Sheets.","code":"df <- data.frame(x = 1:3, y = letters[1:3])  random_ss <- sheet_write(df) #> ✔ Creating new Sheet: unfearing-guineafowl. random_ss #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: unfearing-guineafowl                         #>               ID: 1-Zh7tzR-iSftrePVCFlpsvtR8lCQiGFdi7VanZQdsP4 #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>           df: 4 x 2 googledrive::drive_trash(random_ss) #> File trashed: #> • unfearing-guineafowl #>   <id: 1-Zh7tzR-iSftrePVCFlpsvtR8lCQiGFdi7VanZQdsP4>  ss1 <- gs4_create(   \"write-sheets-demo-1\",   sheets = \"chickwts\" ) #> ✔ Creating new Sheet: write-sheets-demo-1. ss1 #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: write-sheets-demo-1                          #>               ID: 1N-xTi1PQSHQUkOCn4znduwBKHjNOV2URAqW8ZcZw5JI #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>     chickwts: 1000 x 26 sheet_write(chickwts, ss = ss1, sheet = \"chickwts\") #> ✔ Writing to write-sheets-demo-1. #> ✔ Writing to sheet chickwts. ss1 #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: write-sheets-demo-1                          #>               ID: 1N-xTi1PQSHQUkOCn4znduwBKHjNOV2URAqW8ZcZw5JI #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>     chickwts: 72 x 2 # explicitly make a new sheet named \"iris\" sheet_write(iris, ss = ss1, sheet = \"iris\") #> ✔ Writing to write-sheets-demo-1. #> ✔ Writing to sheet iris.  # implicitly make a new sheet named \"mtcars\" sheet_write(mtcars, ss = ss1) #> ✔ Writing to write-sheets-demo-1. #> ✔ Writing to sheet mtcars. sheet_write(data.frame(x = 1:2, y = 3:4), ss = ss1) #> ✔ Writing to write-sheets-demo-1. #> ✔ Writing to sheet Sheet1. ss1 #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: write-sheets-demo-1                          #>               ID: 1N-xTi1PQSHQUkOCn4znduwBKHjNOV2URAqW8ZcZw5JI #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 4                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>     chickwts: 72 x 2 #>         iris: 151 x 5 #>       mtcars: 33 x 11 #>       Sheet1: 3 x 2"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/write-sheets.html","id":"clean-up-1","dir":"Articles","previous_headings":"write_sheet(), a.k.a. sheet_write()","what":"Clean up","title":"Write Sheets","text":"","code":"gs4_find(\"write-sheets-demo\") %>%   googledrive::drive_trash() #> File trashed: #> • write-sheets-demo-1 #>   <id: 1N-xTi1PQSHQUkOCn4znduwBKHjNOV2URAqW8ZcZw5JI>"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/write-sheets.html","id":"sheet_append","dir":"Articles","previous_headings":"","what":"sheet_append()","title":"Write Sheets","text":"sheet_append() can add one rows data existing (work)sheet. Let’s recreate table “” deaths example Sheet, without annoying text data. First bring data local data frame chop pieces. use gs4_create() create new (spread)Sheet initialize new (work)sheet “deaths” column headers, data. second empty row created (must , order us freeze top row), soon filled append. ’re following along, recommend open Sheet web browser gs4_browse() revisit go along, see initial empty row gets consumed additional rows added targetted sheet automatically. Send data, one rows time. Keep inspecting browser ’re . Now big reveal: successfully rebuilt data incremental updates? Gosh hope ’s still TRUE last time checked article!","code":"(deaths <- gs4_example(\"deaths\") %>%    range_read(range = \"other_data\", col_types = \"????DD\")) #> ✔ Reading from deaths. #> ✔ Range other_data. #> # A tibble: 10 × 6 #>    Name     Profession   Age `Has kids` `Date of birth` `Date of death` #>    <chr>    <chr>      <dbl> <lgl>      <date>          <date>          #>  1 Vera Ru… scientist     88 TRUE       1928-07-23      2016-12-25      #>  2 Mohamed… athlete       74 TRUE       1942-01-17      2016-06-03      #>  3 Morley … journalist    84 TRUE       1931-11-08      2016-05-19      #>  4 Fidel C… politician    90 TRUE       1926-08-13      2016-11-25      #>  5 Antonin… lawyer        79 TRUE       1936-03-11      2016-02-13      #>  6 Jo Cox   politician    41 TRUE       1974-06-22      2016-06-16      #>  7 Janet R… lawyer        78 FALSE      1938-07-21      2016-11-07      #>  8 Gwen If… journalist    61 FALSE      1955-09-29      2016-11-14      #>  9 John Gl… astronaut     95 TRUE       1921-07-28      2016-12-08      #> 10 Pat Sum… coach         64 TRUE       1952-06-14      2016-06-28  deaths_zero  <- deaths[integer(), ] # \"scaffolding\" data frame with 0 rows deaths_one   <- deaths[1:5, ]  deaths_two   <- deaths[6, ] deaths_three <- deaths[7:10, ] ss <- gs4_create(\"sheets-append-demo\", sheets = list(deaths = deaths_zero)) #> ✔ Creating new Sheet: sheets-append-demo. ss #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: sheets-append-demo                           #>               ID: 1YJTOwhfzRaesEHR1CTeE6A0RIAvO6icab-MYrNoXn1M #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>       deaths: 2 x 6 gs4_browse(ss) ss #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: sheets-append-demo                           #>               ID: 1YJTOwhfzRaesEHR1CTeE6A0RIAvO6icab-MYrNoXn1M #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>       deaths: 2 x 6  # send several rows ss %>% sheet_append(deaths_one) #> ✔ Writing to sheets-append-demo. #> ✔ Appending 5 rows to deaths. ss #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: sheets-append-demo                           #>               ID: 1YJTOwhfzRaesEHR1CTeE6A0RIAvO6icab-MYrNoXn1M #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>       deaths: 6 x 6  # send a single row ss %>% sheet_append(deaths_two) #> ✔ Writing to sheets-append-demo. #> ✔ Appending 1 row to deaths. ss #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: sheets-append-demo                           #>               ID: 1YJTOwhfzRaesEHR1CTeE6A0RIAvO6icab-MYrNoXn1M #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>       deaths: 7 x 6  # send remaining rows ss %>% sheet_append(deaths_three) #> ✔ Writing to sheets-append-demo. #> ✔ Appending 4 rows to deaths. ss #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: sheets-append-demo                           #>               ID: 1YJTOwhfzRaesEHR1CTeE6A0RIAvO6icab-MYrNoXn1M #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>       deaths: 11 x 6 deaths_replica <- range_read(ss, col_types = \"????DD\") #> ✔ Reading from sheets-append-demo. #> ✔ Range deaths. identical(deaths, deaths_replica) #> [1] TRUE"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/write-sheets.html","id":"clean-up-2","dir":"Articles","previous_headings":"sheet_append()","what":"Clean up","title":"Write Sheets","text":"","code":"gs4_find(\"sheets-append-demo\") %>%   googledrive::drive_trash() #> File trashed: #> • sheets-append-demo #>   <id: 1YJTOwhfzRaesEHR1CTeE6A0RIAvO6icab-MYrNoXn1M>"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/write-sheets.html","id":"range_write","dir":"Articles","previous_headings":"","what":"range_write()","title":"Write Sheets","text":"range_write() least opinionated writing function. writes data range. explicit formatting, although can effectively apply formatting clearing existing formats via reformat = TRUE (default). focus geometry range_write(), .e. cells edited. hidden chunk, ’ve created demo Sheet ss_edit ’ve filled cells “-”. ’ve also created read_this(), wrapper around range_read() names columns letter, like spreadsheets . ’s initial state ss_edit: df small data frame ’ll send data argument range_write(): specify range, df written upper left corner affects cells spanned df. see ’ve written, focus cells “-”. (, subsequent chunks, reset ss_edit initial state.) target single cell range, specifies upper left corner target area. cells written determined extent data. range specifies multiple cells (can even unbounded sides), taken literally covered cells written. range larger data, results cells cleared values. example, range “big” data, remaining cells cleared existing “-” value. ’s another case range bigger needs ’s unbounded bottom top: ’s another range ’s unbounded left “big”: target sheet expanded, necessary, range single cell (.e. gives upper left corner). Although data argument range_write() must data frame, note actually limit can write: Use col_names = FALSE suppress sending column names. definition, variable data frame can different type. using list-column, row data frame column can different type. examples range_write() show writing data disparate type 1-row 1-column region.","code":"read_this(ss_edit) #> ✔ Reading from sheets-edit-demo. #> ✔ Range Sheet1. #> # A tibble: 7 × 7 #>   A     B     C     D     E     F     G     #>   <chr> <chr> <chr> <chr> <chr> <chr> <chr> #> 1 -     -     -     -     -     -     -     #> 2 -     -     -     -     -     -     -     #> 3 -     -     -     -     -     -     -     #> 4 -     -     -     -     -     -     -     #> 5 -     -     -     -     -     -     -     #> 6 -     -     -     -     -     -     -     #> 7 -     -     -     -     -     -     - (df <- tibble(V1 = head(LETTERS,3), V2 = tail(LETTERS, 3))) #> # A tibble: 3 × 2 #>   V1    V2    #>   <chr> <chr> #> 1 A     X     #> 2 B     Y     #> 3 C     Z range_write(ss_edit, data = df) %>% read_this() #> ✔ Editing sheets-edit-demo. #> ✔ Writing to sheet Sheet1. #> ✔ Reading from sheets-edit-demo. #> ✔ Range Sheet1. #> # A tibble: 7 × 7 #>   A     B     C     D     E     F     G     #>   <chr> <chr> <chr> <chr> <chr> <chr> <chr> #> 1 V1    V2    -     -     -     -     -     #> 2 A     X     -     -     -     -     -     #> 3 B     Y     -     -     -     -     -     #> 4 C     Z     -     -     -     -     -     #> 5 -     -     -     -     -     -     -     #> 6 -     -     -     -     -     -     -     #> 7 -     -     -     -     -     -     - range_write(ss_edit, data = df, range = \"C2\") %>% read_this() #> ✔ Editing sheets-edit-demo. #> ✔ Writing to sheet Sheet1. #> ✔ Reading from sheets-edit-demo. #> ✔ Range Sheet1. #> # A tibble: 7 × 7 #>   A     B     C     D     E     F     G     #>   <chr> <chr> <chr> <chr> <chr> <chr> <chr> #> 1 -     -     -     -     -     -     -     #> 2 -     -     V1    V2    -     -     -     #> 3 -     -     A     X     -     -     -     #> 4 -     -     B     Y     -     -     -     #> 5 -     -     C     Z     -     -     -     #> 6 -     -     -     -     -     -     -     #> 7 -     -     -     -     -     -     - range_write(ss_edit, data = df, range = \"D4:G7\") %>% read_this() #> ✔ Editing sheets-edit-demo. #> ✔ Writing to sheet Sheet1. #> ✔ Reading from sheets-edit-demo. #> ✔ Range Sheet1. #> # A tibble: 7 × 7 #>   A     B     C     D     E     F     G     #>   <chr> <chr> <chr> <chr> <chr> <chr> <chr> #> 1 -     -     -     -     -     -     -     #> 2 -     -     -     -     -     -     -     #> 3 -     -     -     -     -     -     -     #> 4 -     -     -     V1    V2    NA    NA    #> 5 -     -     -     A     X     NA    NA    #> 6 -     -     -     B     Y     NA    NA    #> 7 -     -     -     C     Z     NA    NA range_write(ss_edit, data = df, range = \"B:E\") %>% read_this() #> ✔ Editing sheets-edit-demo. #> ✔ Writing to sheet Sheet1. #> ✔ Reading from sheets-edit-demo. #> ✔ Range Sheet1. #> # A tibble: 7 × 7 #>   A     B     C     D     E     F     G     #>   <chr> <chr> <chr> <lgl> <lgl> <chr> <chr> #> 1 -     V1    V2    NA    NA    -     -     #> 2 -     A     X     NA    NA    -     -     #> 3 -     B     Y     NA    NA    -     -     #> 4 -     C     Z     NA    NA    -     -     #> 5 -     NA    NA    NA    NA    -     -     #> 6 -     NA    NA    NA    NA    -     -     #> 7 -     NA    NA    NA    NA    -     - range_write(ss_edit, data = df, range = \"B2:6\") %>% read_this() #> ✔ Editing sheets-edit-demo. #> ✔ Writing to sheet Sheet1. #> ✔ Reading from sheets-edit-demo. #> ✔ Range Sheet1. #> # A tibble: 7 × 7 #>   A     B     C     D     E     F     G     #>   <chr> <chr> <chr> <chr> <chr> <chr> <chr> #> 1 -     -     -     -     -     -     -     #> 2 -     V1    V2    NA    NA    NA    NA    #> 3 -     A     X     NA    NA    NA    NA    #> 4 -     B     Y     NA    NA    NA    NA    #> 5 -     C     Z     NA    NA    NA    NA    #> 6 -     NA    NA    NA    NA    NA    NA    #> 7 -     -     -     -     -     -     - range_write(ss_edit, data = df, range = \"G6\") %>% read_this() #> ✔ Editing sheets-edit-demo. #> ✔ Writing to sheet Sheet1. #> ✔ Changing dims: (7 x 7) --> (9 x 8). #> ✔ Reading from sheets-edit-demo. #> ✔ Range Sheet1. #> # A tibble: 9 × 8 #>   A     B     C     D     E     F     G     H     #>   <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> #> 1 -     -     -     -     -     -     -     NA    #> 2 -     -     -     -     -     -     -     NA    #> 3 -     -     -     -     -     -     -     NA    #> 4 -     -     -     -     -     -     -     NA    #> 5 -     -     -     -     -     -     -     NA    #> 6 -     -     -     -     -     -     V1    V2    #> 7 -     -     -     -     -     -     A     X     #> 8 NA    NA    NA    NA    NA    NA    B     Y     #> 9 NA    NA    NA    NA    NA    NA    C     Z"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/write-sheets.html","id":"clean-up-3","dir":"Articles","previous_headings":"range_write()","what":"Clean up","title":"Write Sheets","text":"","code":"gs4_find(\"sheets-edit-demo\") %>%   googledrive::drive_trash() #> File trashed: #> • sheets-edit-demo <id: 1jw4EJpSkZU8i-58o5rzzf5m5ZZdOj2Q4FTsiGZUx4ik>"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/write-sheets.html","id":"write-formulas","dir":"Articles","previous_headings":"","what":"Write formulas","title":"Write Sheets","text":"writing functions can write formulas cells, indicate R object writing, .e. data frame. gs4_formula() function marks character vector containing Sheets formulas, opposed regular character strings. ’s demo also shows using Google Translate API inside Sheet. Now can read data back , complete translations!","code":"lang_dat <- tibble::tribble(        ~ english, ~ to,            \"dog\", \"es\",    \"hello world\", \"ko\",   \"baby turtles\", \"th\"  ) lang_dat$translated <- gs4_formula(   '=GoogleTranslate(INDIRECT(\"R[0]C[-2]\", FALSE), \"en\", INDIRECT(\"R[0]C[-1]\", FALSE))' )  (ss <- gs4_create(\"sheets-formula-demo\", sheets = lang_dat)) #> ✔ Creating new Sheet: sheets-formula-demo. #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: sheets-formula-demo                          #>               ID: 17xrCOgJ-ZiIkngqMMbRVVEE70zpvv8xcawh1DMmHJsE #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>     lang_dat: 4 x 3 range_read(ss) #> ✔ Reading from sheets-formula-demo. #> ✔ Range lang_dat. #> # A tibble: 3 × 3 #>   english      to    translated #>   <chr>        <chr> <chr>      #> 1 dog          es    perro      #> 2 hello world  ko    안녕 세계  #> 3 baby turtles th    เต่าทารก"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/write-sheets.html","id":"clean-up-4","dir":"Articles","previous_headings":"Write formulas","what":"Clean up","title":"Write Sheets","text":"","code":"gs4_find(\"sheets-formula-demo\") %>%   googledrive::drive_trash() #> File trashed: #> • sheets-formula-demo #>   <id: 17xrCOgJ-ZiIkngqMMbRVVEE70zpvv8xcawh1DMmHJsE>"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/write-sheets.html","id":"range_flood","dir":"Articles","previous_headings":"","what":"range_flood()","title":"Write Sheets","text":"range_flood() “floods” cells range common content. default, floods content, .e. clears cells existing value format. Note range_clear() convenience wrapper special case. First, create data frame initialize new Sheet data. begin, cell holds A1-coordinates value. viewed browser, ’d see header row special formatting, including gray background. default, range_flood() sends empty cell (clears existing formatting). can’t easily demonstrate , working sheet browser, can experiment reformat = TRUE/FALSE clear existing format (). can also send new value range cells.","code":"df <- gs4_fodder(10) (ss <- gs4_create(\"range-flood-demo\", sheets = list(df))) #> ✔ Creating new Sheet: range-flood-demo. #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: range-flood-demo                             #>               ID: 1V0Omb_2WATPPEkSx42MIMQsl8Yl0K8a4QR3Yd420D_4 #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>       Sheet1: 11 x 10 range_read(ss) #> ✔ Reading from range-flood-demo. #> ✔ Range Sheet1. #> # A tibble: 10 × 10 #>    A     B     C     D     E     F     G     H     I     J     #>    <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chrrange_flood(ss, range = \"A1:B3\") #> ✔ Editing range-flood-demo. #> ✔ Editing sheet Sheet1. range_read(ss) #> ✔ Reading from range-flood-demo. #> ✔ Range Sheet1. #> New names: #> • `` -> `...1` #> • `` -> `...2` #> # A tibble: 10 × 10 #>    ...1  ...2  C     D     E     F     G     H     I     J     #>    <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chrrange_flood(ss, range = \"4:5\", cell = \";-)\") #> ✔ Editing range-flood-demo. #> ✔ Editing sheet Sheet1. range_read(ss) #> ✔ Reading from range-flood-demo. #> ✔ Range Sheet1. #> New names: #> • `` -> `...1` #> • `` -> `...2` #> # A tibble: 10 × 10 #>    ...1  ...2  C     D     E     F     G     H     I     J     #>    <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> #>  1 NA    NA    C2    D2    E2    F2    G2    H2    I2    J2    #>  2 NA    NA    C3    D3    E3    F3    G3    H3    I3    J3    #>  3 ;-)   ;-)   ;-)   ;-)   ;-)   ;-)   ;-)   ;-)   ;-)   ;-)   #>  4 ;-)   ;-)   ;-)   ;-)   ;-)   ;-)   ;-)   ;-)   ;-)   ;-)   #>  5 A6    B6    C6    D6    E6    F6    G6    H6    I6    J6    #>  6 A7    B7    C7    D7    E7    F7    G7    H7    I7    J7    #>  7 A8    B8    C8    D8    E8    F8    G8    H8    I8    J8    #>  8 A9    B9    C9    D9    E9    F9    G9    H9    I9    J9    #>  9 A10   B10   C10   D10   E10   F10   G10   H10   I10   J10   #> 10 A11   B11   C11   D11   E11   F11   G11   H11   I11   J11"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/write-sheets.html","id":"clean-up-5","dir":"Articles","previous_headings":"range_flood()","what":"Clean up","title":"Write Sheets","text":"","code":"gs4_find(\"range-flood-demo\") %>%   googledrive::drive_trash() #> File trashed: #> • range-flood-demo <id: 1V0Omb_2WATPPEkSx42MIMQsl8Yl0K8a4QR3Yd420D_4>"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/write-sheets.html","id":"range_delete","dir":"Articles","previous_headings":"","what":"range_delete()","title":"Write Sheets","text":"range_delete() deletes range cells shifts cells deleted area. ’re trying delete entire (work)sheet change actual dimensions extent, , instead, use sheet_delete() sheet_resize(). just want clear values formats, use range_clear(). First, create data frame initialize new Sheet data. begin, cell holds A1-coordinates value. viewed browser, ’d see header row special formatting, including gray background. Let’s delete rows. Let’s delete column. Let’s delete bounded cell range. Since ’s unclear fill space, must specify shift. ’ll fill space shifting remaining cells left. Remember range continues refer actual rows columns , due deletions, longer match values reflect original locations.","code":"df <- gs4_fodder(4) (ss <- gs4_create(\"sheets-delete-demo\", sheets = list(df))) #> ✔ Creating new Sheet: sheets-delete-demo. #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: sheets-delete-demo                           #>               ID: 1NjrM6vw2lnnX42YWgJL4nX7F4Z58r-ahCLaMTtNvwXI #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>       Sheet1: 5 x 4 range_read(ss) #> ✔ Reading from sheets-delete-demo. #> ✔ Range Sheet1. #> # A tibble: 4 × 4 #>   A     B     C     D     #>   <chr> <chr> <chr> <chr> #> 1 A2    B2    C2    D2    #> 2 A3    B3    C3    D3    #> 3 A4    B4    C4    D4    #> 4 A5    B5    C5    D5 range_delete(ss, range = \"2:3\") #> ✔ Editing sheets-delete-demo. #> ✔ Deleting cells in sheet Sheet1. range_read(ss) #> ✔ Reading from sheets-delete-demo. #> ✔ Range Sheet1. #> # A tibble: 2 × 4 #>   A     B     C     D     #>   <chr> <chr> <chr> <chr> #> 1 A4    B4    C4    D4    #> 2 A5    B5    C5    D5 range_delete(ss, range = \"C\") #> ✔ Editing sheets-delete-demo. #> ✔ Deleting cells in sheet Sheet1. range_read(ss) #> ✔ Reading from sheets-delete-demo. #> ✔ Range Sheet1. #> # A tibble: 2 × 3 #>   A     B     D     #>   <chr> <chr> <chr> #> 1 A4    B4    D4    #> 2 A5    B5    D5 range_delete(ss, range = \"B2:B3\", shift = \"left\") #> ✔ Editing sheets-delete-demo. #> ✔ Deleting cells in sheet Sheet1. range_read(ss) #> ✔ Reading from sheets-delete-demo. #> ✔ Range Sheet1. #> # A tibble: 2 × 3 #>   A     B     D     #>   <chr> <chr> <lgl> #> 1 A4    D4    NA    #> 2 A5    D5    NA"},{"path":"https://googlesheets4.tidyverse.org/dev/articles/write-sheets.html","id":"clean-up-6","dir":"Articles","previous_headings":"range_delete()","what":"Clean up","title":"Write Sheets","text":"","code":"gs4_find(\"sheets-delete-demo\") %>%   googledrive::drive_trash() #> File trashed: #> • sheets-delete-demo #>   <id: 1NjrM6vw2lnnX42YWgJL4nX7F4Z58r-ahCLaMTtNvwXI>"},{"path":"https://googlesheets4.tidyverse.org/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jennifer Bryan. Maintainer, author. . Copyright holder, funder.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bryan J (2025). googlesheets4: Access Google Sheets using Sheets API V4. R package version 1.1.1.9000, https://github.com/tidyverse/googlesheets4, https://googlesheets4.tidyverse.org.","code":"@Manual{,   title = {googlesheets4: Access Google Sheets using the Sheets API V4},   author = {Jennifer Bryan},   year = {2025},   note = {R package version 1.1.1.9000,     https://github.com/tidyverse/googlesheets4},   url = {https://googlesheets4.tidyverse.org}, }"},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Access Google Sheets using the Sheets API V4","text":"googlesheets4 provides R interface Google Sheets via Sheets API v4. reboot earlier package called googlesheets. 4? googlesheets4? miss googlesheets1 3? . idea name package corresponding version Sheets API. hindsight, original googlesheets googlesheets3.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access Google Sheets using the Sheets API V4","text":"can install released version googlesheets4 CRAN : development version GitHub :","code":"install.packages(\"googlesheets4\") #install.packages(\"pak\") pak::pak(\"tidyverse/googlesheets4\")"},{"path":"https://googlesheets4.tidyverse.org/dev/index.html","id":"cheatsheet","dir":"","previous_headings":"","what":"Cheatsheet","title":"Access Google Sheets using the Sheets API V4","text":"can see read data googlesheets4 data import cheatsheet, also covers similar functionality related packages readr readxl.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/index.html","id":"auth","dir":"","previous_headings":"","what":"Auth","title":"Access Google Sheets using the Sheets API V4","text":"googlesheets4 , default, help interact Sheets authenticated Google user. don’t plan write Sheets read private Sheets, use gs4_deauth() indicate need token. See article googlesheets4 auth . overview, ’ve logged Google specific user hidden chunk.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/index.html","id":"attach-googlesheets4","dir":"","previous_headings":"","what":"Attach googlesheets4","title":"Access Google Sheets using the Sheets API V4","text":"","code":"library(googlesheets4)"},{"path":"https://googlesheets4.tidyverse.org/dev/index.html","id":"read","dir":"","previous_headings":"","what":"Read","title":"Access Google Sheets using the Sheets API V4","text":"main “read” function googlesheets4 package goes two names, want make sense two contexts: read_sheet() evokes table-reading functions, like readr::read_csv() readxl::read_excel(). sheet case refers Google (spread)Sheet. range_read() right name according naming convention used throughout googlesheets4 package. read_sheet() range_read() synonyms can use either one. ’ll use read_sheet(). googlesheets4 pipe-friendly (reexports %>%), works just fine without pipe. Read URL Sheet ID dribble produced googledrive package, can lookup file name achieve thing: Note: reason can read sheet named “gapminder” (last example) account ’re logged Sheet named “gapminder”. See article Find Identify Sheets specifying Sheet want address. See article Read Sheets reading specific sheets ranges, setting column type, getting low-level cell data.","code":"# URL read_sheet(\"https://docs.google.com/spreadsheets/d/1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY/edit#gid=780868077\") #> ✔ Reading from \"gapminder\". #> ✔ Range 'Africa'. #> # A tibble: 624 × 6 #>   country continent  year lifeExp      pop gdpPercap #>   <chr>   <chr>     <dbl>   <dbl>    <dbl>     <dbl> #> 1 Algeria Africa     1952    43.1  9279525     2449. #> 2 Algeria Africa     1957    45.7 10270856     3014. #> 3 Algeria Africa     1962    48.3 11000948     2551. #> 4 Algeria Africa     1967    51.4 12760499     3247. #> 5 Algeria Africa     1972    54.5 14760787     4183. #> # ℹ 619 more rows  # Sheet ID read_sheet(\"1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY\") #> ✔ Reading from \"gapminder\". #> ✔ Range 'Africa'. #> # A tibble: 624 × 6 #>   country continent  year lifeExp      pop gdpPercap #>   <chr>   <chr>     <dbl>   <dbl>    <dbl>     <dbl> #> 1 Algeria Africa     1952    43.1  9279525     2449. #> 2 Algeria Africa     1957    45.7 10270856     3014. #> 3 Algeria Africa     1962    48.3 11000948     2551. #> 4 Algeria Africa     1967    51.4 12760499     3247. #> 5 Algeria Africa     1972    54.5 14760787     4183. #> # ℹ 619 more rows  # a googledrive \"dribble\" googledrive::drive_get(\"gapminder\") %>%    read_sheet() #> ✔ The input `path` resolved to exactly 1 file. #> ✔ Reading from \"gapminder\". #> ✔ Range 'Africa'. #> # A tibble: 624 × 6 #>   country continent  year lifeExp      pop gdpPercap #>   <chr>   <chr>     <dbl>   <dbl>    <dbl>     <dbl> #> 1 Algeria Africa     1952    43.1  9279525     2449. #> 2 Algeria Africa     1957    45.7 10270856     3014. #> 3 Algeria Africa     1962    48.3 11000948     2551. #> 4 Algeria Africa     1967    51.4 12760499     3247. #> 5 Algeria Africa     1972    54.5 14760787     4183. #> # ℹ 619 more rows"},{"path":"https://googlesheets4.tidyverse.org/dev/index.html","id":"write","dir":"","previous_headings":"","what":"Write","title":"Access Google Sheets using the Sheets API V4","text":"gs4_create() creates brand new Google Sheet can optionally send initial data. sheet_write() ()writes whole data frame (work)sheet within (spread)Sheet. sheet_append(), range_write(), range_flood(), range_clear() specialized writing functions. See article Write Sheets writing Sheets.","code":"(ss <- gs4_create(\"fluffy-bunny\", sheets = list(flowers = head(iris)))) #> ✔ Creating new Sheet: \"fluffy-bunny\". #>  #> ── <googlesheets4_spreadsheet> ───────────────────────────────────────────────── #> Spreadsheet name: \"fluffy-bunny\"                               #>               ID: 1enILX4tYJeFEJ1RL8MsGgDRjb0NHTdm3ZD92R2RMWYI #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 1                                            #>  #> ── <sheets> ──────────────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>    'flowers': 7 x 5 head(mtcars) %>%    sheet_write(ss, sheet = \"autos\") #> ✔ Writing to \"fluffy-bunny\". #> ✔ Writing to sheet 'autos'. ss #>  #> ── <googlesheets4_spreadsheet> ───────────────────────────────────────────────── #> Spreadsheet name: \"fluffy-bunny\"                               #>               ID: 1enILX4tYJeFEJ1RL8MsGgDRjb0NHTdm3ZD92R2RMWYI #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 2                                            #>  #> ── <sheets> ──────────────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>    'flowers': 7 x 5 #>      'autos': 7 x 11"},{"path":"https://googlesheets4.tidyverse.org/dev/index.html","id":"where-to-learn-more","dir":"","previous_headings":"","what":"Where to learn more","title":"Access Google Sheets using the Sheets API V4","text":"Get started extensive general introduction googlesheets4. Browse articles index find articles cover various topics depth. See function index organized, exhaustive listing.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Access Google Sheets using the Sheets API V4","text":"’d like contribute development googlesheets4, please read guidelines. Please note googlesheets4 project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/index.html","id":"privacy","dir":"","previous_headings":"","what":"Privacy","title":"Access Google Sheets using the Sheets API V4","text":"Privacy policy","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/index.html","id":"context","dir":"","previous_headings":"","what":"Context","title":"Access Google Sheets using the Sheets API V4","text":"googlesheets4 draws complements / emulates packages tidyverse: googlesheets package googlesheets4 replaces. Main improvements googlesheets4: (1) wraps current, modern Sheets API; (2) leaves “whole file” operations googledrive; (3) uses shared infrastructure auth , gargle package. v3 API wrapped googlesheets deprecated. Starting April/May 2020, features gradually disabled ’s anticipated API fully shutdown September 2020. point, original googlesheets package must retired. googledrive provides fully-featured interface Google Drive API. “whole file” operations can accomplished googledrive: upload download update spreadsheet, copy, rename, move, change permission, delete, etc. googledrive supports Team Drives. readxl tidyverse package reading Excel files (xls xlsx) R data frame. googlesheets4 takes cues parts readxl interface, especially around specifying cells read. readr tidyverse package reading delimited files (e.g., csv tsv) R data frame. googlesheets4 takes cues readr respect column type specification.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/cell-specification.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify cells — cell-specification","title":"Specify cells — cell-specification","text":"Many functions googlesheets4 use range argument target specific cells. Sheets v4 API expects user-specified ranges expressed via A1 notation, googlesheets4 accepts converts alternative specifications provided functions cellranger package. course, can always provide A1-style ranges directly functions like read_sheet() range_read_cells(). use cellranger helpers? ranges practically impossible express A1 notation, specifically want describe rectangles bounds specified others determined data.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/cell-specification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify cells — cell-specification","text":"","code":"if (FALSE) { # gs4_has_token() && rlang::is_interactive() ss <- gs4_example(\"mini-gap\")  # Specify only the rows or only the columns read_sheet(ss, range = cell_rows(1:3)) read_sheet(ss, range = cell_cols(\"C:D\")) read_sheet(ss, range = cell_cols(1))  # Specify upper or lower bound on row or column read_sheet(ss, range = cell_rows(c(NA, 4))) read_sheet(ss, range = cell_cols(c(NA, \"D\"))) read_sheet(ss, range = cell_rows(c(3, NA))) read_sheet(ss, range = cell_cols(c(2, NA))) read_sheet(ss, range = cell_cols(c(\"C\", NA)))  # Specify a partially open rectangle read_sheet(ss, range = cell_limits(c(2, 3), c(NA, NA)), col_names = FALSE) read_sheet(ss, range = cell_limits(c(1, 2), c(NA, 4))) }"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/googlesheets4-configuration.html","id":null,"dir":"Reference","previous_headings":"","what":"googlesheets4 configuration — googlesheets4-configuration","title":"googlesheets4 configuration — googlesheets4-configuration","text":"aspects googlesheets4 behaviour can controlled via option.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/googlesheets4-configuration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"googlesheets4 configuration — googlesheets4-configuration","text":"","code":"local_gs4_quiet(env = parent.frame())  with_gs4_quiet(code)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/googlesheets4-configuration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"googlesheets4 configuration — googlesheets4-configuration","text":"env environment use scoping code Code execute quietly","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/googlesheets4-configuration.html","id":"messages","dir":"Reference","previous_headings":"","what":"Messages","title":"googlesheets4 configuration — googlesheets4-configuration","text":"googlesheets4_quiet option can used suppress messages googlesheets4. default, googlesheets4 always messages, .e. quiet. Set googlesheets4_quiet TRUE suppress messages, one means, order decreasing scope: Put options(googlesheets4_quiet = TRUE) start-file, .Rprofile, R script Use local_gs4_quiet() silence googlesheets4 specific scope Use with_gs4_quiet() run small bit code silently local_gs4_quiet() with_gs4_quiet() follow conventions withr package (https://withr.r-lib.org).","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/googlesheets4-configuration.html","id":"auth","dir":"Reference","previous_headings":"","what":"Auth","title":"googlesheets4 configuration — googlesheets4-configuration","text":"Read googlesheets4's main auth function, gs4_auth(). powered gargle package, consults several options: Default Google user , precisely, email: see gargle::gargle_oauth_email() Whether cache OAuth tokens: see gargle::gargle_oauth_cache() Whether prefer \"--band\" auth: see gargle::gargle_oob_default() Application Default Credentials: see gargle::credentials_app_default()","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/googlesheets4-configuration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"googlesheets4 configuration — googlesheets4-configuration","text":"","code":"# message: \"Creating new Sheet ...\" (ss <- gs4_create(\"gs4-quiet-demo\", sheets = \"alpha\")) #> ✔ Creating new Sheet: gs4-quiet-demo. #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: gs4-quiet-demo                               #>               ID: 1g2D3C6_YhG367ouBi5iMxY-qGKQKaQCWq8dhF9VuZB8 #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>        alpha: 1000 x 26  # message: \"Editing ..., Writing ...\" range_write(ss, data = data.frame(x = 1, y = \"a\")) #> ✔ Editing gs4-quiet-demo. #> ✔ Writing to sheet alpha.  # suppress messages for a small amount of code with_gs4_quiet(   ss %>% sheet_append(data.frame(x = 2, y = \"b\")) )  # message: \"Writing ..., Appending ...\" ss %>% sheet_append(data.frame(x = 3, y = \"c\")) #> ✔ Writing to gs4-quiet-demo. #> ✔ Appending 1 row to alpha.  # suppress messages until end of current scope local_gs4_quiet() ss %>% sheet_append(data.frame(x = 4, y = \"d\")) #> ✔ Writing to gs4-quiet-demo. #> ✔ Appending 1 row to alpha.  # see that all the data was, in fact, written read_sheet(ss) #> ✔ Reading from gs4-quiet-demo. #> ✔ Range alpha. #> # A tibble: 4 × 2 #>       x y     #>   <dbl> <chr> #> 1     1 a     #> 2     2 b     #> 3     3 c     #> 4     4 d      # clean up gs4_find(\"gs4-quiet-demo\") %>%   googledrive::drive_trash() #> File trashed: #> • gs4-quiet-demo <id: 1g2D3C6_YhG367ouBi5iMxY-qGKQKaQCWq8dhF9VuZB8>"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/googlesheets4-package.html","id":null,"dir":"Reference","previous_headings":"","what":"googlesheets4: Access Google Sheets using the Sheets API V4 — googlesheets4-package","title":"googlesheets4: Access Google Sheets using the Sheets API V4 — googlesheets4-package","text":"Interact Google Sheets Sheets API v4 https://developers.google.com/sheets/api. \"API\" acronym \"application programming interface\"; Sheets API allows users interact Google Sheets programmatically, instead via web browser. \"v4\" refers fact Sheets API currently version 4. package can read write metadata cell data Sheet.","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/googlesheets4-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"googlesheets4: Access Google Sheets using the Sheets API V4 — googlesheets4-package","text":"Maintainer: Jennifer Bryan jenny@posit.co (ORCID) contributors: Posit Software, PBC [copyright holder, funder]","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/googlesheets4-vctrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal vctrs methods — googlesheets4-vctrs","title":"Internal vctrs methods — googlesheets4-vctrs","text":"Internal vctrs methods","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/googlesheets4-vctrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal vctrs methods — googlesheets4-vctrs","text":"","code":"# S3 method for class 'googlesheets4_formula' vec_ptype2(x, y, ...)  # S3 method for class 'googlesheets4_formula' vec_cast(x, to, ...)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Authorize googlesheets4 — gs4_auth","title":"Authorize googlesheets4 — gs4_auth","text":"Authorize googlesheets4 view manage Google Sheets. function wrapper around gargle::token_fetch(). default, directed web browser, asked sign Google account, grant googlesheets4 permission operate behalf Google Sheets. default, permission, user credentials cached folder home directory, can automatically refreshed, necessary. Storage user level means token can used across multiple projects tokens less likely synced cloud accident.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Authorize googlesheets4 — gs4_auth","text":"","code":"gs4_auth(   email = gargle::gargle_oauth_email(),   path = NULL,   subject = NULL,   scopes = \"spreadsheets\",   cache = gargle::gargle_oauth_cache(),   use_oob = gargle::gargle_oob_default(),   token = NULL )"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_auth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Authorize googlesheets4 — gs4_auth","text":"email Optional. specified, email can take several different forms: \"jane@gmail.com\", .e. actual email address. allows user target specific Google identity. specified, used token lookup, .e. determine suitable token already available cache. token found, email used pre-select targeted Google identity OAuth chooser. (Note, however, email associated token cached always determined token , never argument). \"*@example.com\", .e. domain-glob pattern. can helpful need code \"just works\" alice@example.com bob@example.com. TRUE means approving email auto-discovery. exactly one matching token found cache, used. FALSE NA mean want ignore token cache force new OAuth dance browser. Defaults option named \"gargle_oauth_email\", retrieved gargle_oauth_email() (unless wrapper package implements different default behavior). path JSON identifying service account, one forms supported txt argument jsonlite::fromJSON() (typically, file path JSON string). subject optional subject claim. Specify wish use service account represented path impersonate subject, normal user. can work, administrator must grant service account domain-wide authority. Identify user impersonate via email, e.g. subject = \"user@example.com\". Note gargle automatically adds non-sensitive \"https://www.googleapis.com/auth/userinfo.email\" scope, scope must enabled service account, along scopes requested. scopes One API scopes. scope can specified full , Sheets API-specific scopes, abbreviated form recognized gs4_scopes(): \"spreadsheets\" = \"https://www.googleapis.com/auth/spreadsheets\" (default) \"spreadsheets.readonly\" = \"https://www.googleapis.com/auth/spreadsheets.readonly\" \"drive\" = \"https://www.googleapis.com/auth/drive\" \"drive.readonly\" = \"https://www.googleapis.com/auth/drive.readonly\" \"drive.file\" = \"https://www.googleapis.com/auth/drive.file\" See https://developers.google.com/identity/protocols/oauth2/scopes#sheets details permissions scope. cache Specifies OAuth token cache. Defaults option named \"gargle_oauth_cache\", retrieved via gargle_oauth_cache(). use_oob Whether use --band authentication (, perhaps, variant implemented gargle known \"pseudo-OOB\") first acquiring token. Defaults value returned gargle_oob_default(). Note (pseudo-)OOB auth affects initial OAuth dance. retrieve (possibly refresh) cached token, use_oob effect. OAuth client provided implicitly wrapper package, type probably defaults value returned gargle_oauth_client_type(). can take control client type setting options(gargle_oauth_client_type = \"web\") options(gargle_oauth_client_type = \"installed\"). token token class Token2.0 object httr's class request, .e. token prepared httr::config() Token2.0 auth_token component.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_auth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Authorize googlesheets4 — gs4_auth","text":"users, time, need call gs4_auth() explicitly – triggered first action requires authorization. Even called, default arguments often suffice. However, necessary, gs4_auth() allows user explicitly: Declare Google identity use, via email specification. Use service account token workload identity federation via path. Bring token. Customize scopes. Use non-default cache folder turn caching . Explicitly request --band (OOB) auth via use_oob. interacting R within browser (applies RStudio Server, Posit Workbench, Posit Cloud, Google Colaboratory), need OOB auth pseudo-OOB variant. happen automatically, can request explicitly use_oob = TRUE , persistently, setting option via options(gargle_oob_default = TRUE). choice conventional OOB pseudo-OOB auth determined type OAuth client. client \"installed\" type, use_oob = TRUE results conventional OOB auth. client \"web\" type, use_oob = TRUE results pseudo-OOB auth. Packages provide built-OAuth client can usually detect type client use. need set explicitly, use \"gargle_oauth_client_type\" option:   details many ways find token, see gargle::token_fetch(). deeper control auth, use gs4_auth_configure() bring OAuth client API key. learn gargle options, see gargle::gargle_options.","code":"options(gargle_oauth_client_type = \"web\")       # pseudo-OOB # or, alternatively options(gargle_oauth_client_type = \"installed\") # conventional OOB"},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_auth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Authorize googlesheets4 — gs4_auth","text":"","code":"if (FALSE) { # rlang::is_interactive() # load/refresh existing credentials, if available # otherwise, go to browser for authentication and authorization gs4_auth()  # indicate the specific identity you want to auth as gs4_auth(email = \"jenny@example.com\")  # force a new browser dance, i.e. don't even try to use existing user # credentials gs4_auth(email = NA)  # use a 'read only' scope, so it's impossible to edit or delete Sheets gs4_auth(scopes = \"spreadsheets.readonly\")  # use a service account token gs4_auth(path = \"foofy-83ee9e7c9c48.json\") }"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_auth_configure.html","id":null,"dir":"Reference","previous_headings":"","what":"Edit and view auth configuration — gs4_auth_configure","title":"Edit and view auth configuration — gs4_auth_configure","text":"functions give control visibility auth configuration gs4_auth() . gs4_auth_configure() lets user specify : OAuth client, used obtaining user token. API key. googlesheets4 de-authorized via gs4_deauth(), requests sent API key lieu token. See vignette(\"get-api-credentials\", package = \"gargle\") . user configure settings, internal defaults used. gs4_oauth_client() gs4_api_key() retrieve currently configured OAuth client API key, respectively.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_auth_configure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edit and view auth configuration — gs4_auth_configure","text":"","code":"gs4_auth_configure(client, path, api_key, app = deprecated())  gs4_api_key()  gs4_oauth_client()"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_auth_configure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edit and view auth configuration — gs4_auth_configure","text":"client Google OAuth client, presumably constructed via gargle::gargle_oauth_client_from_json(). Note, however, preferred specify client JSON, using path argument. path JSON downloaded Google Cloud Console, containing client id secret, one forms supported txt argument jsonlite::fromJSON() (typically, file path JSON string). api_key API key. app Replaced client argument.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_auth_configure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Edit and view auth configuration — gs4_auth_configure","text":"gs4_auth_configure(): object R6 class gargle::AuthState, invisibly. gs4_oauth_client(): current user-configured OAuth client. gs4_api_key(): current user-configured API key.","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_auth_configure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Edit and view auth configuration — gs4_auth_configure","text":"","code":"# see and store the current user-configured OAuth client (probably `NULL`) (original_client <- gs4_oauth_client()) #> NULL  # see and store the current user-configured API key (probably `NULL`) (original_api_key <- gs4_api_key()) #> NULL  # the preferred way to configure your own client is via a JSON file # downloaded from Google Developers Console # this example JSON is indicative, but fake path_to_json <- system.file(   \"extdata\", \"client_secret_installed.googleusercontent.com.json\",   package = \"gargle\" ) gs4_auth_configure(path = path_to_json)  # this is also obviously a fake API key gs4_auth_configure(api_key = \"the_key_I_got_for_a_google_API\")  # confirm the changes gs4_oauth_client() #> <gargle_oauth_client> #> name: a_project_d1c5a8066d2cbe48e8d94514dd286163 #> id: abc.apps.googleusercontent.com #> secret: <REDACTED> #> type: installed #> redirect_uris: http://localhost gs4_api_key() #> [1] \"the_key_I_got_for_a_google_API\"  # restore original auth config gs4_auth_configure(client = original_client, api_key = original_api_key)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_browse.html","id":null,"dir":"Reference","previous_headings":"","what":"Visit a Sheet in a web browser — gs4_browse","title":"Visit a Sheet in a web browser — gs4_browse","text":"Visits Google Sheet default browser, session interactive.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_browse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visit a Sheet in a web browser — gs4_browse","text":"","code":"gs4_browse(ss)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_browse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visit a Sheet in a web browser — gs4_browse","text":"ss Something identifies Google Sheet: file id string drive_id URL can recover id one-row dribble, googledrive represents Drive files instance googlesheets4_spreadsheet, gs4_get() returns Processed as_sheets_id().","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_browse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visit a Sheet in a web browser — gs4_browse","text":"Sheet's browser URL, invisibly.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_browse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visit a Sheet in a web browser — gs4_browse","text":"","code":"gs4_example(\"mini-gap\") %>% gs4_browse()"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new Sheet — gs4_create","title":"Create a new Sheet — gs4_create","text":"Creates entirely new (spread)Sheet (, Excel-speak, workbook). Optionally, can also provide names /data initial set (work)sheets. initial data provided via sheets styled table, described sheet_write().","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new Sheet — gs4_create","text":"","code":"gs4_create(name = gs4_random(), ..., sheets = NULL)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new Sheet — gs4_create","text":"name name new spreadsheet. ... Optional spreadsheet properties can set API endpoint, locale time zone. sheets Optional input initializing (work)sheets. unspecified, Sheets API automatically creates empty \"Sheet1\". can provide vector sheet names, data frame, (possibly named) list data frames. See examples.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new Sheet — gs4_create","text":"input ss, instance sheets_id","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new Sheet — gs4_create","text":"","code":"gs4_create(\"gs4-create-demo-1\") #> ✔ Creating new Sheet: gs4-create-demo-1.  gs4_create(\"gs4-create-demo-2\", locale = \"en_CA\") #> ✔ Creating new Sheet: gs4-create-demo-2.  gs4_create(   \"gs4-create-demo-3\",   locale = \"fr_FR\",   timeZone = \"Europe/Paris\" ) #> ✔ Creating new Sheet: gs4-create-demo-3.  gs4_create(   \"gs4-create-demo-4\",   sheets = c(\"alpha\", \"beta\") ) #> ✔ Creating new Sheet: gs4-create-demo-4.  my_data <- data.frame(x = 1) gs4_create(   \"gs4-create-demo-5\",   sheets = my_data ) #> ✔ Creating new Sheet: gs4-create-demo-5.  gs4_create(   \"gs4-create-demo-6\",   sheets = list(chickwts = head(chickwts), mtcars = head(mtcars)) ) #> ✔ Creating new Sheet: gs4-create-demo-6.  # Clean up gs4_find(\"gs4-create-demo\") %>%   googledrive::drive_trash() #> Files trashed: #> • gs4-create-demo-6 <id: 18xrp8Jvehm6bYx4HfLObAK8lZAw6WYIZv8f0BXvv6_E> #> • gs4-create-demo-5 <id: 1Cf2zMkPj7Yh5F3WClrDyzN3Fd4hoiS7PIy4IlafBtsw> #> • gs4-create-demo-4 <id: 1EEPyGF1VDM6ogxjc81QPl5usPoMjJkYi_-n4RuuoriM> #> • gs4-create-demo-3 <id: 1B5fnA7G9O2vGfcpw3opE8z9Os4LnX4BPepvq2duSqTk> #> • gs4-create-demo-2 <id: 18L_-SXtoSutYwcXKsizRUbroJkVBMwqQTqDiMEozmvo> #> • gs4-create-demo-1 <id: 1WR0iiu3lwJK1ZUA1mf7XkbjHLj1xLqMWGFPEVEUUsBY>"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_deauth.html","id":null,"dir":"Reference","previous_headings":"","what":"Suspend authorization — gs4_deauth","title":"Suspend authorization — gs4_deauth","text":"Put googlesheets4 de-authorized state. Instead sending token, googlesheets4 send API key. can used access public resources Google sign-required. handy using googlesheets4 non-interactive setting make requests require token. prevent attempt obtain token interactively browser. user can configure API key via gs4_auth_configure() retrieve key via gs4_api_key(). absence user-configured key, built-default key used.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_deauth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suspend authorization — gs4_deauth","text":"","code":"gs4_deauth()"},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_deauth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suspend authorization — gs4_deauth","text":"","code":"if (FALSE) { # rlang::is_interactive() gs4_deauth() gs4_user()  # get metadata on the public 'deaths' spreadsheet gs4_example(\"deaths\") %>%   gs4_get() }"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_endpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"List Sheets endpoints — gs4_endpoints","title":"List Sheets endpoints — gs4_endpoints","text":"Returns list selected Sheets API v4 endpoints, stored inside googlesheets4 package. names list (id sub-elements) nicknames can used specify endpoint request_generate(). endpoint, store nickname id, associated HTTP method, path, details parameters. list derived programmatically Sheets API v4 Discovery Document (https://www.googleapis.com/discovery/v1/apis/sheets/v4/rest).","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_endpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Sheets endpoints — gs4_endpoints","text":"","code":"gs4_endpoints(i = NULL)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_endpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Sheets endpoints — gs4_endpoints","text":"name(s) integer index(ices) endpoints return. Optional. default, entire list returned.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_endpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Sheets endpoints — gs4_endpoints","text":"list containing subset Sheets API v4 endpoints used internally googlesheets4.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_endpoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Sheets endpoints — gs4_endpoints","text":"","code":"str(gs4_endpoints(), max.level = 2) #> List of 17 #>  $ sheets.spreadsheets.getByDataFilter               :List of 9 #>   ..$ id            : chr \"sheets.spreadsheets.getByDataFilter\" #>   ..$ httpMethod    : chr \"POST\" #>   ..$ path          : 'fs_path' chr \"/v4/spreadsheets/{spreadsheetId}:getByDataFilter\" #>   ..$ parameters    :List of 14 #>   ..$ scopes        : chr \"drive, drive.file, spreadsheets\" #>   ..$ description   : chr \"Returns the spreadsheet at the given ID. The caller must specify the spreadsheet ID. This method differs from G\"| __truncated__ #>   ..$ request       : chr \"GetSpreadsheetByDataFilterRequest\" #>   ..$ response      : chr \"Spreadsheet\" #>   ..$ parameterOrder: chr \"spreadsheetId\" #>  $ sheets.spreadsheets.batchUpdate                   :List of 9 #>   ..$ id            : chr \"sheets.spreadsheets.batchUpdate\" #>   ..$ httpMethod    : chr \"POST\" #>   ..$ path          : 'fs_path' chr \"/v4/spreadsheets/{spreadsheetId}:batchUpdate\" #>   ..$ parameters    :List of 16 #>   ..$ scopes        : chr \"drive, drive.file, spreadsheets\" #>   ..$ description   : chr \"Applies one or more updates to the spreadsheet. Each request is validated before being applied. If any request \"| __truncated__ #>   ..$ request       : chr \"BatchUpdateSpreadsheetRequest\" #>   ..$ response      : chr \"BatchUpdateSpreadsheetResponse\" #>   ..$ parameterOrder: chr \"spreadsheetId\" #>  $ sheets.spreadsheets.create                        :List of 9 #>   ..$ id            : chr \"sheets.spreadsheets.create\" #>   ..$ httpMethod    : chr \"POST\" #>   ..$ path          : 'fs_path' chr \"/v4/spreadsheets\" #>   ..$ parameters    :List of 19 #>   ..$ scopes        : chr \"drive, drive.file, spreadsheets\" #>   ..$ description   : chr \"Creates a spreadsheet, returning the newly created spreadsheet.\" #>   ..$ request       : chr \"Spreadsheet\" #>   ..$ response      : chr \"Spreadsheet\" #>   ..$ parameterOrder: list() #>  $ sheets.spreadsheets.get                           :List of 8 #>   ..$ id            : chr \"sheets.spreadsheets.get\" #>   ..$ httpMethod    : chr \"GET\" #>   ..$ path          : 'fs_path' chr \"/v4/spreadsheets/{spreadsheetId}\" #>   ..$ parameters    :List of 14 #>   ..$ scopes        : chr \"drive, drive.file, drive.readonly, spreadsheets, spreadsheets.readonly\" #>   ..$ description   : chr \"Returns the spreadsheet at the given ID. The caller must specify the spreadsheet ID. By default, data within gr\"| __truncated__ #>   ..$ response      : chr \"Spreadsheet\" #>   ..$ parameterOrder: chr \"spreadsheetId\" #>  $ sheets.spreadsheets.values.batchUpdate            :List of 9 #>   ..$ id            : chr \"sheets.spreadsheets.values.batchUpdate\" #>   ..$ httpMethod    : chr \"POST\" #>   ..$ path          : 'fs_path' chr \"/v4/spreadsheets/{spreadsheetId}/values:batchUpdate\" #>   ..$ parameters    :List of 17 #>   ..$ scopes        : chr \"drive, drive.file, spreadsheets\" #>   ..$ description   : chr \"Sets values in one or more ranges of a spreadsheet. The caller must specify the spreadsheet ID, a valueInputOpt\"| __truncated__ #>   ..$ request       : chr \"BatchUpdateValuesRequest\" #>   ..$ response      : chr \"BatchUpdateValuesResponse\" #>   ..$ parameterOrder: chr \"spreadsheetId\" #>  $ sheets.spreadsheets.values.batchGetByDataFilter   :List of 9 #>   ..$ id            : chr \"sheets.spreadsheets.values.batchGetByDataFilter\" #>   ..$ httpMethod    : chr \"POST\" #>   ..$ path          : 'fs_path' chr \"/v4/spreadsheets/{spreadsheetId}/values:batchGetByDataFilter\" #>   ..$ parameters    :List of 16 #>   ..$ scopes        : chr \"drive, drive.file, spreadsheets\" #>   ..$ description   : chr \"Returns one or more ranges of values that match the specified data filters. The caller must specify the spreads\"| __truncated__ #>   ..$ request       : chr \"BatchGetValuesByDataFilterRequest\" #>   ..$ response      : chr \"BatchGetValuesByDataFilterResponse\" #>   ..$ parameterOrder: chr \"spreadsheetId\" #>  $ sheets.spreadsheets.values.get                    :List of 8 #>   ..$ id            : chr \"sheets.spreadsheets.values.get\" #>   ..$ httpMethod    : chr \"GET\" #>   ..$ path          : 'fs_path' chr \"/v4/spreadsheets/{spreadsheetId}/values/{range}\" #>   ..$ parameters    :List of 16 #>   ..$ scopes        : chr \"drive, drive.file, drive.readonly, spreadsheets, spreadsheets.readonly\" #>   ..$ description   : chr \"Returns a range of values from a spreadsheet. The caller must specify the spreadsheet ID and a range.\" #>   ..$ response      : chr \"ValueRange\" #>   ..$ parameterOrder: chr [1:2] \"spreadsheetId\" \"range\" #>  $ sheets.spreadsheets.values.clear                  :List of 9 #>   ..$ id            : chr \"sheets.spreadsheets.values.clear\" #>   ..$ httpMethod    : chr \"POST\" #>   ..$ path          : 'fs_path' chr \"/v4/spreadsheets/{spreadsheetId}/values/{range}:clear\" #>   ..$ parameters    :List of 13 #>   ..$ scopes        : chr \"drive, drive.file, spreadsheets\" #>   ..$ description   : chr \"Clears values from a spreadsheet. The caller must specify the spreadsheet ID and range. Only values are cleared\"| __truncated__ #>   ..$ request       : chr \"ClearValuesRequest\" #>   ..$ response      : chr \"ClearValuesResponse\" #>   ..$ parameterOrder: chr [1:2] \"spreadsheetId\" \"range\" #>  $ sheets.spreadsheets.values.batchUpdateByDataFilter:List of 9 #>   ..$ id            : chr \"sheets.spreadsheets.values.batchUpdateByDataFilter\" #>   ..$ httpMethod    : chr \"POST\" #>   ..$ path          : 'fs_path' chr \"/v4/spreadsheets/{spreadsheetId}/values:batchUpdateByDataFilter\" #>   ..$ parameters    :List of 17 #>   ..$ scopes        : chr \"drive, drive.file, spreadsheets\" #>   ..$ description   : chr \"Sets values in one or more ranges of a spreadsheet. The caller must specify the spreadsheet ID, a valueInputOpt\"| __truncated__ #>   ..$ request       : chr \"BatchUpdateValuesByDataFilterRequest\" #>   ..$ response      : chr \"BatchUpdateValuesByDataFilterResponse\" #>   ..$ parameterOrder: chr \"spreadsheetId\" #>  $ sheets.spreadsheets.values.update                 :List of 9 #>   ..$ id            : chr \"sheets.spreadsheets.values.update\" #>   ..$ httpMethod    : chr \"PUT\" #>   ..$ path          : 'fs_path' chr \"/v4/spreadsheets/{spreadsheetId}/values/{range}\" #>   ..$ parameters    :List of 20 #>   ..$ scopes        : chr \"drive, drive.file, spreadsheets\" #>   ..$ description   : chr \"Sets values in a range of a spreadsheet. The caller must specify the spreadsheet ID, range, and a valueInputOption.\" #>   ..$ request       : chr \"ValueRange\" #>   ..$ response      : chr \"UpdateValuesResponse\" #>   ..$ parameterOrder: chr [1:2] \"spreadsheetId\" \"range\" #>  $ sheets.spreadsheets.values.append                 :List of 9 #>   ..$ id            : chr \"sheets.spreadsheets.values.append\" #>   ..$ httpMethod    : chr \"POST\" #>   ..$ path          : 'fs_path' chr \"/v4/spreadsheets/{spreadsheetId}/values/{range}:append\" #>   ..$ parameters    :List of 21 #>   ..$ scopes        : chr \"drive, drive.file, spreadsheets\" #>   ..$ description   : chr \"Appends values to a spreadsheet. The input range is used to search for existing data and find a \\\"table\\\" withi\"| __truncated__ #>   ..$ request       : chr \"ValueRange\" #>   ..$ response      : chr \"AppendValuesResponse\" #>   ..$ parameterOrder: chr [1:2] \"spreadsheetId\" \"range\" #>  $ sheets.spreadsheets.values.batchClearByDataFilter :List of 9 #>   ..$ id            : chr \"sheets.spreadsheets.values.batchClearByDataFilter\" #>   ..$ httpMethod    : chr \"POST\" #>   ..$ path          : 'fs_path' chr \"/v4/spreadsheets/{spreadsheetId}/values:batchClearByDataFilter\" #>   ..$ parameters    :List of 13 #>   ..$ scopes        : chr \"drive, drive.file, spreadsheets\" #>   ..$ description   : chr \"Clears one or more ranges of values from a spreadsheet. The caller must specify the spreadsheet ID and one or m\"| __truncated__ #>   ..$ request       : chr \"BatchClearValuesByDataFilterRequest\" #>   ..$ response      : chr \"BatchClearValuesByDataFilterResponse\" #>   ..$ parameterOrder: chr \"spreadsheetId\" #>  $ sheets.spreadsheets.values.batchGet               :List of 8 #>   ..$ id            : chr \"sheets.spreadsheets.values.batchGet\" #>   ..$ httpMethod    : chr \"GET\" #>   ..$ path          : 'fs_path' chr \"/v4/spreadsheets/{spreadsheetId}/values:batchGet\" #>   ..$ parameters    :List of 16 #>   ..$ scopes        : chr \"drive, drive.file, drive.readonly, spreadsheets, spreadsheets.readonly\" #>   ..$ description   : chr \"Returns one or more ranges of values from a spreadsheet. The caller must specify the spreadsheet ID and one or more ranges.\" #>   ..$ response      : chr \"BatchGetValuesResponse\" #>   ..$ parameterOrder: chr \"spreadsheetId\" #>  $ sheets.spreadsheets.values.batchClear             :List of 9 #>   ..$ id            : chr \"sheets.spreadsheets.values.batchClear\" #>   ..$ httpMethod    : chr \"POST\" #>   ..$ path          : 'fs_path' chr \"/v4/spreadsheets/{spreadsheetId}/values:batchClear\" #>   ..$ parameters    :List of 13 #>   ..$ scopes        : chr \"drive, drive.file, spreadsheets\" #>   ..$ description   : chr \"Clears one or more ranges of values from a spreadsheet. The caller must specify the spreadsheet ID and one or m\"| __truncated__ #>   ..$ request       : chr \"BatchClearValuesRequest\" #>   ..$ response      : chr \"BatchClearValuesResponse\" #>   ..$ parameterOrder: chr \"spreadsheetId\" #>  $ sheets.spreadsheets.sheets.copyTo                 :List of 9 #>   ..$ id            : chr \"sheets.spreadsheets.sheets.copyTo\" #>   ..$ httpMethod    : chr \"POST\" #>   ..$ path          : 'fs_path' chr \"/v4/spreadsheets/{spreadsheetId}/sheets/{sheetId}:copyTo\" #>   ..$ parameters    :List of 14 #>   ..$ scopes        : chr \"drive, drive.file, spreadsheets\" #>   ..$ description   : chr \"Copies a single sheet from a spreadsheet to another spreadsheet. Returns the properties of the newly created sheet.\" #>   ..$ request       : chr \"CopySheetToAnotherSpreadsheetRequest\" #>   ..$ response      : chr \"SheetProperties\" #>   ..$ parameterOrder: chr [1:2] \"spreadsheetId\" \"sheetId\" #>  $ sheets.spreadsheets.developerMetadata.search      :List of 9 #>   ..$ id            : chr \"sheets.spreadsheets.developerMetadata.search\" #>   ..$ httpMethod    : chr \"POST\" #>   ..$ path          : 'fs_path' chr \"/v4/spreadsheets/{spreadsheetId}/developerMetadata:search\" #>   ..$ parameters    :List of 13 #>   ..$ scopes        : chr \"drive, drive.file, spreadsheets\" #>   ..$ description   : chr \"Returns all developer metadata matching the specified DataFilter. If the provided DataFilter represents a Devel\"| __truncated__ #>   ..$ request       : chr \"SearchDeveloperMetadataRequest\" #>   ..$ response      : chr \"SearchDeveloperMetadataResponse\" #>   ..$ parameterOrder: chr \"spreadsheetId\" #>  $ sheets.spreadsheets.developerMetadata.get         :List of 8 #>   ..$ id            : chr \"sheets.spreadsheets.developerMetadata.get\" #>   ..$ httpMethod    : chr \"GET\" #>   ..$ path          : 'fs_path' chr \"/v4/spreadsheets/{spreadsheetId}/developerMetadata/{metadataId}\" #>   ..$ parameters    :List of 13 #>   ..$ scopes        : chr \"drive, drive.file, spreadsheets\" #>   ..$ description   : chr \"Returns the developer metadata with the specified ID. The caller must specify the spreadsheet ID and the develo\"| __truncated__ #>   ..$ response      : chr \"DeveloperMetadata\" #>   ..$ parameterOrder: chr [1:2] \"spreadsheetId\" \"metadataId\" gs4_endpoints(\"sheets.spreadsheets.values.get\") #> $sheets.spreadsheets.values.get #> $sheets.spreadsheets.values.get$id #> [1] \"sheets.spreadsheets.values.get\" #>  #> $sheets.spreadsheets.values.get$httpMethod #> [1] \"GET\" #>  #> $sheets.spreadsheets.values.get$path #> /v4/spreadsheets/{spreadsheetId}/values/{range} #>  #> $sheets.spreadsheets.values.get$parameters #> $sheets.spreadsheets.values.get$parameters$majorDimension #> $sheets.spreadsheets.values.get$parameters$majorDimension$location #> [1] \"query\" #>  #> $sheets.spreadsheets.values.get$parameters$majorDimension$enum #> [1] \"DIMENSION_UNSPECIFIED\" \"ROWS\"                  #> [3] \"COLUMNS\"               #>  #> $sheets.spreadsheets.values.get$parameters$majorDimension$type #> [1] \"string\" #>  #> $sheets.spreadsheets.values.get$parameters$majorDimension$description #> [1] \"The major dimension that results should use. For example, if the spreadsheet data in Sheet1 is: `A1=1,B1=2,A2=3,B2=4`, then requesting `range=Sheet1!A1:B2?majorDimension=ROWS` returns `[[1,2],[3,4]]`, whereas requesting `range=Sheet1!A1:B2?majorDimension=COLUMNS` returns `[[1,3],[2,4]]`.\" #>  #> $sheets.spreadsheets.values.get$parameters$majorDimension$enumDescriptions #> [1] \"The default value, do not use.\"      #> [2] \"Operates on the rows of a sheet.\"    #> [3] \"Operates on the columns of a sheet.\" #>  #>  #> $sheets.spreadsheets.values.get$parameters$dateTimeRenderOption #> $sheets.spreadsheets.values.get$parameters$dateTimeRenderOption$location #> [1] \"query\" #>  #> $sheets.spreadsheets.values.get$parameters$dateTimeRenderOption$type #> [1] \"string\" #>  #> $sheets.spreadsheets.values.get$parameters$dateTimeRenderOption$description #> [1] \"How dates, times, and durations should be represented in the output. This is ignored if value_render_option is FORMATTED_VALUE. The default dateTime render option is SERIAL_NUMBER.\" #>  #> $sheets.spreadsheets.values.get$parameters$dateTimeRenderOption$enum #> [1] \"SERIAL_NUMBER\"    \"FORMATTED_STRING\" #>  #> $sheets.spreadsheets.values.get$parameters$dateTimeRenderOption$enumDescriptions #> [1] \"Instructs date, time, datetime, and duration fields to be output as doubles in \\\"serial number\\\" format, as popularized by Lotus 1-2-3. The whole number portion of the value (left of the decimal) counts the days since December 30th 1899. The fractional portion (right of the decimal) counts the time as a fraction of the day. For example, January 1st 1900 at noon would be 2.5, 2 because it's 2 days after December 30th 1899, and .5 because noon is half a day. February 1st 1900 at 3pm would be 33.625. This correctly treats the year 1900 as not a leap year.\" #> [2] \"Instructs date, time, datetime, and duration fields to be output as strings in their given number format (which depends on the spreadsheet locale).\"                                                                                                                                                                                                                                                                                                                                                                                                                            #>  #>  #> $sheets.spreadsheets.values.get$parameters$valueRenderOption #> $sheets.spreadsheets.values.get$parameters$valueRenderOption$location #> [1] \"query\" #>  #> $sheets.spreadsheets.values.get$parameters$valueRenderOption$enumDescriptions #> [1] \"Values will be calculated & formatted in the reply according to the cell's formatting. Formatting is based on the spreadsheet's locale, not the requesting user's locale. For example, if `A1` is `1.23` and `A2` is `=A1` and formatted as currency, then `A2` would return `\\\"$1.23\\\"`.\" #> [2] \"Values will be calculated, but not formatted in the reply. For example, if `A1` is `1.23` and `A2` is `=A1` and formatted as currency, then `A2` would return the number `1.23`.\"                                                                                                          #> [3] \"Values will not be calculated. The reply will include the formulas. For example, if `A1` is `1.23` and `A2` is `=A1` and formatted as currency, then A2 would return `\\\"=A1\\\"`.\"                                                                                                           #>  #> $sheets.spreadsheets.values.get$parameters$valueRenderOption$type #> [1] \"string\" #>  #> $sheets.spreadsheets.values.get$parameters$valueRenderOption$description #> [1] \"How values should be represented in the output. The default render option is FORMATTED_VALUE.\" #>  #> $sheets.spreadsheets.values.get$parameters$valueRenderOption$enum #> [1] \"FORMATTED_VALUE\"   \"UNFORMATTED_VALUE\" \"FORMULA\"           #>  #>  #> $sheets.spreadsheets.values.get$parameters$spreadsheetId #> $sheets.spreadsheets.values.get$parameters$spreadsheetId$required #> [1] TRUE #>  #> $sheets.spreadsheets.values.get$parameters$spreadsheetId$location #> [1] \"path\" #>  #> $sheets.spreadsheets.values.get$parameters$spreadsheetId$type #> [1] \"string\" #>  #> $sheets.spreadsheets.values.get$parameters$spreadsheetId$description #> [1] \"The ID of the spreadsheet to retrieve data from.\" #>  #>  #> $sheets.spreadsheets.values.get$parameters$range #> $sheets.spreadsheets.values.get$parameters$range$required #> [1] TRUE #>  #> $sheets.spreadsheets.values.get$parameters$range$type #> [1] \"string\" #>  #> $sheets.spreadsheets.values.get$parameters$range$location #> [1] \"path\" #>  #> $sheets.spreadsheets.values.get$parameters$range$description #> [1] \"The [A1 notation or R1C1 notation](/sheets/api/guides/concepts#cell) of the range to retrieve values from.\" #>  #>  #> $sheets.spreadsheets.values.get$parameters$uploadType #> $sheets.spreadsheets.values.get$parameters$uploadType$description #> [1] \"Legacy upload protocol for media (e.g. \\\"media\\\", \\\"multipart\\\").\" #>  #> $sheets.spreadsheets.values.get$parameters$uploadType$location #> [1] \"query\" #>  #> $sheets.spreadsheets.values.get$parameters$uploadType$type #> [1] \"string\" #>  #>  #> $sheets.spreadsheets.values.get$parameters$callback #> $sheets.spreadsheets.values.get$parameters$callback$location #> [1] \"query\" #>  #> $sheets.spreadsheets.values.get$parameters$callback$description #> [1] \"JSONP\" #>  #> $sheets.spreadsheets.values.get$parameters$callback$type #> [1] \"string\" #>  #>  #> $sheets.spreadsheets.values.get$parameters$fields #> $sheets.spreadsheets.values.get$parameters$fields$description #> [1] \"Selector specifying which fields to include in a partial response.\" #>  #> $sheets.spreadsheets.values.get$parameters$fields$type #> [1] \"string\" #>  #> $sheets.spreadsheets.values.get$parameters$fields$location #> [1] \"query\" #>  #>  #> $sheets.spreadsheets.values.get$parameters$`$.xgafv` #> $sheets.spreadsheets.values.get$parameters$`$.xgafv`$description #> [1] \"V1 error format.\" #>  #> $sheets.spreadsheets.values.get$parameters$`$.xgafv`$enumDescriptions #> [1] \"v1 error format\" \"v2 error format\" #>  #> $sheets.spreadsheets.values.get$parameters$`$.xgafv`$type #> [1] \"string\" #>  #> $sheets.spreadsheets.values.get$parameters$`$.xgafv`$enum #> [1] \"1\" \"2\" #>  #> $sheets.spreadsheets.values.get$parameters$`$.xgafv`$location #> [1] \"query\" #>  #>  #> $sheets.spreadsheets.values.get$parameters$upload_protocol #> $sheets.spreadsheets.values.get$parameters$upload_protocol$description #> [1] \"Upload protocol for media (e.g. \\\"raw\\\", \\\"multipart\\\").\" #>  #> $sheets.spreadsheets.values.get$parameters$upload_protocol$type #> [1] \"string\" #>  #> $sheets.spreadsheets.values.get$parameters$upload_protocol$location #> [1] \"query\" #>  #>  #> $sheets.spreadsheets.values.get$parameters$prettyPrint #> $sheets.spreadsheets.values.get$parameters$prettyPrint$location #> [1] \"query\" #>  #> $sheets.spreadsheets.values.get$parameters$prettyPrint$description #> [1] \"Returns response with indentations and line breaks.\" #>  #> $sheets.spreadsheets.values.get$parameters$prettyPrint$type #> [1] \"boolean\" #>  #> $sheets.spreadsheets.values.get$parameters$prettyPrint$default #> [1] \"true\" #>  #>  #> $sheets.spreadsheets.values.get$parameters$quotaUser #> $sheets.spreadsheets.values.get$parameters$quotaUser$type #> [1] \"string\" #>  #> $sheets.spreadsheets.values.get$parameters$quotaUser$description #> [1] \"Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\" #>  #> $sheets.spreadsheets.values.get$parameters$quotaUser$location #> [1] \"query\" #>  #>  #> $sheets.spreadsheets.values.get$parameters$alt #> $sheets.spreadsheets.values.get$parameters$alt$description #> [1] \"Data format for response.\" #>  #> $sheets.spreadsheets.values.get$parameters$alt$enumDescriptions #> [1] \"Responses with Content-Type of application/json\"       #> [2] \"Media download with context-dependent Content-Type\"    #> [3] \"Responses with Content-Type of application/x-protobuf\" #>  #> $sheets.spreadsheets.values.get$parameters$alt$type #> [1] \"string\" #>  #> $sheets.spreadsheets.values.get$parameters$alt$default #> [1] \"json\" #>  #> $sheets.spreadsheets.values.get$parameters$alt$location #> [1] \"query\" #>  #> $sheets.spreadsheets.values.get$parameters$alt$enum #> [1] \"json\"  \"media\" \"proto\" #>  #>  #> $sheets.spreadsheets.values.get$parameters$oauth_token #> $sheets.spreadsheets.values.get$parameters$oauth_token$description #> [1] \"OAuth 2.0 token for the current user.\" #>  #> $sheets.spreadsheets.values.get$parameters$oauth_token$location #> [1] \"query\" #>  #> $sheets.spreadsheets.values.get$parameters$oauth_token$type #> [1] \"string\" #>  #>  #> $sheets.spreadsheets.values.get$parameters$key #> $sheets.spreadsheets.values.get$parameters$key$description #> [1] \"API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\" #>  #> $sheets.spreadsheets.values.get$parameters$key$type #> [1] \"string\" #>  #> $sheets.spreadsheets.values.get$parameters$key$location #> [1] \"query\" #>  #>  #> $sheets.spreadsheets.values.get$parameters$access_token #> $sheets.spreadsheets.values.get$parameters$access_token$location #> [1] \"query\" #>  #> $sheets.spreadsheets.values.get$parameters$access_token$description #> [1] \"OAuth access token.\" #>  #> $sheets.spreadsheets.values.get$parameters$access_token$type #> [1] \"string\" #>  #>  #>  #> $sheets.spreadsheets.values.get$scopes #> [1] \"drive, drive.file, drive.readonly, spreadsheets, spreadsheets.readonly\" #>  #> $sheets.spreadsheets.values.get$description #> [1] \"Returns a range of values from a spreadsheet. The caller must specify the spreadsheet ID and a range.\" #>  #> $sheets.spreadsheets.values.get$response #> [1] \"ValueRange\" #>  #> $sheets.spreadsheets.values.get$parameterOrder #> [1] \"spreadsheetId\" \"range\"         #>  #>  gs4_endpoints(4) #> $sheets.spreadsheets.get #> $sheets.spreadsheets.get$id #> [1] \"sheets.spreadsheets.get\" #>  #> $sheets.spreadsheets.get$httpMethod #> [1] \"GET\" #>  #> $sheets.spreadsheets.get$path #> /v4/spreadsheets/{spreadsheetId} #>  #> $sheets.spreadsheets.get$parameters #> $sheets.spreadsheets.get$parameters$ranges #> $sheets.spreadsheets.get$parameters$ranges$type #> [1] \"string\" #>  #> $sheets.spreadsheets.get$parameters$ranges$location #> [1] \"query\" #>  #> $sheets.spreadsheets.get$parameters$ranges$description #> [1] \"The ranges to retrieve from the spreadsheet.\" #>  #> $sheets.spreadsheets.get$parameters$ranges$repeated #> [1] TRUE #>  #>  #> $sheets.spreadsheets.get$parameters$includeGridData #> $sheets.spreadsheets.get$parameters$includeGridData$location #> [1] \"query\" #>  #> $sheets.spreadsheets.get$parameters$includeGridData$description #> [1] \"True if grid data should be returned. This parameter is ignored if a field mask was set in the request.\" #>  #> $sheets.spreadsheets.get$parameters$includeGridData$type #> [1] \"boolean\" #>  #>  #> $sheets.spreadsheets.get$parameters$spreadsheetId #> $sheets.spreadsheets.get$parameters$spreadsheetId$required #> [1] TRUE #>  #> $sheets.spreadsheets.get$parameters$spreadsheetId$description #> [1] \"The spreadsheet to request.\" #>  #> $sheets.spreadsheets.get$parameters$spreadsheetId$location #> [1] \"path\" #>  #> $sheets.spreadsheets.get$parameters$spreadsheetId$type #> [1] \"string\" #>  #>  #> $sheets.spreadsheets.get$parameters$uploadType #> $sheets.spreadsheets.get$parameters$uploadType$description #> [1] \"Legacy upload protocol for media (e.g. \\\"media\\\", \\\"multipart\\\").\" #>  #> $sheets.spreadsheets.get$parameters$uploadType$location #> [1] \"query\" #>  #> $sheets.spreadsheets.get$parameters$uploadType$type #> [1] \"string\" #>  #>  #> $sheets.spreadsheets.get$parameters$callback #> $sheets.spreadsheets.get$parameters$callback$location #> [1] \"query\" #>  #> $sheets.spreadsheets.get$parameters$callback$description #> [1] \"JSONP\" #>  #> $sheets.spreadsheets.get$parameters$callback$type #> [1] \"string\" #>  #>  #> $sheets.spreadsheets.get$parameters$fields #> $sheets.spreadsheets.get$parameters$fields$description #> [1] \"Selector specifying which fields to include in a partial response.\" #>  #> $sheets.spreadsheets.get$parameters$fields$type #> [1] \"string\" #>  #> $sheets.spreadsheets.get$parameters$fields$location #> [1] \"query\" #>  #>  #> $sheets.spreadsheets.get$parameters$`$.xgafv` #> $sheets.spreadsheets.get$parameters$`$.xgafv`$description #> [1] \"V1 error format.\" #>  #> $sheets.spreadsheets.get$parameters$`$.xgafv`$enumDescriptions #> [1] \"v1 error format\" \"v2 error format\" #>  #> $sheets.spreadsheets.get$parameters$`$.xgafv`$type #> [1] \"string\" #>  #> $sheets.spreadsheets.get$parameters$`$.xgafv`$enum #> [1] \"1\" \"2\" #>  #> $sheets.spreadsheets.get$parameters$`$.xgafv`$location #> [1] \"query\" #>  #>  #> $sheets.spreadsheets.get$parameters$upload_protocol #> $sheets.spreadsheets.get$parameters$upload_protocol$description #> [1] \"Upload protocol for media (e.g. \\\"raw\\\", \\\"multipart\\\").\" #>  #> $sheets.spreadsheets.get$parameters$upload_protocol$type #> [1] \"string\" #>  #> $sheets.spreadsheets.get$parameters$upload_protocol$location #> [1] \"query\" #>  #>  #> $sheets.spreadsheets.get$parameters$prettyPrint #> $sheets.spreadsheets.get$parameters$prettyPrint$location #> [1] \"query\" #>  #> $sheets.spreadsheets.get$parameters$prettyPrint$description #> [1] \"Returns response with indentations and line breaks.\" #>  #> $sheets.spreadsheets.get$parameters$prettyPrint$type #> [1] \"boolean\" #>  #> $sheets.spreadsheets.get$parameters$prettyPrint$default #> [1] \"true\" #>  #>  #> $sheets.spreadsheets.get$parameters$quotaUser #> $sheets.spreadsheets.get$parameters$quotaUser$type #> [1] \"string\" #>  #> $sheets.spreadsheets.get$parameters$quotaUser$description #> [1] \"Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\" #>  #> $sheets.spreadsheets.get$parameters$quotaUser$location #> [1] \"query\" #>  #>  #> $sheets.spreadsheets.get$parameters$alt #> $sheets.spreadsheets.get$parameters$alt$description #> [1] \"Data format for response.\" #>  #> $sheets.spreadsheets.get$parameters$alt$enumDescriptions #> [1] \"Responses with Content-Type of application/json\"       #> [2] \"Media download with context-dependent Content-Type\"    #> [3] \"Responses with Content-Type of application/x-protobuf\" #>  #> $sheets.spreadsheets.get$parameters$alt$type #> [1] \"string\" #>  #> $sheets.spreadsheets.get$parameters$alt$default #> [1] \"json\" #>  #> $sheets.spreadsheets.get$parameters$alt$location #> [1] \"query\" #>  #> $sheets.spreadsheets.get$parameters$alt$enum #> [1] \"json\"  \"media\" \"proto\" #>  #>  #> $sheets.spreadsheets.get$parameters$oauth_token #> $sheets.spreadsheets.get$parameters$oauth_token$description #> [1] \"OAuth 2.0 token for the current user.\" #>  #> $sheets.spreadsheets.get$parameters$oauth_token$location #> [1] \"query\" #>  #> $sheets.spreadsheets.get$parameters$oauth_token$type #> [1] \"string\" #>  #>  #> $sheets.spreadsheets.get$parameters$key #> $sheets.spreadsheets.get$parameters$key$description #> [1] \"API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\" #>  #> $sheets.spreadsheets.get$parameters$key$type #> [1] \"string\" #>  #> $sheets.spreadsheets.get$parameters$key$location #> [1] \"query\" #>  #>  #> $sheets.spreadsheets.get$parameters$access_token #> $sheets.spreadsheets.get$parameters$access_token$location #> [1] \"query\" #>  #> $sheets.spreadsheets.get$parameters$access_token$description #> [1] \"OAuth access token.\" #>  #> $sheets.spreadsheets.get$parameters$access_token$type #> [1] \"string\" #>  #>  #>  #> $sheets.spreadsheets.get$scopes #> [1] \"drive, drive.file, drive.readonly, spreadsheets, spreadsheets.readonly\" #>  #> $sheets.spreadsheets.get$description #> [1] \"Returns the spreadsheet at the given ID. The caller must specify the spreadsheet ID. By default, data within grids is not returned. You can include grid data in one of 2 ways: * Specify a [field mask](https://developers.google.com/sheets/api/guides/field-masks) listing your desired fields using the `fields` URL parameter in HTTP * Set the includeGridData URL parameter to true. If a field mask is set, the `includeGridData` parameter is ignored For large spreadsheets, as a best practice, retrieve only the specific spreadsheet fields that you want. To retrieve only subsets of spreadsheet data, use the ranges URL parameter. Ranges are specified using [A1 notation](/sheets/api/guides/concepts#cell). You can define a single cell (for example, `A1`) or multiple cells (for example, `A1:D5`). You can also get cells from other sheets within the same spreadsheet (for example, `Sheet2!A1:C4`) or retrieve multiple ranges at once (for example, `?ranges=A1:D5&ranges=Sheet2!A1:C4`). Limiting the range returns only the portions of the spreadsheet that intersect the requested ranges.\" #>  #> $sheets.spreadsheets.get$response #> [1] \"Spreadsheet\" #>  #> $sheets.spreadsheets.get$parameterOrder #> [1] \"spreadsheetId\" #>  #>"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_examples.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Sheets — gs4_examples","title":"Example Sheets — gs4_examples","text":"googlesheets4 makes variety world-readable example Sheets available use documentation reprexes. functions help access example Sheets. See vignette(\"example-sheets\", package = \"googlesheets4\") .","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_examples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Sheets — gs4_examples","text":"","code":"gs4_examples(matches)  gs4_example(matches)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_examples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Example Sheets — gs4_examples","text":"matches regular expression matches name desired example Sheet(s). matches optional plural gs4_examples() , provided, can match multiple Sheets. singular gs4_example() requires matches must match exactly one Sheet.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_examples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example Sheets — gs4_examples","text":"gs4_example(): sheets_id gs4_examples(): named vector built-examples, class drive_id","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_examples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Sheets — gs4_examples","text":"","code":"gs4_examples() #> <drive_id[6]> #>                    cell-contents-and-formats  #> 1peJXEeAp5Qt3ENoTvkhvenQ36N3kLyq6sq9Dh2ufQ6E  #>                                chicken-sheet  #> 1ct9t1Efv8pAGN9YO5gC2QfRq2wT4XjNoTMXpVeUghJU  #>                                       deaths  #> 1VTJjWoP1nshbyxmL9JqXgdVsimaYty21LGxxs018H2Y  #>                         formulas-and-formats  #> 1wPLrWOxxEjp3T1nv2YBxn63FX70Mz5W5Tm4tGc-lRms  #>                                    gapminder  #> 1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY  #>                                     mini-gap  #> 1k94ZVVl6sdj0AXfK9MQOuQ4rOhd1PULqpAu2_kr9MAU  gs4_examples(\"gap\") #> <drive_id[2]> #>                                    gapminder  #> 1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY  #>                                     mini-gap  #> 1k94ZVVl6sdj0AXfK9MQOuQ4rOhd1PULqpAu2_kr9MAU   gs4_example(\"gapminder\") #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #>  Spreadsheet name: gapminder                                    #>                ID: 1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY #>            Locale: en_US                                        #>         Time zone: America/Los_Angeles                          #>       # of sheets: 5                                            #> # of named ranges: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>       Africa: 625 x 6 #>     Americas: 301 x 6 #>         Asia: 397 x 6 #>       Europe: 361 x 6 #>      Oceania: 25 x 6 #>  #> ── <named ranges> ───────────────────────────────────────────────────── #> (Named range): (A1 range)         #>        canada: 'Americas'!A38:F49 gs4_example(\"deaths\") #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #>  Spreadsheet name: deaths                                       #>                ID: 1VTJjWoP1nshbyxmL9JqXgdVsimaYty21LGxxs018H2Y #>            Locale: en_US                                        #>         Time zone: America/Los_Angeles                          #>       # of sheets: 2                                            #> # of named ranges: 2                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>         arts: 1000 x 26 #>        other: 1000 x 26 #>  #> ── <named ranges> ───────────────────────────────────────────────────── #> (Named range): (A1 range)     #>     arts_data: 'arts'!A5:F15  #>    other_data: 'other'!A5:F15"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_find.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Google Sheets — gs4_find","title":"Find Google Sheets — gs4_find","text":"Finds Google Sheets. thin wrapper around googledrive::drive_find(), specifies want list Drive files type = \"spreadsheet\". Therefore, note require auth googledrive! See article Using googlesheets4 googledrive want coordinate auth googlesheets4 googledrive. function emit informational message currently logged googlesheets4 googledrive, different users.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_find.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Google Sheets — gs4_find","text":"","code":"gs4_find(...)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_find.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Google Sheets — gs4_find","text":"... Arguments (type, hard-wired type = \"spreadsheet\") passed along googledrive::drive_find().","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_find.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Google Sheets — gs4_find","text":"object class dribble, tibble one row per file.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_find.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Google Sheets — gs4_find","text":"","code":"# see all your Sheets gs4_find() #> # A dribble: 9 × 3 #>   name               id       drive_resource    #>   <chr>              <drv_id> <list>            #> 1 geological-canary  13fmUp0… <named list [37]> #> 2 blubbery-lobo      1foTYXQ… <named list [36]> #> 3 bacciform-booby    15WqCxH… <named list [35]> #> 4 childsafe-squid    1uGu_BH… <named list [36]> #> 5 fiery-hart         18KiiL2… <named list [36]> #> 6 chicken-sheet      1StV8oq… <named list [36]> #> 7 releasable-rooster 1cMnXxJ… <named list [36]> #> 8 eonian-atlasmoth   1BMEsbT… <named list [36]> #> 9 gapminder          1ksUQqF… <named list [34]>  # see 5 Sheets, prioritized by creation time x <- gs4_find(order_by = \"createdTime desc\", n_max = 5) x #> # A dribble: 5 × 3 #>   name              id       drive_resource    #>   <chr>             <drv_id> <list>            #> 1 geological-canary 13fmUp0… <named list [37]> #> 2 blubbery-lobo     1foTYXQ… <named list [36]> #> 3 bacciform-booby   15WqCxH… <named list [35]> #> 4 childsafe-squid   1uGu_BH… <named list [36]> #> 5 fiery-hart        18KiiL2… <named list [36]>  # hoist the creation date, using other packages in the tidyverse # x %>% #   tidyr::hoist(drive_resource, created_on = \"createdTime\") %>% #   dplyr::mutate(created_on = as.Date(created_on))"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_fodder.html","id":null,"dir":"Reference","previous_headings":"","what":"Create useful spreadsheet filler — gs4_fodder","title":"Create useful spreadsheet filler — gs4_fodder","text":"Creates data frame useful filling spreadsheet, just need sheet experiment . data frame n rows m columns properties: Column names match Sheets displays: \"\", \"B\", \"C\", . Inner cell values reflect coordinates value land sheet, A1-notation. first row \"B2\", \"C2\", . Note n-row data frame occupy n + 1 rows sheet, column names occupy first row.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_fodder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create useful spreadsheet filler — gs4_fodder","text":"","code":"gs4_fodder(n = 10, m = n)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_fodder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create useful spreadsheet filler — gs4_fodder","text":"n Number rows. m Number columns.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_fodder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create useful spreadsheet filler — gs4_fodder","text":"data frame character vectors.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_fodder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create useful spreadsheet filler — gs4_fodder","text":"","code":"gs4_foddergs4_fodder(5, 3) #>    A  B  C #> 1 A2 B2 C2 #> 2 A3 B3 C3 #> 3 A4 B4 C4 #> 4 A5 B5 C5 #> 5 A6 B6 C6"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for Google Sheets formulas — gs4_formula","title":"Class for Google Sheets formulas — gs4_formula","text":"order write formula Google Sheets, need store object class googlesheets4_formula. distinguish \"regular\" character string string interpreted formula. googlesheets4_formula S3 class implemented using vctrs package.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for Google Sheets formulas — gs4_formula","text":"","code":"gs4_formula(x = character())"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for Google Sheets formulas — gs4_formula","text":"x Character.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class for Google Sheets formulas — gs4_formula","text":"S3 vector class googlesheets4_formula.","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for Google Sheets formulas — gs4_formula","text":"","code":"dat <- data.frame(x = c(1, 5, 3, 2, 4, 6))  ss <- gs4_create(\"gs4-formula-demo\", sheets = dat) #> ✔ Creating new Sheet: gs4-formula-demo. ss #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: gs4-formula-demo                             #>               ID: 1wAsBFtyYRUPdINx7m9AAjz1G6UB2cNKYE4DD-1btB0Y #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>          dat: 7 x 1  summaries <- tibble::tribble(   ~desc, ~summaries,   \"max\", \"=max(A:A)\",   \"sum\", \"=sum(A:A)\",   \"min\", \"=min(A:A)\",   \"sparkline\", \"=SPARKLINE(A:A, {\\\"color\\\", \\\"blue\\\"})\" )  # explicitly declare a column as `googlesheets4_formula` summaries$summaries <- gs4_formula(summaries$summaries) summaries #> # A tibble: 4 × 2 #>   desc      summaries                          #>   <chr>     <fmla>                             #> 1 max       =max(A:A)                          #> 2 sum       =sum(A:A)                          #> 3 min       =min(A:A)                          #> 4 sparkline =SPARKLINE(A:A, {\"color\", \"blue\"})  range_write(ss, data = summaries, range = \"C1\", reformat = FALSE) #> ✔ Editing gs4-formula-demo. #> ✔ Writing to sheet dat. #> ✔ Changing dims: (7 x 1) --> (7 x 4).  miscellany <- tibble::tribble(   ~desc, ~example,   \"hyperlink\", \"=HYPERLINK(\\\"http://www.google.com/\\\",\\\"Google\\\")\",   \"image\", \"=IMAGE(\\\"https://www.google.com/images/srpr/logo3w.png\\\")\" ) miscellany$example <- gs4_formula(miscellany$example) miscellany #> # A tibble: 2 × 2 #>   desc      example                                                 #>   <chr>     <fmla>                                                  #> 1 hyperlink =HYPERLINK(\"http://www.google.com/\",\"Google\")           #> 2 image     =IMAGE(\"https://www.google.com/images/srpr/logo3w.png\")  sheet_write(miscellany, ss = ss) #> ✔ Writing to gs4-formula-demo. #> ✔ Writing to sheet miscellany.  # clean up gs4_find(\"gs4-formula-demo\") %>%   googledrive::drive_trash() #> File trashed: #> • gs4-formula-demo <id: 1wAsBFtyYRUPdINx7m9AAjz1G6UB2cNKYE4DD-1btB0Y>"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Sheet metadata — gs4_get","title":"Get Sheet metadata — gs4_get","text":"Retrieve spreadsheet-specific metadata, details individual (work)sheets named ranges. gs4_get() complements googledrive::drive_get(), returns metadata exists file Drive.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Sheet metadata — gs4_get","text":"","code":"gs4_get(ss)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Sheet metadata — gs4_get","text":"ss Something identifies Google Sheet: file id string drive_id URL can recover id one-row dribble, googledrive represents Drive files instance googlesheets4_spreadsheet, gs4_get() returns Processed as_sheets_id().","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Sheet metadata — gs4_get","text":"list S3 class googlesheets4_spreadsheet, printing purposes.","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Sheet metadata — gs4_get","text":"","code":"gs4_get(gs4_example(\"mini-gap\")) #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: mini-gap                                     #>               ID: 1k94ZVVl6sdj0AXfK9MQOuQ4rOhd1PULqpAu2_kr9MAU #>           Locale: en_US                                        #>        Time zone: America/Los_Angeles                          #>      # of sheets: 5                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>       Africa: 6 x 6 #>     Americas: 6 x 6 #>         Asia: 6 x 6 #>       Europe: 6 x 6 #>      Oceania: 6 x 6"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_has_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Is there a token on hand? — gs4_has_token","title":"Is there a token on hand? — gs4_has_token","text":"Reports whether googlesheets4 stored token, ready use downstream requests.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_has_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is there a token on hand? — gs4_has_token","text":"","code":"gs4_has_token()"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_has_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is there a token on hand? — gs4_has_token","text":"Logical.","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_has_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is there a token on hand? — gs4_has_token","text":"","code":"gs4_has_token() #> [1] TRUE"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_oauth_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Get currently configured OAuth app (deprecated) — gs4_oauth_app","title":"Get currently configured OAuth app (deprecated) — gs4_oauth_app","text":"light new gargle::gargle_oauth_client() constructor class name, gs4_oauth_app() replaced gs4_oauth_client().","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_oauth_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get currently configured OAuth app (deprecated) — gs4_oauth_app","text":"","code":"gs4_oauth_app()"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_random.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random Sheet name — gs4_random","title":"Generate a random Sheet name — gs4_random","text":"Generates random name, suitable newly created Sheet, using ids::adjective_animal().","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random Sheet name — gs4_random","text":"","code":"gs4_random(n = 1)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_random.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random Sheet name — gs4_random","text":"n Number names generate.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_random.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a random Sheet name — gs4_random","text":"character vector.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_random.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a random Sheet name — gs4_random","text":"","code":"gs4_random() #> [1] \"unfearing-guineafowl\""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_scopes.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce scopes specific to the Sheets API — gs4_scopes","title":"Produce scopes specific to the Sheets API — gs4_scopes","text":"called arguments, gs4_scopes() returns named character vector scopes associated Sheets API. gs4_scopes(scopes =) given, abbreviated entry \"sheets.readonly\" expanded full scope (\"https://www.googleapis.com/auth/sheets.readonly\" case). Unrecognized scopes passed unchanged.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_scopes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce scopes specific to the Sheets API — gs4_scopes","text":"","code":"gs4_scopes(scopes = NULL)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_scopes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce scopes specific to the Sheets API — gs4_scopes","text":"scopes One API scopes. scope can specified full , Sheets API-specific scopes, abbreviated form recognized gs4_scopes(): \"spreadsheets\" = \"https://www.googleapis.com/auth/spreadsheets\" (default) \"spreadsheets.readonly\" = \"https://www.googleapis.com/auth/spreadsheets.readonly\" \"drive\" = \"https://www.googleapis.com/auth/drive\" \"drive.readonly\" = \"https://www.googleapis.com/auth/drive.readonly\" \"drive.file\" = \"https://www.googleapis.com/auth/drive.file\" See https://developers.google.com/identity/protocols/oauth2/scopes#sheets details permissions scope.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_scopes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce scopes specific to the Sheets API — gs4_scopes","text":"character vector scopes.","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_scopes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce scopes specific to the Sheets API — gs4_scopes","text":"","code":"gs4_scopes(\"spreadsheets\") #> [1] \"https://www.googleapis.com/auth/spreadsheets\" gs4_scopes(\"spreadsheets.readonly\") #> [1] \"https://www.googleapis.com/auth/spreadsheets.readonly\" gs4_scopes(\"drive\") #> [1] \"https://www.googleapis.com/auth/drive\" gs4_scopes() #>                                            spreadsheets  #>          \"https://www.googleapis.com/auth/spreadsheets\"  #>                                   spreadsheets.readonly  #> \"https://www.googleapis.com/auth/spreadsheets.readonly\"  #>                                                   drive  #>                 \"https://www.googleapis.com/auth/drive\"  #>                                          drive.readonly  #>        \"https://www.googleapis.com/auth/drive.readonly\"  #>                                              drive.file  #>            \"https://www.googleapis.com/auth/drive.file\""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce configured token — gs4_token","title":"Produce configured token — gs4_token","text":"internal use programming around Sheets API. Returns token pre-processed httr::config(). users need handle tokens \"hand\" , even need control, gs4_auth() need. current token, gs4_auth() called either load cache initiate OAuth2.0 flow. auth deactivated via gs4_deauth(), gs4_token() returns NULL.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce configured token — gs4_token","text":"","code":"gs4_token()"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce configured token — gs4_token","text":"request object (S3 class provided httr).","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce configured token — gs4_token","text":"","code":"req <- request_generate(   \"sheets.spreadsheets.get\",   list(spreadsheetId = \"abc\"),   token = gs4_token() ) req #> $method #> [1] \"GET\" #>  #> $url #> [1] \"https://sheets.googleapis.com/v4/spreadsheets/abc\" #>  #> $body #> named list() #>  #> $token #> <request> #> Auth token: TokenServiceAccount #>"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Get info on current user — gs4_user","title":"Get info on current user — gs4_user","text":"Reveals email address user associated current token. token loaded yet, function initiate auth.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get info on current user — gs4_user","text":"","code":"gs4_user()"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get info on current user — gs4_user","text":"email address , token loaded, NULL.","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/gs4_user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get info on current user — gs4_user","text":"","code":"gs4_user() #> ℹ Logged in to googlesheets4 as #>   googlesheets4-dev-docs@robust-fin-276504.iam.gserviceaccount.com."},{"path":"https://googlesheets4.tidyverse.org/dev/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_autofit.html","id":null,"dir":"Reference","previous_headings":"","what":"Auto-fit columns or rows to the data — range_autofit","title":"Auto-fit columns or rows to the data — range_autofit","text":"Applies automatic resizing either columns rows (work)sheet. width height targeted columns rows, respectively, determined current cell contents. affects appearance sheet browser affect values dimensions way.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_autofit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auto-fit columns or rows to the data — range_autofit","text":"","code":"range_autofit(ss, sheet = NULL, range = NULL, dimension = c(\"columns\", \"rows\"))"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_autofit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auto-fit columns or rows to the data — range_autofit","text":"ss Something identifies Google Sheet: file id string drive_id URL can recover id one-row dribble, googledrive represents Drive files instance googlesheets4_spreadsheet, gs4_get() returns Processed as_sheets_id(). sheet Sheet modify, sense \"worksheet\" \"tab\". can identify sheet name, string, position, number. Ignored sheet specified via range. neither argument specifies sheet, defaults first visible sheet. range columns rows resize. Optional. want resize columns rows, use dimension instead. usual range specifications accepted, targeted range must specify columns (e.g. \"B:F\") rows (e.g. \"2:7\"). dimension Ignored range given. consulted, dimension must either \"columns\" (default) \"rows\". simplest way request auto-resize columns rows.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_autofit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auto-fit columns or rows to the data — range_autofit","text":"input ss, instance sheets_id","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_autofit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Auto-fit columns or rows to the data — range_autofit","text":"","code":"dat <- tibble::tibble(   fruit = c(\"date\", \"lime\", \"pear\", \"plum\") )  ss <- gs4_create(\"range-autofit-demo\", sheets = dat) #> ✔ Creating new Sheet: range-autofit-demo. ss #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: range-autofit-demo                           #>               ID: 1FtOR2JL6W5pdr4icEqVF0INagfXwiKfkplC8p0UMTT0 #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>          dat: 5 x 1  # open in the browser gs4_browse(ss)  # shrink column A to fit the short fruit names range_autofit(ss) #> ✔ Editing range-autofit-demo. #> ✔ Resizing one or more columns in dat. # in the browser, notice how the column width shrank  # send some longer fruit names dat2 <- tibble::tibble(   fruit = c(\"cucumber\", \"honeydew\") ) ss %>% sheet_append(dat2) #> ✔ Writing to range-autofit-demo. #> ✔ Appending 2 rows to dat. # in the browser, see that column A is now too narrow to show the data  range_autofit(ss) #> ✔ Editing range-autofit-demo. #> ✔ Resizing one or more columns in dat. # in the browser, see the column A reveals all the data now  # clean up gs4_find(\"range-autofit-demo\") %>%   googledrive::drive_trash() #> File trashed: #> • range-autofit-demo #>   <id: 1FtOR2JL6W5pdr4icEqVF0INagfXwiKfkplC8p0UMTT0>"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete cells — range_delete","title":"Delete cells — range_delete","text":"Deletes range cells shifts cells deleted area. several related tasks implemented functions: clear cells value /format, use range_clear(). delete entire (work)sheet, use sheet_delete(). change dimensions (work)sheet, use sheet_resize().","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete cells — range_delete","text":"","code":"range_delete(ss, sheet = NULL, range, shift = NULL)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete cells — range_delete","text":"ss Something identifies Google Sheet: file id string drive_id URL can recover id one-row dribble, googledrive represents Drive files instance googlesheets4_spreadsheet, gs4_get() returns Processed as_sheets_id(). sheet Sheet delete, sense \"worksheet\" \"tab\". can identify sheet name, string, position, number. Ignored sheet specified via range. neither argument specifies sheet, defaults first visible sheet. range Cells delete. couple differences range works functions (e.g. range_read()): range must specified. range must named range. range must name (work) sheet. Instead, use sheet_delete() delete entire sheet. Row-column-ranges especially relevant, \"2:6\" \"D\". Remember can also use helpers cell-specification, cell_cols(4:6), cell_rows(5). shift Must one \"\" \"left\", specified. Required range rows-column-range (case, can figure ). Determines whether deleted area filled shifting surrounding cells left.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_delete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete cells — range_delete","text":"input ss, instance sheets_id","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_delete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete cells — range_delete","text":"","code":"# create a data frame to use as initial data df <- gs4_fodder(10)  # create Sheet ss <- gs4_create(\"range-delete-example\", sheets = list(df)) #> ✔ Creating new Sheet: range-delete-example.  # delete some rows range_delete(ss, range = \"2:4\") #> ✔ Editing range-delete-example. #> ✔ Deleting cells in sheet Sheet1.  # delete a column range_delete(ss, range = \"C\") #> ✔ Editing range-delete-example. #> ✔ Deleting cells in sheet Sheet1.  # delete a rectangle and specify how to shift remaining cells range_delete(ss, range = \"B3:F4\", shift = \"left\") #> ✔ Editing range-delete-example. #> ✔ Deleting cells in sheet Sheet1.  # clean up gs4_find(\"range-delete-example\") %>%   googledrive::drive_trash() #> File trashed: #> • range-delete-example #>   <id: 1APnoIvLoFvSVPJiQ2reT4p7j2JafHolPlhyLTdCuTNY>"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_flood.html","id":null,"dir":"Reference","previous_headings":"","what":"Flood or clear a range of cells — range_flood","title":"Flood or clear a range of cells — range_flood","text":"range_flood() \"floods\" range cells content. range_clear() wrapper handles common special case clearing cell value. functions, default, also clear format, can specified via reformat.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_flood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flood or clear a range of cells — range_flood","text":"","code":"range_flood(ss, sheet = NULL, range = NULL, cell = NULL, reformat = TRUE)  range_clear(ss, sheet = NULL, range = NULL, reformat = TRUE)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_flood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flood or clear a range of cells — range_flood","text":"ss Something identifies Google Sheet: file id string drive_id URL can recover id one-row dribble, googledrive represents Drive files instance googlesheets4_spreadsheet, gs4_get() returns Processed as_sheets_id(). sheet Sheet write , sense \"worksheet\" \"tab\". can identify sheet name, string, position, number. range cell range read . NULL, non-empty cells read. Otherwise specify range described Sheets A1 notation using helpers documented cell-specification. Sheets uses fairly standard spreadsheet range notation, although bit different Excel. Examples valid ranges: \"Sheet1!A1:B2\", \"Sheet1!:\", \"Sheet1!1:2\", \"Sheet1!A5:\", \"A1:B2\", \"Sheet1\". Interpreted strictly, even range forces inclusion leading, trailing, embedded empty rows columns. Takes precedence skip, n_max sheet. Note range can named range, like \"sales_data\", without cell reference. cell value fill cells range . unspecified, default NULL results clearing existing value. reformat Logical, indicates whether reformat affected cells. Currently googlesheets4 provides real support formatting, reformat = TRUE effectively means edited cells become unformatted.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_flood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flood or clear a range of cells — range_flood","text":"input ss, instance sheets_id","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_flood.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flood or clear a range of cells — range_flood","text":"","code":"# create a data frame to use as initial data df <- gs4_fodder(10)  # create Sheet ss <- gs4_create(\"range-flood-demo\", sheets = list(df)) #> ✔ Creating new Sheet: range-flood-demo.  # default behavior (`cell = NULL`): clear value and format range_flood(ss, range = \"A1:B3\") #> ✔ Editing range-flood-demo. #> ✔ Editing sheet Sheet1.  # clear value but preserve format range_flood(ss, range = \"C1:D3\", reformat = FALSE) #> ✔ Editing range-flood-demo. #> ✔ Editing sheet Sheet1.  # send new value range_flood(ss, range = \"4:5\", cell = \";-)\") #> ✔ Editing range-flood-demo. #> ✔ Editing sheet Sheet1.  # send formatting # WARNING: use these unexported, internal functions at your own risk! # This not (yet) officially supported, but it's possible. blue_background <- googlesheets4:::CellData(   userEnteredFormat = googlesheets4:::new(     \"CellFormat\",     backgroundColor = googlesheets4:::new(       \"Color\",       red = 159 / 255, green = 183 / 255, blue = 196 / 255     )   ) ) range_flood(ss, range = \"I:J\", cell = blue_background) #> ✔ Editing range-flood-demo. #> ✔ Editing sheet Sheet1.  # range_clear() is a shortcut where `cell = NULL` always range_clear(ss, range = \"9:9\") #> ✔ Editing range-flood-demo. #> ✔ Editing sheet Sheet1. range_clear(ss, range = \"10:10\", reformat = FALSE) #> ✔ Editing range-flood-demo. #> ✔ Editing sheet Sheet1.  # clean up gs4_find(\"range-flood-demo\") %>%   googledrive::drive_trash() #> File trashed: #> • range-flood-demo <id: 1WyMWar39MV9_YQMuJ2ceYGbX1kxX89ewd191npeBBvc>"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a Sheet into a data frame — range_read","title":"Read a Sheet into a data frame — range_read","text":"main \"read\" function googlesheets4 package. goes two names, want make sense two contexts: read_sheet() evokes table-reading functions, like readr::read_csv() readxl::read_excel(). sheet case refers Google (spread)Sheet. range_read() right name according naming convention used throughout googlesheets4 package. read_sheet() range_read() synonyms can use either one.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a Sheet into a data frame — range_read","text":"","code":"range_read(   ss,   sheet = NULL,   range = NULL,   col_names = TRUE,   col_types = NULL,   na = \"\",   trim_ws = TRUE,   skip = 0,   n_max = Inf,   guess_max = min(1000, n_max),   .name_repair = \"unique\" )  read_sheet(   ss,   sheet = NULL,   range = NULL,   col_names = TRUE,   col_types = NULL,   na = \"\",   trim_ws = TRUE,   skip = 0,   n_max = Inf,   guess_max = min(1000, n_max),   .name_repair = \"unique\" )"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a Sheet into a data frame — range_read","text":"ss Something identifies Google Sheet: file id string drive_id URL can recover id one-row dribble, googledrive represents Drive files instance googlesheets4_spreadsheet, gs4_get() returns Processed as_sheets_id(). sheet Sheet read, sense \"worksheet\" \"tab\". can identify sheet name, string, position, number. Ignored sheet specified via range. neither argument specifies sheet, defaults first visible sheet. range cell range read . NULL, non-empty cells read. Otherwise specify range described Sheets A1 notation using helpers documented cell-specification. Sheets uses fairly standard spreadsheet range notation, although bit different Excel. Examples valid ranges: \"Sheet1!A1:B2\", \"Sheet1!:\", \"Sheet1!1:2\", \"Sheet1!A5:\", \"A1:B2\", \"Sheet1\". Interpreted strictly, even range forces inclusion leading, trailing, embedded empty rows columns. Takes precedence skip, n_max sheet. Note range can named range, like \"sales_data\", without cell reference. col_names TRUE use first row column names, FALSE get default names, character vector provide column names directly. user provides col_types, col_names can one entry per column one entry per unskipped column. col_types Column types. Either NULL guess spreadsheet string readr-style shortcodes, one character code per column. exactly one col_type specified, recycled. See Column Specification . na Character vector strings interpret missing values. default, blank cells treated missing data. trim_ws Logical. leading trailing whitespace trimmed cell contents? skip Minimum number rows skip reading anything, column names data. Leading empty rows automatically skipped, lower bound. Ignored range given. n_max Maximum number data rows parse returned tibble. Trailing empty rows automatically skipped, upper bound number rows result. Ignored range given. n_max imposed locally, reading non-empty cells, , speed issue, better use range. guess_max Maximum number data rows use guessing column types. .name_repair Handling column names. default, googlesheets4 ensures column names empty unique. full support .name_repair documented tibble::tibble().","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a Sheet into a data frame — range_read","text":"tibble","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_read.html","id":"column-specification","dir":"Reference","previous_headings":"","what":"Column Specification","title":"Read a Sheet into a data frame — range_read","text":"Column types must specified single string readr-style short codes, e.g. \"cci?l\" means \"character, character, integer, guess, logical\". googlesheets4's col spec end , gets ball rolling way consistent readr reinvent wheels. Shortcodes column types: _ -: Skip. Data skipped column still requested API (high-level functions package rectangle-oriented), parsed data frame output. ?: Guess. type guessed cell consensus type selected column. atomic type suitable cells, list-column created, cell converted R object \"best\" type. column types specified, .e. col_types = NULL, types guessed. l: Logical. : Integer. type never guessed data, Sheets formal cell type integers. d n: Numeric, sense \"double\". D: Date. type never guessed data, date cells just serial datetimes bear \"date\" format. t: Time day. type never guessed data, time cells just serial datetimes bear \"time\" format. implemented yet; returns POSIXct. T: Datetime, specifically POSIXct. c: Character. C: Cell. type unique googlesheets4. returns raw cell data, R list, consists everything sent Sheets API cell. S3 type \"CELL_SOMETHING\" \"SHEETS_CELL\". Mostly useful internally, exposed want direct access , e.g., formulas formats. L: List, \"list-column\". cell length-1 atomic vector discovered type. Still come: duration (code :) factor (code f).","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a Sheet into a data frame — range_read","text":"","code":"ss <- gs4_example(\"deaths\") read_sheet(ss, range = \"A5:F15\") #> ✔ Reading from deaths. #> ✔ Range A5:F15. #> # A tibble: 10 × 6 #>    Name               Profession   Age `Has kids` `Date of birth`     #>    <chr>              <chr>      <dbl> <lgl>      <dttm>              #>  1 David Bowie        musician      69 TRUE       1947-01-08 00:00:00 #>  2 Carrie Fisher      actor         60 TRUE       1956-10-21 00:00:00 #>  3 Chuck Berry        musician      90 TRUE       1926-10-18 00:00:00 #>  4 Bill Paxton        actor         61 TRUE       1955-05-17 00:00:00 #>  5 Prince             musician      57 TRUE       1958-06-07 00:00:00 #>  6 Alan Rickman       actor         69 FALSE      1946-02-21 00:00:00 #>  7 Florence Henderson actor         82 TRUE       1934-02-14 00:00:00 #>  8 Harper Lee         author        89 FALSE      1926-04-28 00:00:00 #>  9 Zsa Zsa Gábor      actor         99 TRUE       1917-02-06 00:00:00 #> 10 George Michael     musician      53 FALSE      1963-06-25 00:00:00 #> # ℹ 1 more variable: `Date of death` <dttm> read_sheet(ss, range = \"other!A5:F15\", col_types = \"ccilDD\") #> ✔ Reading from deaths. #> ✔ Range ''other'!A5:F15'. #> # A tibble: 10 × 6 #>    Name     Profession   Age `Has kids` `Date of birth` `Date of death` #>    <chr>    <chr>      <int> <lgl>      <date>          <date>          #>  1 Vera Ru… scientist     88 TRUE       1928-07-23      2016-12-25      #>  2 Mohamed… athlete       74 TRUE       1942-01-17      2016-06-03      #>  3 Morley … journalist    84 TRUE       1931-11-08      2016-05-19      #>  4 Fidel C… politician    90 TRUE       1926-08-13      2016-11-25      #>  5 Antonin… lawyer        79 TRUE       1936-03-11      2016-02-13      #>  6 Jo Cox   politician    41 TRUE       1974-06-22      2016-06-16      #>  7 Janet R… lawyer        78 FALSE      1938-07-21      2016-11-07      #>  8 Gwen If… journalist    61 FALSE      1955-09-29      2016-11-14      #>  9 John Gl… astronaut     95 TRUE       1921-07-28      2016-12-08      #> 10 Pat Sum… coach         64 TRUE       1952-06-14      2016-06-28      read_sheet(ss, range = \"arts_data\", col_types = \"ccilDD\") #> ✔ Reading from deaths. #> ✔ Range arts_data. #> # A tibble: 10 × 6 #>    Name     Profession   Age `Has kids` `Date of birth` `Date of death` #>    <chr>    <chr>      <int> <lgl>      <date>          <date>          #>  1 David B… musician      69 TRUE       1947-01-08      2016-01-10      #>  2 Carrie … actor         60 TRUE       1956-10-21      2016-12-27      #>  3 Chuck B… musician      90 TRUE       1926-10-18      2017-03-18      #>  4 Bill Pa… actor         61 TRUE       1955-05-17      2017-02-25      #>  5 Prince   musician      57 TRUE       1958-06-07      2016-04-21      #>  6 Alan Ri… actor         69 FALSE      1946-02-21      2016-01-14      #>  7 Florenc… actor         82 TRUE       1934-02-14      2016-11-24      #>  8 Harper … author        89 FALSE      1926-04-28      2016-02-19      #>  9 Zsa Zsa… actor         99 TRUE       1917-02-06      2016-12-18      #> 10 George … musician      53 FALSE      1963-06-25      2016-12-25       read_sheet(gs4_example(\"mini-gap\")) #> ✔ Reading from mini-gap. #> ✔ Range Africa. #> # A tibble: 5 × 6 #>   country      continent  year lifeExp     pop gdpPercap #>   <chr>        <chr>     <dbl>   <dbl>   <dbl>     <dbl> #> 1 Algeria      Africa     1952    43.1 9279525     2449. #> 2 Angola       Africa     1952    30.0 4232095     3521. #> 3 Benin        Africa     1952    38.2 1738315     1063. #> 4 Botswana     Africa     1952    47.6  442308      851. #> 5 Burkina Faso Africa     1952    32.0 4469979      543. read_sheet(   gs4_example(\"mini-gap\"),   sheet = \"Europe\",   range = \"A:D\",   col_types = \"ccid\" ) #> ✔ Reading from mini-gap. #> ✔ Range ''Europe'!A:D'. #> # A tibble: 5 × 4 #>   country                continent  year lifeExp #>   <chr>                  <chr>     <int>   <dbl> #> 1 Albania                Europe     1952    55.2 #> 2 Austria                Europe     1952    66.8 #> 3 Belgium                Europe     1952    68   #> 4 Bosnia and Herzegovina Europe     1952    53.8 #> 5 Bulgaria               Europe     1952    59.6"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_read_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Read cells from a Sheet — range_read_cells","title":"Read cells from a Sheet — range_read_cells","text":"low-level function returns cell data tibble one row per cell. tibble integer variables row col (referring location Google Sheet), A1-style reference loc, cell list-column. flagship function read_sheet(), .k.. range_read(), users looking , rather range_read_cells(). read_sheet() basically range_read_cells() (function), followed spread_sheet(), looks reshaping column typing. really want raw cell data API, range_read_cells() !","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_read_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read cells from a Sheet — range_read_cells","text":"","code":"range_read_cells(   ss,   sheet = NULL,   range = NULL,   skip = 0,   n_max = Inf,   cell_data = c(\"default\", \"full\"),   discard_empty = TRUE )"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_read_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read cells from a Sheet — range_read_cells","text":"ss Something identifies Google Sheet: file id string drive_id URL can recover id one-row dribble, googledrive represents Drive files instance googlesheets4_spreadsheet, gs4_get() returns Processed as_sheets_id(). sheet Sheet read, sense \"worksheet\" \"tab\". can identify sheet name, string, position, number. Ignored sheet specified via range. neither argument specifies sheet, defaults first visible sheet. range cell range read . NULL, non-empty cells read. Otherwise specify range described Sheets A1 notation using helpers documented cell-specification. Sheets uses fairly standard spreadsheet range notation, although bit different Excel. Examples valid ranges: \"Sheet1!A1:B2\", \"Sheet1!:\", \"Sheet1!1:2\", \"Sheet1!A5:\", \"A1:B2\", \"Sheet1\". Interpreted strictly, even range forces inclusion leading, trailing, embedded empty rows columns. Takes precedence skip, n_max sheet. Note range can named range, like \"sales_data\", without cell reference. skip Minimum number rows skip reading anything, column names data. Leading empty rows automatically skipped, lower bound. Ignored range given. n_max Maximum number data rows parse returned tibble. Trailing empty rows automatically skipped, upper bound number rows result. Ignored range given. n_max imposed locally, reading non-empty cells, , speed issue, better use range. cell_data much detail get cell. \"default\" retrieves fields actually used googlesheets4 guesses imposes cell column types. \"full\" retrieves fields CellData schema. main differences relate cell formatting. discard_empty Whether discard cells data. Literally, check effectiveValue, one fields CellData schema.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_read_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read cells from a Sheet — range_read_cells","text":"tibble one row per cell range.","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_read_cells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read cells from a Sheet — range_read_cells","text":"","code":"range_read_cells(gs4_example(\"deaths\"), range = \"arts_data\") #> ✔ Reading from deaths. #> ✔ Range arts_data. #> # A tibble: 66 × 4 #>      row   col loc   cell       #>    <int> <int> <chr> <list>     #>  1     5     1 A5    <CELL_TEX> #>  2     5     2 B5    <CELL_TEX> #>  3     5     3 C5    <CELL_TEX> #>  4     5     4 D5    <CELL_TEX> #>  5     5     5 E5    <CELL_TEX> #>  6     5     6 F5    <CELL_TEX> #>  7     6     1 A6    <CELL_TEX> #>  8     6     2 B6    <CELL_TEX> #>  9     6     3 C6    <CELL_NUM> #> 10     6     4 D6    <CELL_LOG> #> # ℹ 56 more rows  # if you want detailed and exhaustive cell data, do this range_read_cells(   gs4_example(\"formulas-and-formats\"),   cell_data = \"full\",   discard_empty = FALSE ) #> ✔ Reading from formulas-and-formats. #> ✔ Range Sheet1. #> # A tibble: 678 × 4 #>      row   col loc   cell       #>    <int> <int> <chr> <list>     #>  1     1     1 A1    <CELL_TEX> #>  2     1     2 B1    <CELL_TEX> #>  3     1     3 C1    <CELL_TEX> #>  4     1     4 D1    <CELL_TEX> #>  5     1     5 E1    <CELL_TEX> #>  6     1     6 F1    <CELL_TEX> #>  7     2     1 A2    <CELL_NUM> #>  8     2     2 B2    <CELL_NUM> #>  9     2     3 C2    <CELL_NUM> #> 10     2     4 D2    <CELL_TEX> #> # ℹ 668 more rows"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_speedread.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Sheet as CSV — range_speedread","title":"Read Sheet as CSV — range_speedread","text":"function uses quick--dirty method read Sheet bypasses Sheets API , instead, parses CSV representation data. can much faster range_read() – noticeably \"large\" spreadsheets. real downsides, though, recommend approach speed difference justifies . limitations must accept get faster reading: formatted cell values available, underlying values details formats. target named range range. access data type cell, .e. know logical, numeric, datetime. must re-discovered based CSV data (specified user). Auth error handling handled bit differently internally, may lead behaviour differs functions googlesheets4. Note Sheets API still used retrieve metadata target Sheet, order support range specification. range_speedread() also sends auth token request, unless previous call gs4_deauth() put googlesheets4 de-authorized state.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_speedread.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Sheet as CSV — range_speedread","text":"","code":"range_speedread(ss, sheet = NULL, range = NULL, skip = 0, ...)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_speedread.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Sheet as CSV — range_speedread","text":"ss Something identifies Google Sheet: file id string drive_id URL can recover id one-row dribble, googledrive represents Drive files instance googlesheets4_spreadsheet, gs4_get() returns Processed as_sheets_id(). sheet Sheet read, sense \"worksheet\" \"tab\". can identify sheet name, string, position, number. Ignored sheet specified via range. neither argument specifies sheet, defaults first visible sheet. range cell range read . NULL, non-empty cells read. Otherwise specify range described Sheets A1 notation using helpers documented cell-specification. Sheets uses fairly standard spreadsheet range notation, although bit different Excel. Examples valid ranges: \"Sheet1!A1:B2\", \"Sheet1!:\", \"Sheet1!1:2\", \"Sheet1!A5:\", \"A1:B2\", \"Sheet1\". Interpreted strictly, even range forces inclusion leading, trailing, embedded empty rows columns. Takes precedence skip, n_max sheet. Note range can named range, like \"sales_data\", without cell reference. skip Minimum number rows skip reading anything, column names data. Leading empty rows automatically skipped, lower bound. Ignored range given. ... Passed along CSV parsing function (currently readr::read_csv()).","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_speedread.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Sheet as CSV — range_speedread","text":"tibble","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_speedread.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Sheet as CSV — range_speedread","text":"","code":"if (require(\"readr\")) {   # since cell type is not available, use readr's col type specification   range_speedread(     gs4_example(\"deaths\"),     sheet = \"other\",     range = \"A5:F15\",     col_types = cols(       Age = col_integer(),       `Date of birth` = col_date(\"%m/%d/%Y\"),       `Date of death` = col_date(\"%m/%d/%Y\")     )   ) } #> Loading required package: readr #> ✔ Reading from deaths, sheet other, range A5:F15. #> ℹ Export URL: #>   <https://docs.google.com/spreadsheets/d/1VTJjWoP1nshbyxmL9JqXgdVsimaYty21LGxxs018H2Y/export?format=csv&range=A5%3AF15&gid=278837031> #> # A tibble: 10 × 6 #>    Name     Profession   Age `Has kids` `Date of birth` `Date of death` #>    <chr>    <chr>      <int> <lgl>      <date>          <date>          #>  1 Vera Ru… scientist     88 TRUE       1928-07-23      2016-12-25      #>  2 Mohamed… athlete       74 TRUE       1942-01-17      2016-06-03      #>  3 Morley … journalist    84 TRUE       1931-11-08      2016-05-19      #>  4 Fidel C… politician    90 TRUE       1926-08-13      2016-11-25      #>  5 Antonin… lawyer        79 TRUE       1936-03-11      2016-02-13      #>  6 Jo Cox   politician    41 TRUE       1974-06-22      2016-06-16      #>  7 Janet R… lawyer        78 FALSE      1938-07-21      2016-11-07      #>  8 Gwen If… journalist    61 FALSE      1955-09-29      2016-11-14      #>  9 John Gl… astronaut     95 TRUE       1921-07-28      2016-12-08      #> 10 Pat Sum… coach         64 TRUE       1952-06-14      2016-06-28       # write a Sheet that, by default, is NOT world-readable (ss <- sheet_write(chickwts)) #> ✔ Creating new Sheet: fiery-hart. #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: fiery-hart                                   #>               ID: 1gOka4HLJZVZ7LtjFOr5NYN5Dw5It2qXZOpwAayA5ZkU #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>     chickwts: 72 x 2  # demo that range_speedread() sends a token, which is why we can read this range_speedread(ss) #> ✔ Reading from fiery-hart. #> ℹ Export URL: #>   <https://docs.google.com/spreadsheets/d/1gOka4HLJZVZ7LtjFOr5NYN5Dw5It2qXZOpwAayA5ZkU/export?format=csv> #> Rows: 71 Columns: 2 #> ── Column specification ─────────────────────────────────────────────── #> Delimiter: \",\" #> chr (1): feed #> dbl (1): weight #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 71 × 2 #>    weight feed      #>     <dbl> <chr>     #>  1    179 horsebean #>  2    160 horsebean #>  3    136 horsebean #>  4    227 horsebean #>  5    217 horsebean #>  6    168 horsebean #>  7    108 horsebean #>  8    124 horsebean #>  9    143 horsebean #> 10    140 horsebean #> # ℹ 61 more rows  # clean up googledrive::drive_trash(ss) #> File trashed: #> • fiery-hart <id: 1gOka4HLJZVZ7LtjFOr5NYN5Dw5It2qXZOpwAayA5ZkU>"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_write.html","id":null,"dir":"Reference","previous_headings":"","what":"(Over)write new data into a range — range_write","title":"(Over)write new data into a range — range_write","text":"Writes data frame range cells. Main differences sheet_write() (.k.. write_sheet()): Narrower scope. range_write() literally targets cells, whole (work)sheet. edited rectangle explicitly styled table. Nothing special done re: formatting header row freezing rows. Column names can suppressed. means , although data must data frame (least now), range_write() can actually used write arbitrary data. target (spread)Sheet (work)sheet must already exist. ability create Sheet add worksheet. target sheet dimensions \"trimmed\" shrink-wrap data. However, sheet might gain rows /columns, order write data user-specified range. just want add rows existing table, function probably want sheet_append().","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Over)write new data into a range — range_write","text":"","code":"range_write(   ss,   data,   sheet = NULL,   range = NULL,   col_names = TRUE,   reformat = TRUE )"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Over)write new data into a range — range_write","text":"ss Something identifies Google Sheet: file id string drive_id URL can recover id one-row dribble, googledrive represents Drive files instance googlesheets4_spreadsheet, gs4_get() returns Processed as_sheets_id(). data data frame. sheet Sheet write , sense \"worksheet\" \"tab\". can identify sheet name, string, position, number. Ignored sheet specified via range. neither argument specifies sheet, defaults first visible sheet. range write. range argument important similarities differences range elsewhere (e.g. range_read()): Similarities: Can cell range, using A1 notation (\"A1:D3\") using helpers cell-specification. Can combine sheet name cell range (\"Sheet1!A5:\") refer sheet name (range = \"Sheet1\", although sheet = \"Sheet1\" preferred clarity). Difference: Can named range. Difference: range can interpreted start target rectangle (upper left corner) , literally, actual target rectangle. See \"Range specification\" section details. col_names Logical, indicates whether send column names data. reformat Logical, indicates whether reformat affected cells. Currently googlesheets4 provides real support formatting, reformat = TRUE effectively means edited cells become unformatted.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Over)write new data into a range — range_write","text":"input ss, instance sheets_id","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_write.html","id":"range-specification","dir":"Reference","previous_headings":"","what":"Range specification","title":"(Over)write new data into a range — range_write","text":"range argument range_write() special, Sheets API can implement 2 different ways: range represents exactly 1 cell, like \"B3\", taken start (upper left corner) targeted cell rectangle. edited cells determined implicitly extent data writing. frees fiddly range computations based dimensions data. range describes rectangle multiple cells, interpreted actual rectangle edit. possible describe rectangle unbounded right (e.g. \"B2:4\"), bottom (e.g. \"A4:C\"), right bottom (e.g. cell_limits(c(2, 3), c(NA, NA)). Note cells inside rectangle receive updated data format. Important implication: data object big enough fill target rectangle, cells receive new data effectively cleared, .e. existing value format deleted.","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/range_write.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"(Over)write new data into a range — range_write","text":"","code":"# create a Sheet with some initial, empty (work)sheets (ss <- gs4_create(\"range-write-demo\", sheets = c(\"alpha\", \"beta\"))) #> ✔ Creating new Sheet: range-write-demo. #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: range-write-demo                             #>               ID: 1t4-cR00MZQ1eCSgtgk75NIhl6fs7vrm6pELSLboc1mI #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 2                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>        alpha: 1000 x 26 #>         beta: 1000 x 26  df <- data.frame(   x = 1:3,   y = letters[1:3] )  #  write df somewhere other than the \"upper left corner\" range_write(ss, data = df, range = \"D6\") #> ✔ Editing range-write-demo. #> ✔ Writing to sheet alpha.  # view your magnificent creation in the browser gs4_browse(ss)  # send data of disparate types to a 1-row rectangle dat <- tibble::tibble(   string = \"string\",   logical = TRUE,   datetime = Sys.time() ) range_write(ss, data = dat, sheet = \"beta\", col_names = FALSE) #> ✔ Editing range-write-demo. #> ✔ Writing to sheet beta.  # send data of disparate types to a 1-column rectangle dat <- tibble::tibble(   x = list(Sys.time(), FALSE, \"string\") ) range_write(ss, data = dat, range = \"beta!C5\", col_names = FALSE) #> ✔ Editing range-write-demo. #> ✔ Writing to sheet beta.  # clean up gs4_find(\"range-write-demo\") %>%   googledrive::drive_trash() #> File trashed: #> • range-write-demo <id: 1t4-cR00MZQ1eCSgtgk75NIhl6fs7vrm6pELSLboc1mI>"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/request_generate.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Google Sheets API request — request_generate","title":"Generate a Google Sheets API request — request_generate","text":"Generate request, using knowledge Sheets API Discovery Document (https://www.googleapis.com/discovery/v1/apis/sheets/v4/rest). Use request_make() execute request. users , instead, use higher-level wrappers facilitate common tasks, reading writing worksheets cell ranges. functions intended internal use programming around Sheets API. request_generate() lets provide bare minimum input. takes nickname endpoint : Uses API spec look method, path, base_url. Checks params validity completeness respect endpoint. Uses params URL endpoint substitution separates remaining parameters destined body versus query. Adds API key query token = NULL.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/request_generate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Google Sheets API request — request_generate","text":"","code":"request_generate(   endpoint = character(),   params = list(),   key = NULL,   token = gs4_token() )"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/request_generate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Google Sheets API request — request_generate","text":"endpoint Character. Nickname one selected Sheets API v4 endpoints built googlesheets4. Learn gs4_endpoints(). params Named list. Parameters destined endpoint URL substitution, query, body. key API key. Needed requests contain token. need API key absence token explained Google's document \"Credentials, access, security, identity\" (https://support.google.com/googleapi/answer/6158857?hl=en&ref_topic=7013279). order precedence, sources consulted: formal key argument, key parameter params, user-configured API key set gs4_auth_configure() retrieved gs4_api_key(). token Set NULL suppress inclusion token. Note , auth de-activated via gs4_deauth(), gs4_token() actually return NULL.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/request_generate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Google Sheets API request — request_generate","text":"list() Components method, url, body, token, suitable input request_make().","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/request_generate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Google Sheets API request — request_generate","text":"","code":"req <- request_generate(   \"sheets.spreadsheets.get\",   list(spreadsheetId = gs4_example(\"deaths\")),   key = \"PRETEND_I_AM_AN_API_KEY\",   token = NULL ) req #> $method #> [1] \"GET\" #>  #> $url #> [1] \"https://sheets.googleapis.com/v4/spreadsheets/1VTJjWoP1nshbyxmL9JqXgdVsimaYty21LGxxs018H2Y?key=PRETEND_I_AM_AN_API_KEY\" #>  #> $body #> named list() #>  #> $token #> NULL #>"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/request_make.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a Google Sheets API request — request_make","title":"Make a Google Sheets API request — request_make","text":"Low-level function execute Sheets API request. users , instead, use higher-level wrappers facilitate common tasks, reading writing worksheets cell ranges. functions intended internal use programming around Sheets API.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/request_make.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a Google Sheets API request — request_make","text":"","code":"request_make(x, ..., encode = \"json\")"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/request_make.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a Google Sheets API request — request_make","text":"x List. Holds components HTTP request, presumably created request_generate() gargle::request_build(). Must contain method url. present, body token used. ... Optional arguments passed HTTP method. encode body named list, encoded? meaning encode httr::VERB()s, httr::POST(). Note, however, default encode = \"json\", want time calling Sheets API. httr default \"multipart\". acceptable values \"form\" \"raw\".","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/request_make.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a Google Sheets API request — request_make","text":"Object class response httr.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/request_make.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a Google Sheets API request — request_make","text":"make_request() thin wrapper around gargle::request_retry(), adding googlesheets4 user agent. Typically input created request_generate() gargle::request_build() output processed process_response(). gargle::request_retry() retries requests error 429 RESOURCE_EXHAUSTED. basic scheme exponential backoff, one tweak specific Sheets API, documented usage limits: \"limit 500 requests per 100 seconds per project 100 requests per 100 seconds per user\" Note \"project\" means everyone using googlesheets4 configured OAuth client. potentially lot users, acting independently. hit \"100 requests per 100 seconds per user\" limit (really mean ), first wait time bit 100 seconds, revert exponential backoff. experience lots retries, especially 100 second delays, means use googlesheets4 casual time get OAuth client use service account token. explained gargle vignette vignette(\"get-api-credentials\", package = \"gargle\").","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add one or more (work)sheets — sheet_add","title":"Add one or more (work)sheets — sheet_add","text":"Adds one (work)sheets existing (spread)Sheet. Note sheet names must unique.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add one or more (work)sheets — sheet_add","text":"","code":"sheet_add(ss, sheet = NULL, ..., .before = NULL, .after = NULL)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add one or more (work)sheets — sheet_add","text":"ss Something identifies Google Sheet: file id string drive_id URL can recover id one-row dribble, googledrive represents Drive files instance googlesheets4_spreadsheet, gs4_get() returns Processed as_sheets_id(). sheet One new sheet names. unspecified, one new sheet added Sheets autogenerates name form \"SheetN\". ... Optional parameters specify additional properties, common new sheet(s). relevant users. Specify fields SheetProperties schema name = value form. ., .Optional specification put new sheet(s). Specify, , one ... Refer existing sheet name (via string) position (via number). unspecified, Sheets puts new sheet(s) end.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add one or more (work)sheets — sheet_add","text":"input ss, instance sheets_id","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_add.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add one or more (work)sheets — sheet_add","text":"","code":"ss <- gs4_create(\"add-sheets-to-me\") #> ✔ Creating new Sheet: add-sheets-to-me.  # the only required argument is the target spreadsheet ss %>% sheet_add() #> ✔ Adding 1 sheet to add-sheets-to-me: #> • Sheet2  # but you CAN specify sheet name and/or position ss %>% sheet_add(\"apple\", .after = 1) #> ✔ Adding 1 sheet to add-sheets-to-me: #> • apple ss %>% sheet_add(\"banana\", .after = \"apple\") #> ✔ Adding 1 sheet to add-sheets-to-me: #> • banana  # add multiple sheets at once ss %>% sheet_add(c(\"coconut\", \"dragonfruit\")) #> ✔ Adding 2 sheets to add-sheets-to-me: #> • coconut #> • dragonfruit  # keeners can even specify additional sheet properties ss %>%   sheet_add(     sheet = \"eggplant\",     .before = 1,     gridProperties = list(       rowCount = 3, columnCount = 6, frozenRowCount = 1     )   ) #> ✔ Adding 1 sheet to add-sheets-to-me: #> • eggplant  # get an overview of the sheets sheet_properties(ss) #> # A tibble: 7 × 8 #>   name        index      id type  visible grid_rows grid_columns data   #>   <chr>       <int>   <int> <chr> <lgl>       <int>        <int> <list> #> 1 eggplant        0  3.11e8 GRID  TRUE            3            6 <NULL> #> 2 Sheet1          1  0      GRID  TRUE         1000           26 <NULL> #> 3 apple           2  1.39e9 GRID  TRUE         1000           26 <NULL> #> 4 banana          3  1.80e9 GRID  TRUE         1000           26 <NULL> #> 5 Sheet2          4  1.72e8 GRID  TRUE         1000           26 <NULL> #> 6 coconut         5  1.70e9 GRID  TRUE         1000           26 <NULL> #> 7 dragonfruit     6  6.85e8 GRID  TRUE         1000           26 <NULL>  # clean up gs4_find(\"add-sheets-to-me\") %>%   googledrive::drive_trash() #> File trashed: #> • add-sheets-to-me <id: 1U2tvkAjC3w3h1UK1Q1d-hYt-jE87HfFtnfzbfIExnwA>"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_append.html","id":null,"dir":"Reference","previous_headings":"","what":"Append rows to a sheet — sheet_append","title":"Append rows to a sheet — sheet_append","text":"Adds one new rows last row data (work)sheet, increasing row dimension sheet necessary.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_append.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append rows to a sheet — sheet_append","text":"","code":"sheet_append(ss, data, sheet = 1)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_append.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append rows to a sheet — sheet_append","text":"ss Something identifies Google Sheet: file id string drive_id URL can recover id one-row dribble, googledrive represents Drive files instance googlesheets4_spreadsheet, gs4_get() returns Processed as_sheets_id(). data data frame. sheet Sheet append , sense \"worksheet\" \"tab\". can identify sheet name, string, position, number.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_append.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append rows to a sheet — sheet_append","text":"input ss, instance sheets_id","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_append.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Append rows to a sheet — sheet_append","text":"","code":"# we will recreate the table of \"other\" deaths from this example Sheet (deaths <- gs4_example(\"deaths\") %>%   range_read(range = \"other_data\", col_types = \"????DD\")) #> ✔ Reading from deaths. #> ✔ Range other_data. #> # A tibble: 10 × 6 #>    Name     Profession   Age `Has kids` `Date of birth` `Date of death` #>    <chr>    <chr>      <dbl> <lgl>      <date>          <date>          #>  1 Vera Ru… scientist     88 TRUE       1928-07-23      2016-12-25      #>  2 Mohamed… athlete       74 TRUE       1942-01-17      2016-06-03      #>  3 Morley … journalist    84 TRUE       1931-11-08      2016-05-19      #>  4 Fidel C… politician    90 TRUE       1926-08-13      2016-11-25      #>  5 Antonin… lawyer        79 TRUE       1936-03-11      2016-02-13      #>  6 Jo Cox   politician    41 TRUE       1974-06-22      2016-06-16      #>  7 Janet R… lawyer        78 FALSE      1938-07-21      2016-11-07      #>  8 Gwen If… journalist    61 FALSE      1955-09-29      2016-11-14      #>  9 John Gl… astronaut     95 TRUE       1921-07-28      2016-12-08      #> 10 Pat Sum… coach         64 TRUE       1952-06-14      2016-06-28       # split the data into 3 pieces, which we will send separately deaths_one <- deaths[1:5, ] deaths_two <- deaths[6, ] deaths_three <- deaths[7:10, ]  # create a Sheet and send the first chunk of data ss <- gs4_create(\"sheet-append-demo\", sheets = list(deaths = deaths_one)) #> ✔ Creating new Sheet: sheet-append-demo.  # append a single row ss %>% sheet_append(deaths_two) #> ✔ Writing to sheet-append-demo. #> ✔ Appending 1 row to deaths.  # append remaining rows ss %>% sheet_append(deaths_three) #> ✔ Writing to sheet-append-demo. #> ✔ Appending 4 rows to deaths.  # read and check against the original deaths_replica <- range_read(ss, col_types = \"????DD\") #> ✔ Reading from sheet-append-demo. #> ✔ Range deaths. identical(deaths, deaths_replica) #> [1] TRUE  # clean up gs4_find(\"sheet-append-demo\") %>%   googledrive::drive_trash() #> File trashed: #> • sheet-append-demo <id: 1SuJJqnjquAR3nU7oqIsUPvmOTVh-tT_AmM5DifaEgNQ>"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_copy.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy a (work)sheet — sheet_copy","title":"Copy a (work)sheet — sheet_copy","text":"Copies (work)sheet, within current (spread)Sheet another Sheet.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_copy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy a (work)sheet — sheet_copy","text":"","code":"sheet_copy(   from_ss,   from_sheet = NULL,   to_ss = from_ss,   to_sheet = NULL,   .before = NULL,   .after = NULL )"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_copy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy a (work)sheet — sheet_copy","text":"from_ss Something identifies Google Sheet: file id string drive_id URL can recover id one-row dribble, googledrive represents Drive files instance googlesheets4_spreadsheet, gs4_get() returns Processed as_sheets_id(). from_sheet Sheet copy, sense \"worksheet\" \"tab\". can identify sheet name, string, position, number. Defaults first visible sheet. to_ss Sheet copy . Accepts types input from_ss, also defaults , unspecified. to_sheet Optional. Name new sheet, string. specify , Google generates name, along lines \"Copy blah\". Note sheet names must unique within Sheet, automatic name violate , Google also de-duplicates , meaning conceivably end \"Copy blah 2\". better ideas sheet names, specify to_sheet. ., .Optional specification put new sheet. Specify, , one ... Refer existing sheet name (via string) position (via number). unspecified, Sheets puts new sheet end.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_copy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy a (work)sheet — sheet_copy","text":"receiving Sheet, to_ ss, instance sheets_id.","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_copy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy a (work)sheet — sheet_copy","text":"","code":"ss_aaa <- gs4_create(   \"sheet-copy-demo-aaa\",   sheets = list(mtcars = head(mtcars), chickwts = head(chickwts)) ) #> ✔ Creating new Sheet: sheet-copy-demo-aaa.  # copy 'mtcars' sheet within existing Sheet, accept autogenerated name ss_aaa %>%   sheet_copy() #> ✔ Duplicating sheet mtcars in sheet-copy-demo-aaa. #> ✔ Copied as Copy of mtcars.  # copy 'mtcars' sheet within existing Sheet # specify new sheet's name and location ss_aaa %>%   sheet_copy(to_sheet = \"mtcars-the-sequel\", .after = 1) #> ✔ Duplicating sheet Copy of mtcars in sheet-copy-demo-aaa. #> ✔ Copied as mtcars-the-sequel.  # make a second Sheet ss_bbb <- gs4_create(\"sheet-copy-demo-bbb\") #> ✔ Creating new Sheet: sheet-copy-demo-bbb.  # copy 'chickwts' sheet from first Sheet to second # accept auto-generated name and default location ss_aaa %>%   sheet_copy(\"chickwts\", to_ss = ss_bbb) #> ✔ Copying sheet chickwts from sheet-copy-demo-aaa to #>   sheet-copy-demo-bbb. #> ✔ Copied as Copy of chickwts.  # copy 'chickwts' sheet from first Sheet to second, # WITH a specific name and into a specific location ss_aaa %>%   sheet_copy(     \"chickwts\",     to_ss = ss_bbb, to_sheet = \"chicks-two\", .before = 1   ) #> ✔ Copying sheet chickwts from sheet-copy-demo-aaa to #>   sheet-copy-demo-bbb. #> ✔ Copied as chicks-two.  # clean up gs4_find(\"sheet-copy-demo\") %>%   googledrive::drive_trash() #> Files trashed: #> • sheet-copy-demo-bbb #>   <id: 1cqj3E2nzhQu9K_LnBQepP6GtEIPXoegdTKglxXefAn8> #> • sheet-copy-demo-aaa #>   <id: 1cWDgcnD5Q2ovbYyU_izaj6k9XhEyBqKEfmDc_Dsv8VU>"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete one or more (work)sheets — sheet_delete","title":"Delete one or more (work)sheets — sheet_delete","text":"Deletes one (work)sheets (spread)Sheet.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete one or more (work)sheets — sheet_delete","text":"","code":"sheet_delete(ss, sheet)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete one or more (work)sheets — sheet_delete","text":"ss Something identifies Google Sheet: file id string drive_id URL can recover id one-row dribble, googledrive represents Drive files instance googlesheets4_spreadsheet, gs4_get() returns Processed as_sheets_id(). sheet Sheet delete, sense \"worksheet\" \"tab\". can identify sheet name, string, position, number. can pass vector delete multiple sheets even list, need mix names positions.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_delete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete one or more (work)sheets — sheet_delete","text":"input ss, instance sheets_id","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_delete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete one or more (work)sheets — sheet_delete","text":"","code":"ss <- gs4_create(\"delete-sheets-from-me\") #> ✔ Creating new Sheet: delete-sheets-from-me. sheet_add(ss, c(\"alpha\", \"beta\", \"gamma\", \"delta\")) #> ✔ Adding 4 sheets to delete-sheets-from-me: #> • alpha #> • beta #> • gamma #> • delta  # get an overview of the sheets sheet_properties(ss) #> # A tibble: 5 × 8 #>   name   index         id type  visible grid_rows grid_columns data   #>   <chr>  <int>      <int> <chr> <lgl>       <int>        <int> <list> #> 1 Sheet1     0          0 GRID  TRUE         1000           26 <NULL> #> 2 alpha      1 1174488111 GRID  TRUE         1000           26 <NULL> #> 3 beta       2 1083437080 GRID  TRUE         1000           26 <NULL> #> 4 gamma      3  568528342 GRID  TRUE         1000           26 <NULL> #> 5 delta      4  463264526 GRID  TRUE         1000           26 <NULL>  # delete sheets sheet_delete(ss, 1) #> ✔ Deleting 1 sheet from delete-sheets-from-me: #> • Sheet1 sheet_delete(ss, \"gamma\") #> ✔ Deleting 1 sheet from delete-sheets-from-me: #> • gamma sheet_delete(ss, list(\"alpha\", 2)) #> ✔ Deleting 2 sheets from delete-sheets-from-me: #> • alpha #> • beta  # get an overview of the sheets sheet_properties(ss) #> # A tibble: 1 × 8 #>   name  index        id type  visible grid_rows grid_columns data   #>   <chr> <int>     <int> <chr> <lgl>       <int>        <int> <list> #> 1 delta     0 463264526 GRID  TRUE         1000           26 <NULL>  # clean up gs4_find(\"delete-sheets-from-me\") %>%   googledrive::drive_trash() #> File trashed: #> • delete-sheets-from-me #>   <id: 1-V9cZJ3FUBXYweQv45EuMldv3Y7AtTGbCT_lkUZKm8M>"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data about (work)sheets — sheet_properties","title":"Get data about (work)sheets — sheet_properties","text":"Reveals full metadata just names (work)sheets inside (spread)Sheet.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data about (work)sheets — sheet_properties","text":"","code":"sheet_properties(ss)  sheet_names(ss)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_properties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data about (work)sheets — sheet_properties","text":"ss Something identifies Google Sheet: file id string drive_id URL can recover id one-row dribble, googledrive represents Drive files instance googlesheets4_spreadsheet, gs4_get() returns Processed as_sheets_id().","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_properties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data about (work)sheets — sheet_properties","text":"sheet_properties(): tibble one row per (work)sheet. sheet_names(): character vector (work)sheet names.","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_properties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data about (work)sheets — sheet_properties","text":"","code":"ss <- gs4_example(\"gapminder\") sheet_properties(ss) #> # A tibble: 5 × 8 #>   name     index         id type  visible grid_rows grid_columns data   #>   <chr>    <int>      <int> <chr> <lgl>       <int>        <int> <list> #> 1 Africa       0  780868077 GRID  TRUE          625            6 <NULL> #> 2 Americas     1   45759261 GRID  TRUE          301            6 <NULL> #> 3 Asia         2 1984823455 GRID  TRUE          397            6 <NULL> #> 4 Europe       3 1503562052 GRID  TRUE          361            6 <NULL> #> 5 Oceania      4 1796776040 GRID  TRUE           25            6 <NULL> sheet_names(ss) #> [1] \"Africa\"   \"Americas\" \"Asia\"     \"Europe\"   \"Oceania\""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_relocate.html","id":null,"dir":"Reference","previous_headings":"","what":"Relocate one or more (work)sheets — sheet_relocate","title":"Relocate one or more (work)sheets — sheet_relocate","text":"Move (work)sheets around within (spread)Sheet. outcome predictable common simple use cases: Reorder move one sheets front. Move single sheet specific (arbitrary) location. Move multiple sheets back .= 100 (.can number greater equal number sheets). relocation task complicated puzzled result, break sequence simpler calls sheet_relocate().","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_relocate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relocate one or more (work)sheets — sheet_relocate","text":"","code":"sheet_relocate(ss, sheet, .before = if (is.null(.after)) 1, .after = NULL)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_relocate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relocate one or more (work)sheets — sheet_relocate","text":"ss Something identifies Google Sheet: file id string drive_id URL can recover id one-row dribble, googledrive represents Drive files instance googlesheets4_spreadsheet, gs4_get() returns Processed as_sheets_id(). sheet Sheet relocate, sense \"worksheet\" \"tab\". can identify sheet name, string, position, number. can pass vector move multiple sheets even list, need mix names positions. ., .Specification locate sheets(s) identified sheet. Exactly one ..must specified. Refer existing sheet name (via string) position (via number).","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_relocate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relocate one or more (work)sheets — sheet_relocate","text":"input ss, instance sheets_id","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_relocate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relocate one or more (work)sheets — sheet_relocate","text":"","code":"sheet_names <- c(\"alfa\", \"bravo\", \"charlie\", \"delta\", \"echo\", \"foxtrot\") ss <- gs4_create(\"sheet-relocate-demo\", sheets = sheet_names) #> ✔ Creating new Sheet: sheet-relocate-demo. sheet_names(ss) #> [1] \"alfa\"    \"bravo\"   \"charlie\" \"delta\"   \"echo\"    \"foxtrot\"  # move one sheet, forwards then backwards ss %>%   sheet_relocate(\"echo\", .before = \"bravo\") %>%   sheet_names() #> ✔ Relocating sheets in sheet-relocate-demo. #> [1] \"alfa\"    \"echo\"    \"bravo\"   \"charlie\" \"delta\"   \"foxtrot\" ss %>%   sheet_relocate(\"echo\", .after = \"delta\") %>%   sheet_names() #> ✔ Relocating sheets in sheet-relocate-demo. #> [1] \"alfa\"    \"bravo\"   \"charlie\" \"delta\"   \"echo\"    \"foxtrot\"  # reorder and move multiple sheets to the front ss %>%   sheet_relocate(list(\"foxtrot\", 4)) %>%   sheet_names() #> ✔ Relocating sheets in sheet-relocate-demo. #> [1] \"foxtrot\" \"delta\"   \"alfa\"    \"bravo\"   \"charlie\" \"echo\"     # put the sheets back in the original order ss %>%   sheet_relocate(sheet_names) %>%   sheet_names() #> ✔ Relocating sheets in sheet-relocate-demo. #> [1] \"alfa\"    \"bravo\"   \"charlie\" \"delta\"   \"echo\"    \"foxtrot\"  # reorder and move multiple sheets to the back ss %>%   sheet_relocate(c(\"bravo\", \"alfa\", \"echo\"), .after = 10) %>%   sheet_names() #> ✔ Relocating sheets in sheet-relocate-demo. #> [1] \"charlie\" \"delta\"   \"foxtrot\" \"bravo\"   \"alfa\"    \"echo\"     # clean up gs4_find(\"sheet-relocate-demo\") %>%   googledrive::drive_trash() #> File trashed: #> • sheet-relocate-demo #>   <id: 1UGzQ3kUuqrgJbah5B3MErXTTxnKo8dXlm_0eLYHj-5A>"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_rename.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename a (work)sheet — sheet_rename","title":"Rename a (work)sheet — sheet_rename","text":"Changes name (work)sheet.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_rename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename a (work)sheet — sheet_rename","text":"","code":"sheet_rename(ss, sheet = NULL, new_name)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_rename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename a (work)sheet — sheet_rename","text":"ss Something identifies Google Sheet: file id string drive_id URL can recover id one-row dribble, googledrive represents Drive files instance googlesheets4_spreadsheet, gs4_get() returns Processed as_sheets_id(). sheet Sheet rename, sense \"worksheet\" \"tab\". can identify sheet name, string, position, number. Defaults first visible sheet. new_name New name sheet, string. required.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_rename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename a (work)sheet — sheet_rename","text":"input ss, instance sheets_id","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_rename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename a (work)sheet — sheet_rename","text":"","code":"ss <- gs4_create(   \"sheet-rename-demo\",   sheets = list(cars = head(cars), chickwts = head(chickwts)) ) #> ✔ Creating new Sheet: sheet-rename-demo. sheet_names(ss) #> [1] \"cars\"     \"chickwts\"  ss %>%   sheet_rename(1, new_name = \"automobiles\") %>%   sheet_rename(\"chickwts\", new_name = \"poultry\") #> ✔ Renaming sheet cars to automobiles. #> ✔ Renaming sheet chickwts to poultry.  # clean up gs4_find(\"sheet-rename-demo\") %>%   googledrive::drive_trash() #> File trashed: #> • sheet-rename-demo <id: 19XKhUay6n89dmasSqOAoRE3YaiiC_CJZqkuCB_tZZJ8>"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_resize.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the size of a (work)sheet — sheet_resize","title":"Change the size of a (work)sheet — sheet_resize","text":"Changes number rows /columns (work)sheet.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_resize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the size of a (work)sheet — sheet_resize","text":"","code":"sheet_resize(ss, sheet = NULL, nrow = NULL, ncol = NULL, exact = FALSE)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_resize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the size of a (work)sheet — sheet_resize","text":"ss Something identifies Google Sheet: file id string drive_id URL can recover id one-row dribble, googledrive represents Drive files instance googlesheets4_spreadsheet, gs4_get() returns Processed as_sheets_id(). sheet Sheet resize, sense \"worksheet\" \"tab\". can identify sheet name, string, position, number. nrow, ncol Desired number rows columns, respectively. default NULL means leave unchanged. exact Logical, indicating whether impose nrow ncol exactly treat lower bounds. exact = FALSE, sheet_resize() can add cells. exact = TRUE, cells can deleted contents lost.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_resize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the size of a (work)sheet — sheet_resize","text":"input ss, instance sheets_id","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_resize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change the size of a (work)sheet — sheet_resize","text":"","code":"# create a Sheet with the default initial worksheet (ss <- gs4_create(\"sheet-resize-demo\")) #> ✔ Creating new Sheet: sheet-resize-demo. #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: sheet-resize-demo                            #>               ID: 1In2mZLersnQvsCXDij8uMth_6blkEDryKSGLs4V6UsQ #>           Locale: en_US                                        #>        Time zone: Etc/GMT                                      #>      # of sheets: 1                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>       Sheet1: 1000 x 26  # see (work)sheet dims sheet_properties(ss) #> # A tibble: 1 × 8 #>   name   index    id type  visible grid_rows grid_columns data   #>   <chr>  <int> <int> <chr> <lgl>       <int>        <int> <list> #> 1 Sheet1     0     0 GRID  TRUE         1000           26 <NULL>  # no resize occurs sheet_resize(ss, nrow = 2, ncol = 6) #> ✔ Resizing sheet Sheet1 in sheet-resize-demo. #> ℹ No need to change existing dims (1000 x 26).  # reduce sheet size sheet_resize(ss, nrow = 5, ncol = 7, exact = TRUE) #> ✔ Resizing sheet Sheet1 in sheet-resize-demo. #> ✔ Changing dims: (1000 x 26) --> (5 x 7).  # add rows sheet_resize(ss, nrow = 7) #> ✔ Resizing sheet Sheet1 in sheet-resize-demo. #> ✔ Changing dims: (5 x 7) --> (7 x 7).  # add columns sheet_resize(ss, ncol = 10) #> ✔ Resizing sheet Sheet1 in sheet-resize-demo. #> ✔ Changing dims: (7 x 7) --> (7 x 10).  # add rows and columns sheet_resize(ss, nrow = 9, ncol = 12) #> ✔ Resizing sheet Sheet1 in sheet-resize-demo. #> ✔ Changing dims: (7 x 10) --> (9 x 12).  # re-inspect (work)sheet dims sheet_properties(ss) #> # A tibble: 1 × 8 #>   name   index    id type  visible grid_rows grid_columns data   #>   <chr>  <int> <int> <chr> <lgl>       <int>        <int> <list> #> 1 Sheet1     0     0 GRID  TRUE            9           12 <NULL>  # clean up gs4_find(\"sheet-resize-demo\") %>%   googledrive::drive_trash() #> File trashed: #> • sheet-resize-demo <id: 1In2mZLersnQvsCXDij8uMth_6blkEDryKSGLs4V6UsQ>"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_write.html","id":null,"dir":"Reference","previous_headings":"","what":"(Over)write new data into a Sheet — sheet_write","title":"(Over)write new data into a Sheet — sheet_write","text":"one main ways write data googlesheets4. function writes data frame (work)sheet inside (spread)Sheet. target sheet styled table: Special formatting applied header row, holds column names. first row (header row) frozen. sheet's dimensions set \"shrink wrap\" data. existing Sheet specified via ss, function delegates gs4_create() new Sheet's name randomly generated. undesirable, call gs4_create() directly get control. sheet specified sheet identify existing sheet, new sheet added receive data. sheet specifies existing sheet, effectively overwritten! pre-existing values, formats, dimensions cleared targeted sheet gets new values dimensions data. function goes two names, want make sense two contexts: write_sheet() evokes table-writing functions, like readr::write_csv(). sheet technically refers individual (work)sheet (also sort refers associated Google (spread)Sheet). sheet_write() right name according naming convention used throughout googlesheets4 package. write_sheet() sheet_write() equivalent can use either one.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Over)write new data into a Sheet — sheet_write","text":"","code":"sheet_write(data, ss = NULL, sheet = NULL)  write_sheet(data, ss = NULL, sheet = NULL)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Over)write new data into a Sheet — sheet_write","text":"data data frame. zero rows, send one empty pseudo-row data, can apply usual table styling. empty row goes away (gets filled, actually) first time send data sheet_append(). ss Something identifies Google Sheet: file id string drive_id URL can recover id one-row dribble, googledrive represents Drive files instance googlesheets4_spreadsheet, gs4_get() returns Processed as_sheets_id(). sheet Sheet write , sense \"worksheet\" \"tab\". can identify sheet name, string, position, number.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Over)write new data into a Sheet — sheet_write","text":"input ss, instance sheets_id","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheet_write.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"(Over)write new data into a Sheet — sheet_write","text":"","code":"df <- data.frame(   x = 1:3,   y = letters[1:3] )  # specify only a data frame, get a new Sheet, with a random name ss <- write_sheet(df) #> ✔ Creating new Sheet: heartsick-sealion. read_sheet(ss) #> ✔ Reading from heartsick-sealion. #> ✔ Range df. #> # A tibble: 3 × 2 #>       x y     #>   <dbl> <chr> #> 1     1 a     #> 2     2 b     #> 3     3 c      # clean up googledrive::drive_trash(ss) #> File trashed: #> • heartsick-sealion <id: 1raK9OEJL9FuIPe04XuTU2ejMiMLxFCp0shqv6yxlIdA>  # create a Sheet with some initial, placeholder data ss <- gs4_create(   \"sheet-write-demo\",   sheets = list(alpha = data.frame(x = 1), omega = data.frame(x = 1)) ) #> ✔ Creating new Sheet: sheet-write-demo.  # write df into its own, new sheet sheet_write(df, ss = ss) #> ✔ Writing to sheet-write-demo. #> ✔ Writing to sheet df.  # write mtcars into the sheet named \"omega\" sheet_write(mtcars, ss = ss, sheet = \"omega\") #> ✔ Writing to sheet-write-demo. #> ✔ Writing to sheet omega.  # get an overview of the sheets sheet_properties(ss) #> # A tibble: 3 × 8 #>   name  index         id type  visible grid_rows grid_columns data   #>   <chr> <int>      <int> <chr> <lgl>       <int>        <int> <list> #> 1 alpha     0 1210260710 GRID  TRUE            2            1 <NULL> #> 2 omega     1  485532401 GRID  TRUE           33           11 <NULL> #> 3 df        2 1026427133 GRID  TRUE            4            2 <NULL>  # view your magnificent creation in the browser gs4_browse(ss)  # clean up gs4_find(\"sheet-write-demo\") %>%   googledrive::drive_trash() #> File trashed: #> • sheet-write-demo <id: 1BOZqS7t3BVC3P7uQTK2AV4E8k_eGQVIKBp6JfhJP28A>"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheets_id.html","id":null,"dir":"Reference","previous_headings":"","what":"sheets_id class — sheets_id","title":"sheets_id class — sheets_id","text":"sheets_id S3 class marks string Google Sheet's id, Sheets API docs refer spreadsheetId. object class sheets_id also drive_id class, used googledrive purpose. means can provide sheets_id googledrive functions, order anything Sheet nothing spreadsheet. Examples: change Sheet's name, parent folder, permissions. Read using googlesheets4 googledrive together vignette(\"drive--sheets\"). Note sheets_id object intended hold just one id, parent class drive_id can used multiple ids. as_sheets_id() generic function converts various inputs instance sheets_id. See . print sheets_id, attempt reveal Sheet's current metadata, via gs4_get(). can fail variety reasons (e.g. offline), input sheets_id always revealed returned, invisibly.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheets_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sheets_id class — sheets_id","text":"","code":"as_sheets_id(x, ...)"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheets_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sheets_id class — sheets_id","text":"x Something contains Google Sheet id: id string, drive_id, URL, one-row dribble, googlesheets4_spreadsheet. ... arguments passed methods. (used.)","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheets_id.html","id":"as-sheets-id-","dir":"Reference","previous_headings":"","what":"as_sheets_id()","title":"sheets_id class — sheets_id","text":"inputs can converted sheets_id: Spreadsheet id, \"string containing letters, numbers, special characters\", typically 44 characters long, experience. Example: 1qpyC0XzvTcKT6EISywvqESX3A0MwQoFDE8p-Bll4hps. URL, can excavate spreadsheet file id. Example: \"https://docs.google.com/spreadsheets/d/1BzfL0kZUz1TsI5zxJF1WNF01IxvC67FbOJUiiGMZ_mQ/edit#gid=1150108545\". one-row dribble, \"Drive tibble\" used googledrive package. general, dribble can represent several files, one row per file. Since googlesheets4 vectorized spreadsheets, prepared accept one-row dribble. googledrive::drive_get(\"YOUR_SHEET_NAME\") great way look Sheet via name. gs4_find(\"YOUR_SHEET_NAME\") another good way get hands Sheet. Spreadsheet meta data, returned , e.g., gs4_get(). Literally, object class googlesheets4_spreadsheet.","code":""},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/reference/sheets_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sheets_id class — sheets_id","text":"","code":"mini_gap_id <- gs4_example(\"mini-gap\") class(mini_gap_id) #> [1] \"sheets_id\"  \"drive_id\"   \"vctrs_vctr\" \"character\"  mini_gap_id #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: mini-gap                                     #>               ID: 1k94ZVVl6sdj0AXfK9MQOuQ4rOhd1PULqpAu2_kr9MAU #>           Locale: en_US                                        #>        Time zone: America/Los_Angeles                          #>      # of sheets: 5                                            #>  #> ── <sheets> ─────────────────────────────────────────────────────────── #> (Sheet name): (Nominal extent in rows x columns) #>       Africa: 6 x 6 #>     Americas: 6 x 6 #>         Asia: 6 x 6 #>       Europe: 6 x 6 #>      Oceania: 6 x 6  as_sheets_id(\"abc\") #>  #> ── <googlesheets4_spreadsheet> ──────────────────────────────────────── #> Spreadsheet name: \"<unknown>\" #>               ID: abc         #>           Locale: <unknown>   #>        Time zone: <unknown>   #>      # of sheets: <unknown>   #>  #> Unable to get metadata for this Sheet. Error details: #> Client error: (404) NOT_FOUND #> • A specified resource is not found, or the request is rejected by #>   undisclosed reasons, such as whitelisting. #> • Requested entity was not found."},{"path":"https://googlesheets4.tidyverse.org/dev/reference/spread_sheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Spread a data frame of cells into spreadsheet shape — spread_sheet","title":"Spread a data frame of cells into spreadsheet shape — spread_sheet","text":"Reshapes data frame cells (presumably output range_read_cells()) another data frame, .e., puts back shape source spreadsheet. function exists primarily internal use testing. flagship function range_read(), .k.. read_sheet(), users looking . basically range_read_cells() + spread_sheet().","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/spread_sheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spread a data frame of cells into spreadsheet shape — spread_sheet","text":"","code":"spread_sheet(   df,   col_names = TRUE,   col_types = NULL,   na = \"\",   trim_ws = TRUE,   guess_max = min(1000, max(df$row)),   .name_repair = \"unique\" )"},{"path":"https://googlesheets4.tidyverse.org/dev/reference/spread_sheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spread a data frame of cells into spreadsheet shape — spread_sheet","text":"df data frame one row per (nonempty) cell, integer variables row column (probably referring location within spreadsheet), list-column cell SHEET_CELL objects. col_names TRUE use first row column names, FALSE get default names, character vector provide column names directly. user provides col_types, col_names can one entry per column one entry per unskipped column. col_types Column types. Either NULL guess spreadsheet string readr-style shortcodes, one character code per column. exactly one col_type specified, recycled. See Column Specification . na Character vector strings interpret missing values. default, blank cells treated missing data. trim_ws Logical. leading trailing whitespace trimmed cell contents? guess_max Maximum number data rows use guessing column types. .name_repair Handling column names. default, googlesheets4 ensures column names empty unique. full support .name_repair documented tibble::tibble().","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/spread_sheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spread a data frame of cells into spreadsheet shape — spread_sheet","text":"tibble shape original spreadsheet, enforcing user's wishes regarding column names, column types, NA strings, whitespace trimming.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/reference/spread_sheet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spread a data frame of cells into spreadsheet shape — spread_sheet","text":"","code":"df <- gs4_example(\"mini-gap\") %>%   range_read_cells() #> ✔ Reading from mini-gap. #> ✔ Range Africa. spread_sheet(df) #> # A tibble: 5 × 6 #>   country      continent  year lifeExp     pop gdpPercap #>   <chr>        <chr>     <dbl>   <dbl>   <dbl>     <dbl> #> 1 Algeria      Africa     1952    43.1 9279525     2449. #> 2 Angola       Africa     1952    30.0 4232095     3521. #> 3 Benin        Africa     1952    38.2 1738315     1063. #> 4 Botswana     Africa     1952    47.6  442308      851. #> 5 Burkina Faso Africa     1952    32.0 4469979      543.  # ^^ gets same result as ... read_sheet(gs4_example(\"mini-gap\")) #> ✔ Reading from mini-gap. #> ✔ Range Africa. #> # A tibble: 5 × 6 #>   country      continent  year lifeExp     pop gdpPercap #>   <chr>        <chr>     <dbl>   <dbl>   <dbl>     <dbl> #> 1 Algeria      Africa     1952    43.1 9279525     2449. #> 2 Angola       Africa     1952    30.0 4232095     3521. #> 3 Benin        Africa     1952    38.2 1738315     1063. #> 4 Botswana     Africa     1952    47.6  442308      851. #> 5 Burkina Faso Africa     1952    32.0 4469979      543."},{"path":[]},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"googlesheets4-111","dir":"Changelog","previous_headings":"","what":"googlesheets4 1.1.1","title":"googlesheets4 1.1.1","text":"CRAN release: 2023-06-11 gs4_auth(subject =) new argument can used gs4_auth(path =), .e. using service account. path subject arguments ultimately processed gargle::credentials_service_account() support use service account impersonate normal user. gs4_scopes() new function access scopes relevant Sheets Drive APIs. called without arguments, gs4_scopes() returns named vector scopes, names associated short aliases. gs4_scopes() can also called character vector; element ’s recognized short alias replaced associated full scope (#291). Various internal changes sync gargle v1.5.0.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"googlesheets4-110","dir":"Changelog","previous_headings":"","what":"googlesheets4 1.1.0","title":"googlesheets4 1.1.0","text":"CRAN release: 2023-03-23","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"syncing-up-with-gargle-1-1-0","dir":"Changelog","previous_headings":"","what":"Syncing up with gargle","title":"googlesheets4 1.1.0","text":"Version 1.3.0 gargle introduced changes around OAuth googlesheets4 syncing : gs4_oauth_client() new function replace now-deprecated gs4_oauth_app(). new client argument gs4_auth_configure() replaces now-deprecated app argument. documentation gs4_auth_configure() emphasizes preferred way “bring OAuth client” providing JSON downloaded Google Developers Console.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"other-1-1-0","dir":"Changelog","previous_headings":"","what":"Other","title":"googlesheets4 1.1.0","text":"gs4_auth() now warns user specifies email path, almost always error.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"googlesheets4-101","dir":"Changelog","previous_headings":"","what":"googlesheets4 1.0.1","title":"googlesheets4 1.0.1","text":"CRAN release: 2022-08-13 mere existence invalid named range longer prevents googlesheets4 dealing Sheet (#175). googlesheets4 now understands Google Sheets can 10 million cells (5 million) (#257).","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"internal-matters-1-0-1","dir":"Changelog","previous_headings":"","what":"Internal matters","title":"googlesheets4 1.0.1","text":"Help files man/ re-generated, give rise valid HTML5. (impetus release, keep package safely CRAN.) Examples now use @examplesIf express token interactive session required successful execution. Errors revised (often) reveal appropriate call, .e. high-level function called user opposed internal helper (#255). Informative messages now route cli::cli_inform(), instead cli::cli_bullets().","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"googlesheets4-100","dir":"Changelog","previous_headings":"","what":"googlesheets4 1.0.0","title":"googlesheets4 1.0.0","text":"CRAN release: 2021-07-21","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"user-interface-1-0-0","dir":"Changelog","previous_headings":"","what":"User interface","title":"googlesheets4 1.0.0","text":"user interface gotten stylish, thanks cli package (https://cli.r-lib.org). informational messages, warnings, errors now emitted via cli, uses rlang’s condition functions --hood. googlesheets4 now throws errors class \"googlesheets4_error\" (#12). googlesheets4_quiet new option suppress informational messages googlesheets4 (#163). Unless ’s explicitly set TRUE, default message. local_gs4_quiet() with_gs4_quiet() withr-style convenience helpers setting googlesheets4_quiet = TRUE.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"other-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Other changes","title":"googlesheets4 1.0.0","text":"deprecated sheets_*() functions now removed, promised warning throwing year. functionality removed, just result function (re-)naming scheme adopted googlesheets4 >= 0.2.0. details developer documentation. na argument read_sheet() become capable consistent readr. Specifically, na = character() (general lack \"\" among na strings) results cells data appearing empty string \"\" within character vector, opposed NA (#174). Explicit NULLs now written properly, .e. empty cell (#203). sheet_append() longer touches aspect cell formatting numberFormat (#204). gs4_example() gs4_examples() now learn example Sheet ids Google Sheet. change anything users, means API call first time either functions called.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"dependency-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Dependency changes","title":"googlesheets4 1.0.0","text":"cli new Imports. googlesheets4 Suggests testthat >= 3.0.0 , specifically, uses third edition features. R 3.4 now oldest version explicitly supported tested, per tidyverse policy.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"googlesheets4-030","dir":"Changelog","previous_headings":"","what":"googlesheets4 0.3.0","title":"googlesheets4 0.3.0","text":"CRAN release: 2021-03-04 requests now made retry capability. Specifically, request fails due 429 RESOURCE_EXHAUSTED error, retried times, suitable delays. Note appears personally exhausted quota (100 requests 100 seconds), initial waiting time 100 seconds indicates need get OAuth app service account. googlesheets4 googledrive used together session, alert ’re logged package different Google identities. gs4_get() retrieves information protected ranges.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"googlesheets4-020","dir":"Changelog","previous_headings":"","what":"googlesheets4 0.2.0","title":"googlesheets4 0.2.0","text":"CRAN release: 2020-05-08 googlesheets4 can now write modify Sheets. Several new articles available googlesheets4.tidyverse.org.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"function-naming-scheme-0-2-0","dir":"Changelog","previous_headings":"","what":"Function naming scheme","title":"googlesheets4 0.2.0","text":"universal sheets_ prefix replaced scheme conveys information scope function. three prefixes: gs4_: refers variously googlesheets4 package, v4 Google Sheets API, operations one (spread)Sheets sheet_: operations one (work)sheets range_: operations range cells addition write/edit functionality resulted many new functions original naming scheme proved problematic. article Function class names contains detail. function present previous CRAN release, v0.1.1, still works, triggers warning strong encouragement switch current name.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"write-sheets-0-2-0","dir":"Changelog","previous_headings":"","what":"Write Sheets","title":"googlesheets4 0.2.0","text":"googlesheets4 now broad capabilities around Sheet creation modification. functions ready general use still marked experimental, may see refinement based user feedback. gs4_create() creates new Google Sheet , optionally, writes one data frames (#61). sheet_write() (also available write_sheet()) writes data frame new existing (work)sheet, inside existing (new) (spread)Sheet. sheet_append() adds rows existing data table. range_write() writes cell range. range_flood() “floods” cells range content. range_clear() wrapper around range_flood() special case clearing cell values. range_delete() deletes range cells.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"worksheet-operations-0-2-0","dir":"Changelog","previous_headings":"","what":"(Work)sheet operations","title":"googlesheets4 0.2.0","text":"sheet_*() family functions operate (work)sheets inside existing (spread)Sheet: (sheet_write() sheet_append() described .) sheet_properties() returns tibble metadata one row per sheet. sheet_names() returns sheet names. sheet_add() adds one sheets. sheet_copy() copies sheet. sheet_delete() deletes one sheets. sheet_relocate() moves sheets around. sheet_rename() renames one sheet. sheet_resize() changes number rows columns sheet.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"range-operations-0-2-0","dir":"Changelog","previous_headings":"","what":"Range operations","title":"googlesheets4 0.2.0","text":"range_speedread() reads Sheet using “export=csv” URL , therefore, uses readr-style column type specification. still supports fairly general range syntax auth. large Sheets, can substantially faster read_sheet(). range_read_cells() (formerly known sheets_cells()) gains two new arguments make possible get data cells. default, get fields needed parse cells contain values. range_read_cells(cell_data = \"full\", discard_empty = FALSE) now available want full cell data, including formatting, even cells value (#4). range_autofit() adjusts column width row height fit data. affects display sheet change values dimensions.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"printing-a-sheet-id-0-2-0","dir":"Changelog","previous_headings":"","what":"Printing a Sheet ID","title":"googlesheets4 0.2.0","text":"print method sheets_id objects now attempts reveal current Sheet metadata available via gs4_get(), .e. makes API call (never error).","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"other-changes-and-additions-0-2-0","dir":"Changelog","previous_headings":"","what":"Other changes and additions","title":"googlesheets4 0.2.0","text":"gs_formula() implements vctrs S3 class storing Sheets formulas. gs4_fodder() convenience function creates filler data frame can use make toy sheets ’re using practice reprex.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"renamed-classes-0-2-0","dir":"Changelog","previous_headings":"","what":"Renamed classes","title":"googlesheets4 0.2.0","text":"S3 class sheets_Spreadsheet renamed googlesheets4_spreadsheet, consequence rationalizing internal external classes (detailed article Function class names). googlesheets4_spreadsheet class holds metadata Sheet connected API’s Spreadsheet schema. return value gs4_get() class.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"googlesheets4 0.2.0","text":"read_sheet() passes na argument helpers parse cells, na actually documented effect (#73).","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"googlesheets4-011","dir":"Changelog","previous_headings":"","what":"googlesheets4 0.1.1","title":"googlesheets4 0.1.1","text":"CRAN release: 2020-03-21 Patch release modify test fixture, compatible tibble v3.0. Related tibble’s increased type strictness.","code":""},{"path":"https://googlesheets4.tidyverse.org/dev/news/index.html","id":"googlesheets4-010","dir":"Changelog","previous_headings":"","what":"googlesheets4 0.1.0","title":"googlesheets4 0.1.0","text":"CRAN release: 2019-11-04 Added NEWS.md file track changes package.","code":""}]
